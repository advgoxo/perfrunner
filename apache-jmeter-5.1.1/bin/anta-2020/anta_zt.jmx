<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath">C:\apache-jmeter-5.1.1\lib\ext\antajmeter.jar,C:\apache-jmeter-5.1.1\lib\ext\fastjson-1.2.62.jar,C:\apache-jmeter-5.1.1\lib\ext\qimen-sdk-1.0.jar,C:\apache-jmeter-5.1.1\lib\ext\spring-core-4.3.12.RELEASE.jar,/Users/toplin/Documents/apache-jmeter-5.1.1/lib/ext/antajmeter.jar,/Users/toplin/Documents/apache-jmeter-5.1.1/lib/ext/fastjson-1.2.62.jar,/Users/toplin/Documents/apache-jmeter-5.1.1/lib/ext/qimen-sdk-1.0.jar,/Users/toplin/Documents/apache-jmeter-5.1.1/lib/ext/spring-core-4.3.12.RELEASE.jar</stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="ip1" elementType="Argument">
            <stringProp name="Argument.name">ip1</stringProp>
            <stringProp name="Argument.value">10.211.115.120</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">测试环境内网地址1</stringProp>
          </elementProp>
          <elementProp name="ip2" elementType="Argument">
            <stringProp name="Argument.name">ip2</stringProp>
            <stringProp name="Argument.value">10.211.115.120</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">测试环境内网地址2</stringProp>
          </elementProp>
          <elementProp name="wan" elementType="Argument">
            <stringProp name="Argument.name">wan</stringProp>
            <stringProp name="Argument.value">121.199.192.140</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">测试环境外网地址</stringProp>
          </elementProp>
          <elementProp name="xenv" elementType="Argument">
            <stringProp name="Argument.name">xenv</stringProp>
            <stringProp name="Argument.value">${__P(xenv,beta)}</stringProp>
            <stringProp name="Argument.desc">命令行-J参数</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="xhome" elementType="Argument">
            <stringProp name="Argument.name">xhome</stringProp>
            <stringProp name="Argument.value">${__P(xhome,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="xplan" elementType="Argument">
            <stringProp name="Argument.name">xplan</stringProp>
            <stringProp name="Argument.value">${__P(xplan,100)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="xport" elementType="Argument">
            <stringProp name="Argument.name">xport</stringProp>
            <stringProp name="Argument.value">${__if(${__P(xenv,beta)},debug,8085,8085,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="errSamplerFile" elementType="Argument">
            <stringProp name="Argument.name">errSamplerFile</stringProp>
            <stringProp name="Argument.value">${__xhome(xreport/zt/${__P(xplan,100)}/error-${__machineIP()}.log,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="订单适配参数化" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">400</stringProp>
        <stringProp name="ThreadGroup.ramp_time">60</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${__if(${xenv},debug,${wan},${__RandomFromMultipleVars(ip1|ip2,)},)}</stringProp>
          <stringProp name="HTTPSampler.port">8085</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="商品数据" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">data/goods.csv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">goodsId,singleProductId,sku,barcode</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="店铺数据" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">data/shops.csv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">shopId,shopCode,shopName</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="计数器" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end">5</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">qty</stringProp>
          <stringProp name="CounterConfig.format">0</stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="订单促销" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;dataContent&quot;:&quot;[{\&quot;orderBillNo\&quot;:\&quot;PF${__time(yyMMddHHmmss,)}${__Random(111111,999999,)}\&quot;,\&quot;memberId\&quot;:\&quot;0\&quot;,\&quot;orderTime\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;,\&quot;paySettleMethodId\&quot;:\&quot;100081\&quot;,\&quot;qtyTotal\&quot;:\&quot;${qty}\&quot;,\&quot;amountTotal\&quot;:${__Random(111,999,)},\&quot;orgId\&quot;:\&quot;313625\&quot;,\&quot;shopId\&quot;:\&quot;${shopId}\&quot;,\&quot;singleProducts\&quot;:[{\&quot;goodsId\&quot;:\&quot;${goodsId}\&quot;,\&quot;singleProductId\&quot;:\&quot;${singleProductId}\&quot;,\&quot;platformGoodsId\&quot;:\&quot;11826293641\&quot;,\&quot;qty\&quot;:\&quot;${qty}\&quot;,\&quot;amount\&quot;:${__Random(111,999,)},\&quot;isGift\&quot;:0}],\&quot;payDate\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;}]&quot;,&quot;token&quot;:&quot;admin&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/service/calculatePromotionService/calculatePromotion?${ddcx_urlvar}&amp;sign=${ddcx_sign}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ddcx_urlvar" elementType="Argument">
                <stringProp name="Argument.name">ddcx_urlvar</stringProp>
                <stringProp name="Argument.value">app_key=23212136&amp;target_app_key=23212136&amp;method=baison.eplus.orderdistribute.promotion&amp;timestamp=2019-02-18 15:05:24&amp;app_secret=437bd4a3f04b2cce8ccc41924b09dc49&amp;format=json&amp;sign_method=md5&amp;v=2.0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ddcx_secret" elementType="Argument">
                <stringProp name="Argument.name">ddcx_secret</stringProp>
                <stringProp name="Argument.value">437bd4a3f04b2cce8ccc41924b09dc49</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.anta.jmeter.AntaRSAUtil;
import org.apache.jmeter.config.Arguments;

Arguments args = sampler.getArguments();
String postjson = vars.get(&quot;ddcx_urlvar&quot;);
String secret= vars.get(&quot;ddcx_secret&quot;);
String content = args.toString();


String sign = AntaRSAUtil.generaSignature(postjson, content.substring(1, content.length()-2), secret);
vars.put(&quot;ddcx_sign&quot;,sign);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1100399465">&quot;result&quot;:&quot;SUCCESS&quot;,&quot;success&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器_ddcx_result" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">ddcx_result</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;result&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 缓存响应数据" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">// cache response data for monitor write file
vars.put(&quot;xResponseData&quot;, prev.getResponseDataAsString());

//
//System.out.println(&quot;sampler response data is &quot; + prev.getResponseDataAsString());</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果（If）控制器" enabled="true">
          <stringProp name="IfController.condition">${__jexl3(&quot;${ddcx_result}&quot; == &quot;SUCCESS&quot;,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="订单分单" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;dataContent&quot;:&quot;[{\&quot;orderBillNo\&quot;:\&quot;TS${__time(yyMMddhhmmss,)}${__Random(111111,999999,)}\&quot;,\&quot;shopCode\&quot;:\&quot;${shopCode}\&quot;,\&quot;supportCashOnDelivery\&quot;:0,\&quot;preSaleOrderBill\&quot;:0,\&quot;orderBusinessType\&quot;:\&quot;\&quot;,\&quot;contryCode\&quot;:\&quot;1\&quot;,\&quot;provinceCode\&quot;:\&quot;430000\&quot;,\&quot;cityCode\&quot;:\&quot;430200\&quot;,\&quot;areaCode\&quot;:\&quot;430225\&quot;,\&quot;skuDetail\&quot;:[{\&quot;sku\&quot;:\&quot;${sku}\&quot;,\&quot;barcode\&quot;:\&quot;${barcode}\&quot;,\&quot;qty\&quot;:\&quot;${__Random(1,5,)}\&quot;,\&quot;isGift\&quot;:\&quot;0\&quot;}],\&quot;isPureGift\&quot;:1}]&quot;,&quot;token&quot;:&quot;admin&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/service/orderDistributeCalculateService/distributeOrder?${ddfd_urlvar}&amp;sign=${ddfd_sign}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="商品数据2" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="filename">data/goods_2.csv</stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">goodsId_2,singleProductId_2,sku_2,barcode_2</stringProp>
            </CSVDataSet>
            <hashTree/>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ddfd_urlvar" elementType="Argument">
                  <stringProp name="Argument.name">ddfd_urlvar</stringProp>
                  <stringProp name="Argument.value">app_key=23212136&amp;target_app_key=23212136&amp;method=baison.eplus.orderdistribute.distributeorder&amp;timestamp=2019-02-18 15:05:24&amp;app_secret=437bd4a3f04b2cce8ccc41924b09dc49&amp;format=json&amp;sign_method=md5&amp;v=2.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ddfd_secret" elementType="Argument">
                  <stringProp name="Argument.name">ddfd_secret</stringProp>
                  <stringProp name="Argument.value">437bd4a3f04b2cce8ccc41924b09dc49</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.anta.jmeter.AntaRSAUtil;
import org.apache.jmeter.config.Arguments;

Arguments args = sampler.getArguments();
String postjson = vars.get(&quot;ddfd_urlvar&quot;);
String secret= vars.get(&quot;ddfd_secret&quot;);
String content = args.toString();

String sign = AntaRSAUtil.generaSignature(postjson, content.substring(1, content.length()-2), secret);
vars.put(&quot;ddfd_sign&quot;,sign);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-billNo" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">billNo</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;orderBillNo&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-wareHouseId_return" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">wareHouseId_return</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;wareHouseId&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-wareHouseCode_return" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">wareHouseCode_return</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;areaId&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-goodsId_return" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">goodsId_return</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;goodsId&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-qty_return" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">qty</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;qtyLock&quot;:(.+?)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-barcode_return" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">barcode_return</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;barcode&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1100399465">&quot;result&quot;:&quot;SUCCESS&quot;,&quot;success&quot;:true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器_ddfd_result" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">ddfd_result</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;result&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 缓存响应数据" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">// cache response data for monitor write file
vars.put(&quot;xResponseData&quot;, prev.getResponseDataAsString());

//
//System.out.println(&quot;sampler response data is &quot; + prev.getResponseDataAsString());</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果（If）控制器" enabled="true">
            <stringProp name="IfController.condition">${__jexl3(&quot;${ddfd_result}&quot; == &quot;SUCCESS&quot;,)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="订单创建" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;dataContent&quot;:&quot;[{\&quot;billNo\&quot;:\&quot;${billNo}\&quot;,\&quot;sourceBillNo\&quot;:\&quot;101161987989\&quot;,\&quot;businessDate\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;,\&quot;type\&quot;:1,\&quot;billDate\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;,\&quot;isFromOMS\&quot;:1,\&quot;channelId\&quot;:\&quot;313625\&quot;,\&quot;channelCode\&quot;:\&quot;999902A005\&quot;,\&quot;channelName\&quot;:\&quot;\\u5317\\u4eac\\u5409\\u5143\\u76db\\u5b9d\\u56fd\\u9645\\u8d38\\u6613\\u6709\\u9650\\u516c\\u53f8\&quot;,\&quot;shopId\&quot;:\&quot;170\&quot;,\&quot;shopCode\&quot;:\&quot;BJJY_ANTAFXJDOB\&quot;,\&quot;shopName\&quot;:\&quot;\\u5317\\u4eac\\u5409\\u5143\\u5b89\\u8e0f\\u4eac\\u4e1c\\u4e13\\u5356\\u5e97\&quot;,\&quot;wareHouseId\&quot;:\&quot;100031\&quot;,\&quot;wareHouseCode\&quot;:\&quot;CK_BJQZSC\&quot;,\&quot;wareHouseName\&quot;:\&quot;\\u5317\\u4eac\\u5206\\u9500\\u6cc9\\u5ddeB2C\\u5b9e\\u4ed3\&quot;,\&quot;whareaTypeId\&quot;:\&quot;100002\&quot;,\&quot;whareaTypeCode\&quot;:\&quot;SL001\&quot;,\&quot;whareaTypeName\&quot;:\&quot;\\u6b63\\u54c1\\u5e93\\u4f4d\&quot;,\&quot;vipCardNO\&quot;:\&quot;jd_pepgumdtmyrw\&quot;,\&quot;memberName\&quot;:\&quot;\\u502a\\u7389\\u5fae\&quot;,\&quot;memberNickName\&quot;:\&quot;jd_pepgumdtmyrw\&quot;,\&quot;qty\&quot;:\&quot;${qty}\&quot;,\&quot;amountGoods\&quot;:\&quot;119.00\&quot;,\&quot;totalTaxPrice\&quot;:\&quot;119.00\&quot;,\&quot;amountStandard\&quot;:\&quot;279.00\&quot;,\&quot;amountTotal\&quot;:\&quot;279.00\&quot;,\&quot;amountTag\&quot;:\&quot;279.00\&quot;,\&quot;goodsConcession\&quot;:\&quot;160.00\&quot;,\&quot;amountDiscount\&quot;:\&quot;10.00\&quot;,\&quot;otherConcession\&quot;:\&quot;10.00\&quot;,\&quot;cashCouponAmount\&quot;:0,\&quot;orderType\&quot;:\&quot;0\&quot;,\&quot;expressFee\&quot;:\&quot;0.00\&quot;,\&quot;freight\&quot;:\&quot;0.00\&quot;,\&quot;logisticsExtraFee\&quot;:\&quot;0.00\&quot;,\&quot;distributionfeeAmount\&quot;:\&quot;0.00\&quot;,\&quot;amountActual\&quot;:\&quot;109.00\&quot;,\&quot;payableAmount\&quot;:\&quot;109.00\&quot;,\&quot;amountPaid\&quot;:\&quot;109.00\&quot;,\&quot;status\&quot;:1,\&quot;distributionState\&quot;:\&quot;2\&quot;,\&quot;payState\&quot;:\&quot;2\&quot;,\&quot;payDate\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;,\&quot;settleMethodId\&quot;:\&quot;100081\&quot;,\&quot;settleMethodCode\&quot;:\&quot;chinabank\&quot;,\&quot;settleMethodName\&quot;:\&quot;\\u7f51\\u94f6\\u5728\\u7ebf\&quot;,\&quot;remarks\&quot;:\&quot;\&quot;,\&quot;buyMsg\&quot;:\&quot;\&quot;,\&quot;platformId\&quot;:5,\&quot;platformCode\&quot;:\&quot;jingdong\&quot;,\&quot;platformName\&quot;:\&quot;\\u4eac\\u4e1c\&quot;,\&quot;currencyTypeId\&quot;:200012,\&quot;currencyTypeCode\&quot;:\&quot;RMB\&quot;,\&quot;currencyTypeName\&quot;:\&quot;\\u4eba\\u6c11\\u5e01\&quot;,\&quot;invoiceType\&quot;:\&quot;\&quot;,\&quot;invoiceContent\&quot;:\&quot;\&quot;,\&quot;invoicePayType\&quot;:0,\&quot;invoiceTitle\&quot;:\&quot;\&quot;,\&quot;invoiceAmount\&quot;:\&quot;109\&quot;,\&quot;invoiceNumber\&quot;:\&quot;\&quot;,\&quot;invoiceStatus\&quot;:\&quot;\&quot;,\&quot;goodsDetail\&quot;:[{\&quot;billNo\&quot;:\&quot;${billNo}\&quot;,\&quot;goodsId\&quot;:\&quot;${goodsId}\&quot;,\&quot;goodsCode\&quot;:\&quot;31831104-1\&quot;,\&quot;goodsName\&quot;:\&quot;\\u7bee\\u7403\\u978b\&quot;,\&quot;singleProductId\&quot;:\&quot;${singleProductId}\&quot;,\&quot;referencePrice\&quot;:\&quot;299.00\&quot;,\&quot;priceCost\&quot;:\&quot;0.00\&quot;,\&quot;priceStandard\&quot;:\&quot;299.00\&quot;,\&quot;shopPrice\&quot;:\&quot;279.00\&quot;,\&quot;priceTag\&quot;:\&quot;279.00\&quot;,\&quot;price\&quot;:\&quot;119.00\&quot;,\&quot;sharePrice\&quot;:\&quot;109.00\&quot;,\&quot;amountSettle\&quot;:\&quot;109.00\&quot;,\&quot;amount\&quot;:\&quot;119.00\&quot;,\&quot;qty\&quot;:\&quot;${qty}\&quot;,\&quot;amountCost\&quot;:0,\&quot;amountStandard\&quot;:279,\&quot;amountTag\&quot;:279,\&quot;amountSale\&quot;:119,\&quot;amountDiscount\&quot;:\&quot;160.00\&quot;,\&quot;isGift\&quot;:\&quot;0\&quot;,\&quot;isExchange\&quot;:\&quot;0\&quot;,\&quot;qtyReturned\&quot;:\&quot;0\&quot;,\&quot;discount\&quot;:\&quot;0.4265\&quot;,\&quot;barcode\&quot;:\&quot;${barcode}\&quot;,\&quot;oid\&quot;:\&quot;\&quot;,\&quot;VoucherCode\&quot;:\&quot;\&quot;,\&quot;setMealSpec\&quot;:\&quot;\&quot;,\&quot;otherConcession\&quot;:null}],\&quot;settleDetails\&quot;:[{\&quot;billNo\&quot;:\&quot;${billNo}\&quot;,\&quot;settleMethodId\&quot;:\&quot;100081\&quot;,\&quot;code\&quot;:\&quot;chinabank\&quot;,\&quot;name\&quot;:\&quot;\\u7f51\\u94f6\\u5728\\u7ebf\&quot;,\&quot;amountSettle\&quot;:\&quot;109.00\&quot;,\&quot;amountPaidIn\&quot;:\&quot;109.00\&quot;,\&quot;integralUsed\&quot;:\&quot;0\&quot;,\&quot;billNoRef\&quot;:\&quot;\&quot;,\&quot;remarks\&quot;:\&quot;\&quot;,\&quot;retailOrderBillId\&quot;:\&quot;7346995607300472832\&quot;,\&quot;payDate\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;}],\&quot;antaDistributionInfos\&quot;:[{\&quot;billNo\&quot;:\&quot;${billNo}\&quot;,\&quot;onlineShopTransNo\&quot;:\&quot;101161987989\&quot;,\&quot;TBDistriPurNo\&quot;:\&quot;\&quot;,\&quot;TBDistriTradeNo\&quot;:\&quot;\&quot;,\&quot;alipayTransNo\&quot;:\&quot;\&quot;,\&quot;receiver\&quot;:\&quot;\\u502a\\u7389\\u5fae\&quot;,\&quot;addressDesc\&quot;:\&quot;\\u6e56\\u5357\\u7701 \\u682a\\u6d32\\u5e02 \\u708e\\u9675\\u53bf \\u971e\\u9633\\u9547\\u9f99\\u4e95\\u5c0f\\u533a\&quot;,\&quot;receiverTel\&quot;:\&quot;18627537337\&quot;,\&quot;mobile\&quot;:\&quot;18627537337\&quot;,\&quot;email\&quot;:\&quot;\&quot;,\&quot;countryId\&quot;:\&quot;1\&quot;,\&quot;provinceId\&quot;:\&quot;430000\&quot;,\&quot;cityId\&quot;:\&quot;430200\&quot;,\&quot;districtId\&quot;:\&quot;430225\&quot;,\&quot;address\&quot;:\&quot;\\u971e\\u9633\\u9547\\u9f99\\u4e95\\u5c0f\\u533a\&quot;,\&quot;zipCode\&quot;:\&quot;\&quot;,\&quot;deliveryTypeId\&quot;:0,\&quot;deliveryTypeCode\&quot;:\&quot;\&quot;,\&quot;deliveryTypeName\&quot;:\&quot;\&quot;,\&quot;deliveryNo\&quot;:\&quot;\&quot;,\&quot;wareHouseOutId\&quot;:\&quot;100031\&quot;,\&quot;whareaTypeOutId\&quot;:\&quot;100002\&quot;,\&quot;weigh\&quot;:\&quot;0.00\&quot;,\&quot;wareHouseDefaultId\&quot;:\&quot;100031\&quot;,\&quot;wareHouseRealId\&quot;:\&quot;100031\&quot;}],\&quot;createDate\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;,\&quot;salesPromotion\&quot;:\&quot;\&quot;,\&quot;couponsInfo\&quot;:\&quot;\&quot;}]&quot;,&quot;token&quot;:&quot;admin&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/service/retailOrderService/create?${ddcj_urlvar}&amp;sign=${ddcj_sign}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ddcj_urlvar" elementType="Argument">
                    <stringProp name="Argument.name">ddcj_urlvar</stringProp>
                    <stringProp name="Argument.value">app_key=23212136&amp;target_app_key=23212136&amp;method=baison.eplus.retailorderbill.create&amp;timestamp=2019-02-18 15:05:24&amp;app_secret=437bd4a3f04b2cce8ccc41924b09dc49&amp;format=json&amp;sign_method=md5&amp;v=2.0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="ddcj_secret" elementType="Argument">
                    <stringProp name="Argument.name">ddcj_secret</stringProp>
                    <stringProp name="Argument.value">437bd4a3f04b2cce8ccc41924b09dc49</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </Arguments>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.anta.jmeter.AntaRSAUtil;
import org.apache.jmeter.config.Arguments;

Arguments args = sampler.getArguments();
String postjson = vars.get(&quot;ddcj_urlvar&quot;);
String secret= vars.get(&quot;ddcj_secret&quot;);
String content = args.toString();

String sign = AntaRSAUtil.generaSignature(postjson, content.substring(1, content.length()-2), secret);
vars.put(&quot;ddcj_sign&quot;,sign);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1100399465">&quot;result&quot;:&quot;SUCCESS&quot;,&quot;success&quot;:true</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器_ddcj_result" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ddcj_result</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;result&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 缓存响应数据" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">// cache response data for monitor write file
vars.put(&quot;xResponseData&quot;, prev.getResponseDataAsString());

//
//System.out.println(&quot;sampler response data is &quot; + prev.getResponseDataAsString());</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果（If）控制器" enabled="true">
              <stringProp name="IfController.condition">${__jexl3(&quot;${ddcj_result}&quot; == &quot;SUCCESS&quot;,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="快递适配" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;dataContent&quot;:&quot;[{\&quot;billNo\&quot;:\&quot;${billNo}\&quot;,\&quot;wareHouseId\&quot;:\&quot;${wareHouseId_return}\&quot;,\&quot;shopId\&quot;:\&quot;${shopId}\&quot;,\&quot;platformCode\&quot;:\&quot;jingdong\&quot;,\&quot;payState\&quot;:\&quot;2\&quot;,\&quot;totalWeigh\&quot;:\&quot;0.00\&quot;,\&quot;amountTotal\&quot;:\&quot;109.00\&quot;,\&quot;provinceId\&quot;:\&quot;430000\&quot;,\&quot;cityId\&quot;:\&quot;430200\&quot;,\&quot;districtId\&quot;:\&quot;430225\&quot;,\&quot;ordertype\&quot;:0,\&quot;platformGoodsIds\&quot;:[]}]&quot;,&quot;token&quot;:&quot;admin&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/service/regionalExpressService/filterExpress?${kdsp_urlvar}&amp;sign=${kdsp_sign}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="kdsp_urlvar" elementType="Argument">
                      <stringProp name="Argument.name">kdsp_urlvar</stringProp>
                      <stringProp name="Argument.value">app_key=23212136&amp;target_app_key=23212136&amp;method=baison.eplus.orderdistribute.shipping&amp;timestamp=2019-02-18 15:05:24&amp;app_secret=437bd4a3f04b2cce8ccc41924b09dc49&amp;format=json&amp;sign_method=md5&amp;v=2.0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="kdsp_secret" elementType="Argument">
                      <stringProp name="Argument.name">kdsp_secret</stringProp>
                      <stringProp name="Argument.value">437bd4a3f04b2cce8ccc41924b09dc49</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="billNoFile" elementType="Argument">
                      <stringProp name="Argument.name">billNoFile</stringProp>
                      <stringProp name="Argument.value">c:\\apache-jmeter-5.1.1\\bin\\script\\data\\billNo.csv</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </Arguments>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import com.anta.jmeter.AntaRSAUtil;
import org.apache.jmeter.config.Arguments;

Arguments args = sampler.getArguments();
String postjson = vars.get(&quot;kdsp_urlvar&quot;);
String secret= vars.get(&quot;kdsp_secret&quot;);
String content = args.toString();

String sign = AntaRSAUtil.generaSignature(postjson, content.substring(1, content.length()-2), secret);
vars.put(&quot;kdsp_sign&quot;,sign);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1100399465">&quot;result&quot;:&quot;SUCCESS&quot;,&quot;success&quot;:true</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-logisticsCode_return" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">logisticsCode_return</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;code&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-logisticsName_return" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">logisticsName_return</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;name&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器_kdsp_result" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">kdsp_result</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;result&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 后置处理程序" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import com.anta.jmeter.WriteFileUtil;

String billNo = vars.get(&quot;billNo&quot;);
String billNoFile=vars.get(&quot;billNoFile&quot;);

WriteFileUtil.writeFile(billNoFile,billNo);</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 缓存响应数据" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">// cache response data for monitor write file
vars.put(&quot;xResponseData&quot;, prev.getResponseDataAsString());

//
//System.out.println(&quot;sampler response data is &quot; + prev.getResponseDataAsString());</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果（If）控制器" enabled="false">
                <stringProp name="IfController.condition">${__jexl3(&quot;${kdsp_result}&quot; == &quot;SUCCESS&quot;,)}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
                <boolProp name="IfController.useExpression">true</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="推送WMS_FXOMS" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;request&gt;&lt;deliveryOrder&gt;&lt;deliveryOrderCode&gt;${billNo}&lt;/deliveryOrderCode&gt;&lt;orderType&gt;JYCK&lt;/orderType&gt;&lt;warehouseCode&gt;16&lt;/warehouseCode&gt;&lt;orderFlag/&gt;&lt;sourcePlatformCode&gt;JD&lt;/sourcePlatformCode&gt;&lt;sourcePlatformName&gt;京东&lt;/sourcePlatformName&gt;&lt;createTime&gt;2019-08-19 23:01:48&lt;/createTime&gt;&lt;placeOrderTime&gt;2019-08-19 23:01:48&lt;/placeOrderTime&gt;&lt;payTime&gt;2019-08-19 23:02:01&lt;/payTime&gt;&lt;payNo&gt;101161987989&lt;/payNo&gt;&lt;operateTime&gt;2019-08-19 23:02:08&lt;/operateTime&gt;&lt;shopNick&gt;${shopName}&lt;/shopNick&gt;&lt;buyerNick&gt;jd_pepgumdtmyrw&lt;/buyerNick&gt;&lt;totalAmount&gt;109.00&lt;/totalAmount&gt;&lt;itemAmount&gt;119.00&lt;/itemAmount&gt;&lt;discountAmount&gt;10.00&lt;/discountAmount&gt;&lt;freight&gt;0.00&lt;/freight&gt;&lt;arAmount&gt;0&lt;/arAmount&gt;&lt;gotAmount&gt;109.00&lt;/gotAmount&gt;&lt;logisticsCode&gt;${logisticsCode_return}&lt;/logisticsCode&gt;&lt;logisticsName&gt;${logisticsName_return}&lt;/logisticsName&gt;&lt;buyerMessage/&gt;&lt;expressCode/&gt;&lt;sellerMessage/&gt;&lt;remark/&gt;&lt;senderInfo&gt;&lt;name&gt;孙艳波&lt;/name&gt;&lt;zipCode&gt;362261&lt;/zipCode&gt;&lt;tel&gt;010-85893455-8098&lt;/tel&gt;&lt;mobile&gt;010-85893455-8098&lt;/mobile&gt;&lt;email/&gt;&lt;province&gt;福建省&lt;/province&gt;&lt;city&gt;泉州市&lt;/city&gt;&lt;area&gt;晋江市&lt;/area&gt;&lt;detailAddress&gt;福建省泉州市晋江市五里工业区欣鑫22号鸿达物流3号仓库&lt;/detailAddress&gt;&lt;/senderInfo&gt;&lt;receiverInfo&gt;&lt;name&gt;倪玉微&lt;/name&gt;&lt;zipCode/&gt;&lt;tel&gt;18627537337&lt;/tel&gt;&lt;mobile&gt;18627537337&lt;/mobile&gt;&lt;email/&gt;&lt;countryCode&gt;中国&lt;/countryCode&gt;&lt;province&gt;湖南省&lt;/province&gt;&lt;city&gt;株洲市&lt;/city&gt;&lt;area&gt;炎陵县&lt;/area&gt;&lt;detailAddress&gt;湖南省 株洲市 炎陵县 霞阳镇龙井小区&lt;/detailAddress&gt;&lt;/receiverInfo&gt;&lt;invoiceFlag&gt;N&lt;/invoiceFlag&gt;&lt;invoices&gt;&lt;invoice&gt;&lt;type/&gt;&lt;header/&gt;&lt;amount&gt;109&lt;/amount&gt;&lt;content/&gt;&lt;taxNumber/&gt;&lt;/invoice&gt;&lt;/invoices&gt;&lt;/deliveryOrder&gt;&lt;orderLines&gt;&lt;orderLine&gt;&lt;orderLineNo&gt;7&lt;/orderLineNo&gt;&lt;sourceOrderCode&gt;101161987989&lt;/sourceOrderCode&gt;&lt;subSourceOrderCode/&gt;&lt;ownerCode/&gt;&lt;itemCode&gt;6903711302583&lt;/itemCode&gt;&lt;itemId/&gt;&lt;itemName&gt;篮球鞋&lt;/itemName&gt;&lt;planQty&gt;${qty_return}&lt;/planQty&gt;&lt;actualPrice&gt;109.00&lt;/actualPrice&gt;&lt;/orderLine&gt;&lt;/orderLines&gt;&lt;extendProps&gt;&lt;isv_pack_type_no&gt;attr1490838854282&lt;/isv_pack_type_no&gt;&lt;extend&gt;[{&quot;erp_order_line_num&quot;:&quot;7&quot;,&quot;oid&quot;:&quot;&quot;,&quot;goods_id&quot;:&quot;${goodsId_return}&quot;,&quot;goods_sn&quot;:&quot;31831104-1&quot;,&quot;shop_price&quot;:&quot;279.00&quot;,&quot;discount&quot;:&quot;0.4265&quot;,&quot;discount_fee&quot;:&quot;160.00&quot;,&quot;payment&quot;:&quot;119.00&quot;,&quot;share_price&quot;:&quot;109.00&quot;,&quot;share_payment&quot;:&quot;109.00&quot;,&quot;share_discount_fee&quot;:&quot;150.00&quot;,&quot;cost_price&quot;:&quot;0.00&quot;,&quot;market_price&quot;:&quot;299.00&quot;,&quot;goods_price&quot;:&quot;119.00&quot;,&quot;share_other_discount_fee&quot;:&quot;10.00&quot;,&quot;outer_goods_sn&quot;:&quot;30691973749&quot;,&quot;outer_sku_id&quot;:0,&quot;sku_id&quot;:&quot;1&quot;,&quot;color_id&quot;:&quot;2&quot;,&quot;size_id&quot;:&quot;2&quot;,&quot;is_gift&quot;:&quot;0&quot;,&quot;weigh&quot;:&quot;0.00&quot;,&quot;brand_id&quot;:&quot;0&quot;,&quot;cat_id&quot;:&quot;0&quot;,&quot;original_order_sn&quot;:&quot;FX1908080000001&quot;,&quot;original_deal_code&quot;:&quot;101161987989&quot;,&quot;barcode&quot;:&quot;${barcode_return}&quot;,&quot;share_shipping_fee&quot;:&quot;0.00&quot;,&quot;tc_sku_id&quot;:&quot;0&quot;,&quot;cx_id&quot;:&quot;0&quot;,&quot;is_dzp&quot;:0,&quot;goods_attr&quot;:&quot;5a6J6LiP56ul6Z6LMjAxOeaYpeeni+Wto+aWsOasvuearue9kee7k+WQiOmAj+awlOeUt+S4reWkp+erpei\/kOWKqOmei+iIkumAguWHj+mch+WEv+erpeevrueQg+meizMxODMxMTA0IOm7kS\/lpKflrabnuqIv5a6J6LiP55m9LTEgMzgv5YaF&quot;}]&lt;/extend&gt;&lt;order_id&gt;8&lt;/order_id&gt;&lt;sd_id&gt;${shopId}&lt;/sd_id&gt;&lt;shop_code&gt;${shopCode}&lt;/shop_code&gt;&lt;qd_id&gt;33&lt;/qd_id&gt;&lt;user_id&gt;0&lt;/user_id&gt;&lt;order_status&gt;1&lt;/order_status&gt;&lt;shipping_status&gt;3&lt;/shipping_status&gt;&lt;sync_status&gt;0&lt;/sync_status&gt;&lt;sync_lock&gt;1&lt;/sync_lock&gt;&lt;ck_id&gt;${wareHouseId_return}&lt;/ck_id&gt;&lt;fhck_id&gt;${wareHouseId_return}&lt;/fhck_id&gt;&lt;fhck_dm&gt;${wareHouseCode_return}&lt;/fhck_dm&gt;&lt;fhck_kw_id&gt;100002&lt;/fhck_kw_id&gt;&lt;stfhck_id&gt;0&lt;/stfhck_id&gt;&lt;stfhck_kw_id&gt;0&lt;/stfhck_kw_id&gt;&lt;receiver_country&gt;1&lt;/receiver_country&gt;&lt;receiver_province&gt;430000&lt;/receiver_province&gt;&lt;receiver_city&gt;430200&lt;/receiver_city&gt;&lt;receiver_district&gt;430225&lt;/receiver_district&gt;&lt;shipping_id&gt;149&lt;/shipping_id&gt;&lt;goods_count&gt;1&lt;/goods_count&gt;&lt;sku_count&gt;1&lt;/sku_count&gt;&lt;is_weigh&gt;0&lt;/is_weigh&gt;&lt;weigh&gt;0.00&lt;/weigh&gt;&lt;invoice_amount&gt;109&lt;/invoice_amount&gt;&lt;pay_id&gt;5&lt;/pay_id&gt;&lt;pay_name&gt;网银在线&lt;/pay_name&gt;&lt;pay_code&gt;chinabank&lt;/pay_code&gt;&lt;pay_status&gt;2&lt;/pay_status&gt;&lt;shipping_time_tzph&gt;1570624275&lt;/shipping_time_tzph&gt;&lt;total_amount&gt;279.00&lt;/total_amount&gt;&lt;market_goods_amount&gt;279.00&lt;/market_goods_amount&gt;&lt;shipping_fee&gt;0.00&lt;/shipping_fee&gt;&lt;cod_fee&gt;0.00&lt;/cod_fee&gt;&lt;other_discount_fee&gt;10.00&lt;/other_discount_fee&gt;&lt;discount_fee&gt;160.00&lt;/discount_fee&gt;&lt;is_yfp&gt;0&lt;/is_yfp&gt;&lt;status_kc&gt;1&lt;/status_kc&gt;&lt;is_combine_new&gt;0&lt;/is_combine_new&gt;&lt;is_combine&gt;0&lt;/is_combine&gt;&lt;is_split&gt;0&lt;/is_split&gt;&lt;is_split_new&gt;0&lt;/is_split_new&gt;&lt;is_copy&gt;1&lt;/is_copy&gt;&lt;is_hh&gt;0&lt;/is_hh&gt;&lt;mdck_id&gt;0&lt;/mdck_id&gt;&lt;is_customization&gt;0&lt;/is_customization&gt;&lt;cxsp/&gt;&lt;system/&gt;&lt;edit_shipping_time&gt;1570624271&lt;/edit_shipping_time&gt;&lt;outWareHouseType&gt;0&lt;/outWareHouseType&gt;&lt;priority&gt;1&lt;/priority&gt;&lt;vendor_code/&gt;&lt;carrier&gt;${logisticsCode_return}&lt;/carrier&gt;&lt;carrier_product/&gt;&lt;monthly_account/&gt;&lt;out_warehouse_type&gt;0&lt;/out_warehouse_type&gt;&lt;orig_bill_type&gt;3&lt;/orig_bill_type&gt;&lt;/extendProps&gt;&lt;/request&gt;</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/service/api/oms/FXOMS?${tswms_fxoms_urlvar}&amp;app_secret=${tswms_fxoms_secret}&amp;sign=${tswms_fxoms_sign}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="tswms_fxoms_urlvar" elementType="Argument">
                        <stringProp name="Argument.name">tswms_fxoms_urlvar</stringProp>
                        <stringProp name="Argument.value">app_key=12203817&amp;target_app_key=12203817&amp;method=taobao.qimen.deliveryorder.create&amp;timestamp=2018-08-07 13:33:48&amp;app_secret=b77988be8817404062882de0250e6567&amp;format=xml&amp;sign_method=md5&amp;v=2.0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="tswms_fxoms_postvar_header" elementType="Argument">
                        <stringProp name="Argument.name">tswms_fxoms_postvar_header</stringProp>
                        <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="tswms_fxoms_secret" elementType="Argument">
                        <stringProp name="Argument.name">tswms_fxoms_secret</stringProp>
                        <stringProp name="Argument.value">b77988be8817404062882de0250e6567</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="tswms_fxoms_postvar_content" elementType="Argument">
                        <stringProp name="Argument.name">tswms_fxoms_postvar_content</stringProp>
                        <stringProp name="Argument.value">&lt;request&gt;&lt;deliveryOrder&gt;&lt;deliveryOrderCode&gt;HQ1908190000008&lt;/deliveryOrderCode&gt;&lt;orderType&gt;JYCK&lt;/orderType&gt;&lt;warehouseCode&gt;16&lt;/warehouseCode&gt;&lt;orderFlag/&gt;&lt;sourcePlatformCode&gt;JD&lt;/sourcePlatformCode&gt;&lt;sourcePlatformName&gt;京东&lt;/sourcePlatformName&gt;&lt;createTime&gt;2019-08-19 23:01:48&lt;/createTime&gt;&lt;placeOrderTime&gt;2019-08-19 23:01:48&lt;/placeOrderTime&gt;&lt;payTime&gt;2019-08-19 23:02:01&lt;/payTime&gt;&lt;payNo&gt;101161987989&lt;/payNo&gt;&lt;operateTime&gt;2019-08-19 23:02:08&lt;/operateTime&gt;&lt;shopNick&gt;北京吉元安踏京东专卖店&lt;/shopNick&gt;&lt;buyerNick&gt;jd_pepgumdtmyrw&lt;/buyerNick&gt;&lt;totalAmount&gt;109.00&lt;/totalAmount&gt;&lt;itemAmount&gt;119.00&lt;/itemAmount&gt;&lt;discountAmount&gt;10.00&lt;/discountAmount&gt;&lt;freight&gt;0.00&lt;/freight&gt;&lt;arAmount&gt;0&lt;/arAmount&gt;&lt;gotAmount&gt;109.00&lt;/gotAmount&gt;&lt;logisticsCode&gt;YTO_BJJY&lt;/logisticsCode&gt;&lt;logisticsName&gt;圆通速递北京吉元专用&lt;/logisticsName&gt;&lt;buyerMessage/&gt;&lt;expressCode/&gt;&lt;sellerMessage/&gt;&lt;remark/&gt;&lt;senderInfo&gt;&lt;name&gt;孙艳波&lt;/name&gt;&lt;zipCode&gt;362261&lt;/zipCode&gt;&lt;tel&gt;010-85893455-8098&lt;/tel&gt;&lt;mobile&gt;010-85893455-8098&lt;/mobile&gt;&lt;email/&gt;&lt;province&gt;福建省&lt;/province&gt;&lt;city&gt;泉州市&lt;/city&gt;&lt;area&gt;晋江市&lt;/area&gt;&lt;detailAddress&gt;福建省泉州市晋江市五里工业区欣鑫22号鸿达物流3号仓库&lt;/detailAddress&gt;&lt;/senderInfo&gt;&lt;receiverInfo&gt;&lt;name&gt;倪玉微&lt;/name&gt;&lt;zipCode/&gt;&lt;tel&gt;18627537337&lt;/tel&gt;&lt;mobile&gt;18627537337&lt;/mobile&gt;&lt;email/&gt;&lt;countryCode&gt;中国&lt;/countryCode&gt;&lt;province&gt;湖南省&lt;/province&gt;&lt;city&gt;株洲市&lt;/city&gt;&lt;area&gt;炎陵县&lt;/area&gt;&lt;detailAddress&gt;湖南省 株洲市 炎陵县 霞阳镇龙井小区&lt;/detailAddress&gt;&lt;/receiverInfo&gt;&lt;invoiceFlag&gt;N&lt;/invoiceFlag&gt;&lt;invoices&gt;&lt;invoice&gt;&lt;type/&gt;&lt;header/&gt;&lt;amount&gt;109&lt;/amount&gt;&lt;content/&gt;&lt;taxNumber/&gt;&lt;/invoice&gt;&lt;/invoices&gt;&lt;/deliveryOrder&gt;&lt;orderLines&gt;&lt;orderLine&gt;&lt;orderLineNo&gt;7&lt;/orderLineNo&gt;&lt;sourceOrderCode&gt;101161987989&lt;/sourceOrderCode&gt;&lt;subSourceOrderCode/&gt;&lt;ownerCode/&gt;&lt;itemCode&gt;6903711302583&lt;/itemCode&gt;&lt;itemId/&gt;&lt;itemName&gt;篮球鞋&lt;/itemName&gt;&lt;planQty&gt;1&lt;/planQty&gt;&lt;actualPrice&gt;109.00&lt;/actualPrice&gt;&lt;/orderLine&gt;&lt;/orderLines&gt;&lt;extendProps&gt;&lt;isv_pack_type_no&gt;attr1490838854282&lt;/isv_pack_type_no&gt;&lt;extend&gt;[{&quot;erp_order_line_num&quot;:&quot;7&quot;,&quot;oid&quot;:&quot;&quot;,&quot;goods_id&quot;:&quot;109240&quot;,&quot;goods_sn&quot;:&quot;31831104-1&quot;,&quot;shop_price&quot;:&quot;279.00&quot;,&quot;discount&quot;:&quot;0.4265&quot;,&quot;discount_fee&quot;:&quot;160.00&quot;,&quot;payment&quot;:&quot;119.00&quot;,&quot;share_price&quot;:&quot;109.00&quot;,&quot;share_payment&quot;:&quot;109.00&quot;,&quot;share_discount_fee&quot;:&quot;150.00&quot;,&quot;cost_price&quot;:&quot;0.00&quot;,&quot;market_price&quot;:&quot;299.00&quot;,&quot;goods_price&quot;:&quot;119.00&quot;,&quot;share_other_discount_fee&quot;:&quot;10.00&quot;,&quot;outer_goods_sn&quot;:&quot;30691973749&quot;,&quot;outer_sku_id&quot;:0,&quot;sku_id&quot;:&quot;1&quot;,&quot;color_id&quot;:&quot;2&quot;,&quot;size_id&quot;:&quot;2&quot;,&quot;is_gift&quot;:&quot;0&quot;,&quot;weigh&quot;:&quot;0.00&quot;,&quot;brand_id&quot;:&quot;0&quot;,&quot;cat_id&quot;:&quot;0&quot;,&quot;original_order_sn&quot;:&quot;FX1908080000001&quot;,&quot;original_deal_code&quot;:&quot;101161987989&quot;,&quot;barcode&quot;:&quot;6903711302583&quot;,&quot;share_shipping_fee&quot;:&quot;0.00&quot;,&quot;tc_sku_id&quot;:&quot;0&quot;,&quot;cx_id&quot;:&quot;0&quot;,&quot;is_dzp&quot;:0,&quot;goods_attr&quot;:&quot;5a6J6LiP56ul6Z6LMjAxOeaYpeeni+Wto+aWsOasvuearue9kee7k+WQiOmAj+awlOeUt+S4reWkp+erpei\/kOWKqOmei+iIkumAguWHj+mch+WEv+erpeevrueQg+meizMxODMxMTA0IOm7kS\/lpKflrabnuqIv5a6J6LiP55m9LTEgMzgv5YaF&quot;}]&lt;/extend&gt;&lt;order_id&gt;8&lt;/order_id&gt;&lt;sd_id&gt;10170&lt;/sd_id&gt;&lt;shop_code&gt;BJJY_ANTAFXJDOB&lt;/shop_code&gt;&lt;qd_id&gt;33&lt;/qd_id&gt;&lt;user_id&gt;0&lt;/user_id&gt;&lt;order_status&gt;1&lt;/order_status&gt;&lt;shipping_status&gt;3&lt;/shipping_status&gt;&lt;sync_status&gt;0&lt;/sync_status&gt;&lt;sync_lock&gt;1&lt;/sync_lock&gt;&lt;ck_id&gt;100031&lt;/ck_id&gt;&lt;fhck_id&gt;100031&lt;/fhck_id&gt;&lt;fhck_dm&gt;CK_BJQZSC&lt;/fhck_dm&gt;&lt;fhck_kw_id&gt;100002&lt;/fhck_kw_id&gt;&lt;stfhck_id&gt;0&lt;/stfhck_id&gt;&lt;stfhck_kw_id&gt;0&lt;/stfhck_kw_id&gt;&lt;receiver_country&gt;1&lt;/receiver_country&gt;&lt;receiver_province&gt;430000&lt;/receiver_province&gt;&lt;receiver_city&gt;430200&lt;/receiver_city&gt;&lt;receiver_district&gt;430225&lt;/receiver_district&gt;&lt;shipping_id&gt;149&lt;/shipping_id&gt;&lt;goods_count&gt;1&lt;/goods_count&gt;&lt;sku_count&gt;1&lt;/sku_count&gt;&lt;is_weigh&gt;0&lt;/is_weigh&gt;&lt;weigh&gt;0.00&lt;/weigh&gt;&lt;invoice_amount&gt;109&lt;/invoice_amount&gt;&lt;pay_id&gt;5&lt;/pay_id&gt;&lt;pay_name&gt;网银在线&lt;/pay_name&gt;&lt;pay_code&gt;chinabank&lt;/pay_code&gt;&lt;pay_status&gt;2&lt;/pay_status&gt;&lt;shipping_time_tzph&gt;1570624275&lt;/shipping_time_tzph&gt;&lt;total_amount&gt;279.00&lt;/total_amount&gt;&lt;market_goods_amount&gt;279.00&lt;/market_goods_amount&gt;&lt;shipping_fee&gt;0.00&lt;/shipping_fee&gt;&lt;cod_fee&gt;0.00&lt;/cod_fee&gt;&lt;other_discount_fee&gt;10.00&lt;/other_discount_fee&gt;&lt;discount_fee&gt;160.00&lt;/discount_fee&gt;&lt;is_yfp&gt;0&lt;/is_yfp&gt;&lt;status_kc&gt;1&lt;/status_kc&gt;&lt;is_combine_new&gt;0&lt;/is_combine_new&gt;&lt;is_combine&gt;0&lt;/is_combine&gt;&lt;is_split&gt;0&lt;/is_split&gt;&lt;is_split_new&gt;0&lt;/is_split_new&gt;&lt;is_copy&gt;1&lt;/is_copy&gt;&lt;is_hh&gt;0&lt;/is_hh&gt;&lt;mdck_id&gt;0&lt;/mdck_id&gt;&lt;is_customization&gt;0&lt;/is_customization&gt;&lt;cxsp/&gt;&lt;system/&gt;&lt;edit_shipping_time&gt;1570624271&lt;/edit_shipping_time&gt;&lt;outWareHouseType&gt;0&lt;/outWareHouseType&gt;&lt;priority&gt;1&lt;/priority&gt;&lt;vendor_code/&gt;&lt;carrier&gt;YTO_BJJY&lt;/carrier&gt;&lt;carrier_product/&gt;&lt;monthly_account/&gt;&lt;out_warehouse_type&gt;0&lt;/out_warehouse_type&gt;&lt;orig_bill_type&gt;3&lt;/orig_bill_type&gt;&lt;/extendProps&gt;&lt;/request&gt;</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="billNoFile" elementType="Argument">
                        <stringProp name="Argument.name">billNoFile</stringProp>
                        <stringProp name="Argument.value">c:\\apache-jmeter-5.1.1\\bin\\script\\data\\billNo.csv</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="billNoFile2" elementType="Argument">
                        <stringProp name="Argument.name">billNoFile2</stringProp>
                        <stringProp name="Argument.value">/Users/toplin/Documents/apache-jmeter-5.1.1/bin/script/data/billNo.csv</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </Arguments>
                  <hashTree/>
                  <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <boolProp name="resetInterpreter">false</boolProp>
                    <stringProp name="script">/*import com.anta.jmeter.AntaRSAUtilWMS;
String postjson = vars.get(&quot;tswms_fxoms_urlvar&quot;);
String content_header= vars.get(&quot;tswms_fxoms_postvar_header&quot;);
String content= vars.get(&quot;tswms_fxoms_postvar_content&quot;);
String secret= vars.get(&quot;tswms_fxoms_secret&quot;);

String data = content_header+&quot;\r\n&quot;+content;
String sign =  AntaRSAUtilWMS.generaSignature(postjson,data,secret);
vars.put(&quot;tswms_fxoms_sign&quot;,sign);
*/

import com.anta.jmeter.AntaRSAUtilWMS;
import org.apache.jmeter.config.Arguments;

Arguments args = sampler.getArguments();
String postjson = vars.get(&quot;tswms_fxoms_urlvar&quot;);
String secret= vars.get(&quot;tswms_fxoms_secret&quot;);
String content = args.toString();

String sign = AntaRSAUtilWMS.generaSignature(postjson, content.substring(1, content.length()-2), secret);
vars.put(&quot;tswms_fxoms_sign&quot;,sign);</stringProp>
                  </BeanShellPreProcessor>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1867169789">success</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 后置处理程序" enabled="true">
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <boolProp name="resetInterpreter">false</boolProp>
                    <stringProp name="script">import com.anta.jmeter.WriteFileUtil;

String billNo = vars.get(&quot;billNo&quot;);
String billNoFile=vars.get(&quot;billNoFile&quot;);

WriteFileUtil.writeFile(billNoFile,billNo);</stringProp>
                  </BeanShellPostProcessor>
                  <hashTree/>
                  <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 缓存响应数据" enabled="true">
                    <boolProp name="resetInterpreter">false</boolProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="script">// cache response data for monitor write file
vars.put(&quot;xResponseData&quot;, prev.getResponseDataAsString());

//
//System.out.println(&quot;sampler response data is &quot; + prev.getResponseDataAsString());</stringProp>
                  </BeanShellPostProcessor>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="图形结果" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="用表格察看结果" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="汇总图" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="响应时间图" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="汇总报告" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <BeanShellListener guiclass="TestBeanGUI" testclass="BeanShellListener" testname="错误监听器" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">import java.text.SimpleDateFormat;
import com.jmeterx.async.AsyncFileUtils;

String errSamplerFile = vars.get(&quot;errSamplerFile&quot;);

if (!prev.isSuccessful()) {
	String samplerData = prev.getSamplerData();
	String responseData = vars.get(&quot;xResponseData&quot;);
	//String responseData = prev.getResponseDataAsString();
	
	SimpleDateFormat fmt =  new 
		SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss.SSS&quot;);
	String begtime = fmt.format(prev.getStartTime());
	String endtime = fmt.format(prev.getEndTime());
	
	String data = &quot;sampler error&quot;
		+ &quot;\n======beg=======\n&quot; 
		+ &quot;Sampler &quot; + prev.getSampleLabel()
		+ &quot;\nTime &quot; + begtime + &quot; - &quot; + endtime 
		+ &quot;\n&quot; + samplerData
		+ &quot;\nResponse data:\n&quot; 
		+ responseData
		+ &quot;\n======end=======\n&quot;;

	AsyncFileUtils.writeLine(errSamplerFile, data);
}
</stringProp>
        </BeanShellListener>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="订单出库参数化" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(ThreadNum,1)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${__if(${xenv},debug,${wan},${__RandomFromMultipleVars(ip1|ip2,)},)}</stringProp>
          <stringProp name="HTTPSampler.port">8085</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="订单出库" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${ddck_urlvar}&amp;data=${ddck_data}&amp;sign=${ddck_sign}&amp;source=IWMS</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/service/api/wms/EWMS</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV 数据文件设置" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">data/billNo.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">ck_billNo</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ddck_urlvar" elementType="Argument">
                <stringProp name="Argument.name">ddck_urlvar</stringProp>
                <stringProp name="Argument.value">key=BAISON_WMS&amp;requestTime=20191008184623&amp;version=0.1&amp;serviceType=UpdateSalesOrderStatus</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ddck_data_tmp" elementType="Argument">
                <stringProp name="Argument.name">ddck_data_tmp</stringProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;root&gt;&lt;warehouseCode /&gt;&lt;orderCode&gt;FT1910084143648&lt;/orderCode&gt;&lt;orderStatus&gt;WMS_WEIGHT&lt;/orderStatus&gt;&lt;operator /&gt;&lt;operatorTime&gt;2019-10-08 17:28:58&lt;/operatorTime&gt;&lt;logisticsProviderCode&gt;YTO_ZZAF&lt;/logisticsProviderCode&gt;&lt;shippingOrderNo&gt;YT4127066165255&lt;/shippingOrderNo&gt;&lt;weight&gt;0.5900&lt;/weight&gt;&lt;volume&gt;0.0000&lt;/volume&gt;&lt;OrigWHID&gt;08&lt;/OrigWHID&gt;&lt;OrigWHName&gt;郑州安发B2C仓&lt;/OrigWHName&gt;&lt;billCode&gt;CK08201910080027305&lt;/billCode&gt;&lt;SystemType&gt;1&lt;/SystemType&gt;&lt;/root&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ddck_secret" elementType="Argument">
                <stringProp name="Argument.name">ddck_secret</stringProp>
                <stringProp name="Argument.value">fd66c2a616c278ca918fa47055a164ef</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.anta.jmeter.AntaRSAUtilDDCK;
import java.util.Date;

String postjson = vars.get(&quot;ddck_urlvar&quot;);
String content= vars.get(&quot;ddck_data_tmp&quot;);
String secret= vars.get(&quot;ddck_secret&quot;);
String ck_billNo = vars.get(&quot;ck_billNo&quot;);

String shippingOrderNo = String.valueOf(new Date().getTime());
String billCode = String.valueOf(new Date().getTime());

content = content.replace(&quot;FT1910084143648&quot;,ck_billNo);
content = content.replace(&quot;YT4127066165255&quot;,&quot;YT&quot;+shippingOrderNo);
content = content.replace(&quot;CK08201910080027305&quot;,&quot;CK&quot;+billCode);



vars.put(&quot;ddck_data&quot;,content);

String sign =  AntaRSAUtilDDCK.generaSignature(postjson,content,secret);
vars.put(&quot;ddck_sign&quot;,sign);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1149187101">SUCCESS</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 缓存响应数据" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">// cache response data for monitor write file
vars.put(&quot;xResponseData&quot;, prev.getResponseDataAsString());

//
//System.out.println(&quot;sampler response data is &quot; + prev.getResponseDataAsString());</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="响应时间图" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <BeanShellListener guiclass="TestBeanGUI" testclass="BeanShellListener" testname="错误监听器" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">import java.text.SimpleDateFormat;
import com.jmeterx.async.AsyncFileUtils;

String errSamplerFile = vars.get(&quot;errSamplerFile&quot;);

if (!prev.isSuccessful()) {
	String samplerData = prev.getSamplerData();
	String responseData = vars.get(&quot;xResponseData&quot;);
	//String responseData = prev.getResponseDataAsString();
	
	SimpleDateFormat fmt =  new 
		SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss.SSS&quot;);
	String begtime = fmt.format(prev.getStartTime());
	String endtime = fmt.format(prev.getEndTime());
	
	String data = &quot;sampler error&quot;
		+ &quot;\n======beg=======\n&quot; 
		+ &quot;Sampler &quot; + prev.getSampleLabel()
		+ &quot;\nTime &quot; + begtime + &quot; - &quot; + endtime 
		+ &quot;\n&quot; + samplerData
		+ &quot;\nResponse data:\n&quot; 
		+ responseData
		+ &quot;\n======end=======\n&quot;;

	AsyncFileUtils.writeLine(errSamplerFile, data);
}
</stringProp>
        </BeanShellListener>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="库存接收参数化" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">60</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${__if(${xenv},debug,${wan},${__RandomFromMultipleVars(ip1|ip2,)},)}</stringProp>
          <stringProp name="HTTPSampler.port">8085</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="仓库数据" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">data/warehouseId.csv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">warehouseId</stringProp>
        </CSVDataSet>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="库存接收" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&amp;sign=6FBFCFBCB7E50F59BB2EEC652DC0D2D3&amp;data={&quot;data&quot;:{&quot;operationTime&quot;:&quot;2019-04-15 16:51:33&quot;,&quot;stores&quot;:{&quot;store&quot;:[{&quot;storeInventories&quot;:{&quot;storeInventory&quot;:[{&quot;billNum&quot;:1,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:2,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:3,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:4,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:5,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:6,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:7,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:8,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:9,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:10,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:11,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:12,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:13,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:14,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:15,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:16,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:17,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:18,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:19,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:20,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:21,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:22,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:23,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:24,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:25,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:26,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:27,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:28,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:29,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:30,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:31,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:32,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:33,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:34,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:35,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:36,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:37,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:38,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:39,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:40,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:41,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:42,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:43,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:44,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:45,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:46,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:47,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:48,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:49,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:50,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:51,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:52,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:53,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:54,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:55,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:56,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:57,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:58,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:59,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:60,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:61,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:62,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:63,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:64,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:65,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:66,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:67,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:68,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:69,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:70,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:71,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:72,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:73,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:74,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:75,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:76,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:77,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:78,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:79,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:80,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:81,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:82,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:83,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:84,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:85,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:86,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:87,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:88,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:89,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:90,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:91,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:92,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:93,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:94,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:95,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:96,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:97,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:98,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:99,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:100,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;}]},&quot;warehouseId&quot;:&quot;${warehouseId}&quot;,&quot;warehouseType&quot;:&quot;STORE&quot;}]},&quot;userId&quot;:&quot;TESTUSER${__Random(11111111,99999999,)}&quot;}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/service/api/wms/OBAO?${kcjs_urlvar}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="sku目录变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="goodsfile" elementType="Argument">
                <stringProp name="Argument.name">goodsfile</stringProp>
                <stringProp name="Argument.value">xpos/skus.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="kcjs_urlvar" elementType="Argument">
                <stringProp name="Argument.name">kcjs_urlvar</stringProp>
                <stringProp name="Argument.value">method=taobao.qimen.storeinventory.iteminitial&amp;appkey=Anta_EC_test&amp;timestamp=1545209493</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="kcjs_data_tmp" elementType="Argument">
                <stringProp name="Argument.name">kcjs_data_tmp</stringProp>
                <stringProp name="Argument.value">{&quot;data&quot;:{&quot;operationTime&quot;:&quot;2019-04-15 16:51:33&quot;,&quot;stores&quot;:{&quot;store&quot;:[{&quot;storeInventories&quot;:{&quot;storeInventory&quot;:[{&quot;billNum&quot;:1,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:2,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:3,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:4,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:5,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:6,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:7,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:8,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:9,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:10,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:11,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:12,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:13,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:14,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:15,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:16,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:17,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:18,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:19,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:20,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:21,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:22,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:23,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:24,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:25,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:26,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:27,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:28,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:29,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:30,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:31,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:32,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:33,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:34,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:35,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:36,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:37,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:38,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:39,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:40,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:41,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:42,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:43,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:44,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:45,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:46,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:47,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:48,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:49,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:50,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:51,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:52,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:53,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:54,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:55,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:56,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:57,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:58,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:59,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:60,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:61,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:62,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:63,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:64,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:65,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:66,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:67,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:68,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:69,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:70,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:71,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:72,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:73,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:74,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:75,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:76,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:77,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:78,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:79,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:80,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:81,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:82,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:83,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:84,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:85,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:86,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:87,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:88,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:89,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:90,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:91,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:92,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:93,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:94,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:95,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:96,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:97,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:98,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:99,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:100,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;}]},&quot;warehouseId&quot;:&quot;ANTA00KL00&quot;,&quot;warehouseType&quot;:&quot;STORE&quot;}]},&quot;userId&quot;:&quot;TESTUSER${__Random(11111111,99999999,)}&quot;}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="kcjs_secret" elementType="Argument">
                <stringProp name="Argument.name">kcjs_secret</stringProp>
                <stringProp name="Argument.value">test123456</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">//import com.anta.jmeter.AntaRSAUtilKCJS;
//
//String postjson = vars.get(&quot;kcjs_urlvar&quot;);
//String content= vars.get(&quot;kcjs_data_tmp&quot;);
//String secret= vars.get(&quot;kcjs_secret&quot;);
//String warehouseId = vars.get(&quot;warehouseId&quot;);
//
//content = content.replace(&quot;ANTA00KL00&quot;,warehouseId);
//vars.put(&quot;kcjs_data&quot;,content);
//String sign =  AntaRSAUtilKCJS.generaSignature(postjson,content,secret);
//vars.put(&quot;kcjs_sign&quot;,sign);


import com.anta.jmeter.AntaRSAUtilKCJS;
import org.apache.jmeter.config.Arguments;

Arguments args = sampler.getArguments();
String postjson = vars.get(&quot;kcjs_urlvar&quot;);
String secret= vars.get(&quot;kcjs_secret&quot;);
String content = args.toString();

//log.info(content.substring(25, content.length()-2));

String sign =  AntaRSAUtilKCJS.generaSignature(postjson,content.substring(25, content.length()-2), secret);


vars.put(&quot;kcjs_sign&quot;,sign);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-628573701">&quot;flag&quot;:&quot;success&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 缓存响应数据" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">// cache response data for monitor write file
vars.put(&quot;xResponseData&quot;, prev.getResponseDataAsString());

//
//System.out.println(&quot;sampler response data is &quot; + prev.getResponseDataAsString());</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="响应时间图" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <BeanShellListener guiclass="TestBeanGUI" testclass="BeanShellListener" testname="错误监听器" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">import java.text.SimpleDateFormat;
import com.jmeterx.async.AsyncFileUtils;

String errSamplerFile = vars.get(&quot;errSamplerFile&quot;);

if (!prev.isSuccessful()) {
	String samplerData = prev.getSamplerData();
	String responseData = vars.get(&quot;xResponseData&quot;);
	//String responseData = prev.getResponseDataAsString();
	
	SimpleDateFormat fmt =  new 
		SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss.SSS&quot;);
	String begtime = fmt.format(prev.getStartTime());
	String endtime = fmt.format(prev.getEndTime());
	
	String data = &quot;sampler error&quot;
		+ &quot;\n======beg=======\n&quot; 
		+ &quot;Sampler &quot; + prev.getSampleLabel()
		+ &quot;\nTime &quot; + begtime + &quot; - &quot; + endtime 
		+ &quot;\n&quot; + samplerData
		+ &quot;\nResponse data:\n&quot; 
		+ responseData
		+ &quot;\n======end=======\n&quot;;

	AsyncFileUtils.writeLine(errSamplerFile, data);
}
</stringProp>
        </BeanShellListener>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="jp@gc - 库存接收" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.num_threads">300</stringProp>
        <stringProp name="Threads initial delay">10</stringProp>
        <stringProp name="Start users count"></stringProp>
        <stringProp name="Start users count burst"></stringProp>
        <stringProp name="Start users period">300</stringProp>
        <stringProp name="Stop users count">30</stringProp>
        <stringProp name="Stop users period">0</stringProp>
        <stringProp name="flighttime">300</stringProp>
        <stringProp name="rampUp">0</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${__if(${xenv},debug,${wan},${__RandomFromMultipleVars(ip1|ip2,)},)}</stringProp>
          <stringProp name="HTTPSampler.port">8085</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="仓库数据" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">data/warehouseId.csv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">warehouseId</stringProp>
        </CSVDataSet>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="库存接收" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&amp;sign=6FBFCFBCB7E50F59BB2EEC652DC0D2D3&amp;data={&quot;data&quot;:{&quot;operationTime&quot;:&quot;2019-04-15 16:51:33&quot;,&quot;stores&quot;:{&quot;store&quot;:[{&quot;storeInventories&quot;:{&quot;storeInventory&quot;:[{&quot;billNum&quot;:1,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:2,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:3,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:4,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:5,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:6,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:7,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:8,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:9,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:10,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:11,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:12,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:13,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:14,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:15,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:16,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:17,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:18,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:19,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:20,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:21,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:22,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:23,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:24,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:25,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:26,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:27,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:28,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:29,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:30,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:31,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:32,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:33,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:34,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:35,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:36,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:37,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:38,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:39,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:40,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:41,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:42,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:43,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:44,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:45,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:46,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:47,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:48,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:49,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:50,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:51,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:52,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:53,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:54,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:55,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:56,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:57,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:58,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:59,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:60,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:61,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:62,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:63,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:64,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:65,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:66,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:67,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:68,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:69,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:70,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:71,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:72,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:73,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:74,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:75,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:76,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:77,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:78,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:79,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:80,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:81,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:82,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:83,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:84,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:85,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:86,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:87,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:88,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:89,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:90,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:91,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:92,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:93,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:94,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:95,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:96,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:97,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:98,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:99,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;},{&quot;billNum&quot;:100,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,5747,)})}&quot;}]},&quot;warehouseId&quot;:&quot;${warehouseId}&quot;,&quot;warehouseType&quot;:&quot;STORE&quot;}]},&quot;userId&quot;:&quot;TESTUSER${__Random(11111111,99999999,)}&quot;}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/service/api/wms/OBAO?${kcjs_urlvar}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="sku目录变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="goodsfile" elementType="Argument">
                <stringProp name="Argument.name">goodsfile</stringProp>
                <stringProp name="Argument.value">xpos/skus.csv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="kcjs_urlvar" elementType="Argument">
                <stringProp name="Argument.name">kcjs_urlvar</stringProp>
                <stringProp name="Argument.value">method=taobao.qimen.storeinventory.iteminitial&amp;appkey=Anta_EC_test&amp;timestamp=1545209493</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="kcjs_data_tmp" elementType="Argument">
                <stringProp name="Argument.name">kcjs_data_tmp</stringProp>
                <stringProp name="Argument.value">{&quot;data&quot;:{&quot;operationTime&quot;:&quot;2019-04-15 16:51:33&quot;,&quot;stores&quot;:{&quot;store&quot;:[{&quot;storeInventories&quot;:{&quot;storeInventory&quot;:[{&quot;billNum&quot;:1,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:2,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:3,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:4,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:5,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:6,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:7,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:8,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:9,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:10,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:11,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:12,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:13,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:14,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:15,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:16,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:17,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:18,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:19,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:20,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:21,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:22,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:23,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:24,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:25,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:26,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:27,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:28,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:29,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:30,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:31,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:32,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:33,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:34,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:35,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:36,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:37,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:38,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:39,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:40,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:41,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:42,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:43,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:44,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:45,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:46,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:47,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:48,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:49,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:50,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:51,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:52,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:53,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:54,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:55,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:56,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:57,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:58,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:59,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:60,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:61,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:62,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:63,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:64,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:65,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:66,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:67,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:68,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:69,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:70,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:71,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:72,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:73,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:74,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:75,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:76,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:77,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:78,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:79,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:80,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:81,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:82,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:83,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:84,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:85,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:86,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:87,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:88,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:89,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:90,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:91,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:92,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:93,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:94,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:95,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:96,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:97,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:98,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:99,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;},{&quot;billNum&quot;:100,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;${__CSVRead(${goodsfile},${__Random(0,26000,)})}&quot;}]},&quot;warehouseId&quot;:&quot;ANTA00KL00&quot;,&quot;warehouseType&quot;:&quot;STORE&quot;}]},&quot;userId&quot;:&quot;TESTUSER${__Random(11111111,99999999,)}&quot;}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="kcjs_secret" elementType="Argument">
                <stringProp name="Argument.name">kcjs_secret</stringProp>
                <stringProp name="Argument.value">test123456</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">//import com.anta.jmeter.AntaRSAUtilKCJS;
//
//String postjson = vars.get(&quot;kcjs_urlvar&quot;);
//String content= vars.get(&quot;kcjs_data_tmp&quot;);
//String secret= vars.get(&quot;kcjs_secret&quot;);
//String warehouseId = vars.get(&quot;warehouseId&quot;);
//
//content = content.replace(&quot;ANTA00KL00&quot;,warehouseId);
//vars.put(&quot;kcjs_data&quot;,content);
//String sign =  AntaRSAUtilKCJS.generaSignature(postjson,content,secret);
//vars.put(&quot;kcjs_sign&quot;,sign);


import com.anta.jmeter.AntaRSAUtilKCJS;
import org.apache.jmeter.config.Arguments;

Arguments args = sampler.getArguments();
String postjson = vars.get(&quot;kcjs_urlvar&quot;);
String secret= vars.get(&quot;kcjs_secret&quot;);
String content = args.toString();

//log.info(content.substring(25, content.length()-2));

String sign =  AntaRSAUtilKCJS.generaSignature(postjson,content.substring(25, content.length()-2), secret);


vars.put(&quot;kcjs_sign&quot;,sign);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-628573701">&quot;flag&quot;:&quot;success&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 缓存响应数据" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">// cache response data for monitor write file
vars.put(&quot;xResponseData&quot;, prev.getResponseDataAsString());

//
//System.out.println(&quot;sampler response data is &quot; + prev.getResponseDataAsString());</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.TransactionsPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transactions per Second" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">30000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Over Time" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">30000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <BeanShellListener guiclass="TestBeanGUI" testclass="BeanShellListener" testname="错误监听器" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">import java.text.SimpleDateFormat;
import com.jmeterx.async.AsyncFileUtils;

String errSamplerFile = vars.get(&quot;errSamplerFile&quot;);

if (!prev.isSuccessful()) {
	String samplerData = prev.getSamplerData();
	String responseData = vars.get(&quot;xResponseData&quot;);
	//String responseData = prev.getResponseDataAsString();
	
	SimpleDateFormat fmt =  new 
		SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss.SSS&quot;);
	String begtime = fmt.format(prev.getStartTime());
	String endtime = fmt.format(prev.getEndTime());
	
	String data = &quot;sampler error&quot;
		+ &quot;\n======beg=======\n&quot; 
		+ &quot;Sampler &quot; + prev.getSampleLabel()
		+ &quot;\nTime &quot; + begtime + &quot; - &quot; + endtime 
		+ &quot;\n&quot; + samplerData
		+ &quot;\nResponse data:\n&quot; 
		+ responseData
		+ &quot;\n======end=======\n&quot;;

	AsyncFileUtils.writeLine(errSamplerFile, data);
}
</stringProp>
        </BeanShellListener>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="jp@gc - 常规订单" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="Threads initial delay">10</stringProp>
        <stringProp name="Start users count">50</stringProp>
        <stringProp name="Start users count burst">25</stringProp>
        <stringProp name="Start users period">1</stringProp>
        <stringProp name="Stop users count">30</stringProp>
        <stringProp name="Stop users period">1</stringProp>
        <stringProp name="flighttime">1</stringProp>
        <stringProp name="rampUp">1</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="商品数据" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">data/goods.all.csv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">goodsId,singleProductId,sku,barcode,platformGoodsId</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="店铺数据" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">data/shops.csv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">shopId,shopCode,shopName</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="计数器" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end">5</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">qty</stringProp>
          <stringProp name="CounterConfig.format">0</stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${__if(${xenv},debug,${wan},${__RandomFromMultipleVars(ip1|ip2,)},)}</stringProp>
          <stringProp name="HTTPSampler.port">${xport}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="订单促销" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;dataContent&quot;:&quot;[{\&quot;orderBillNo\&quot;:\&quot;PF${__time(yyMMddHHmmssSSS,)}${__Random(111111,999999,)}\&quot;,\&quot;memberId\&quot;:\&quot;0\&quot;,\&quot;orderTime\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;,\&quot;paySettleMethodId\&quot;:\&quot;100081\&quot;,\&quot;qtyTotal\&quot;:\&quot;${qty}\&quot;,\&quot;amountTotal\&quot;:${__Random(111,999,)},\&quot;orgId\&quot;:\&quot;313625\&quot;,\&quot;shopId\&quot;:\&quot;${shopId}\&quot;,\&quot;singleProducts\&quot;:[{\&quot;goodsId\&quot;:\&quot;${goodsId}\&quot;,\&quot;singleProductId\&quot;:\&quot;${singleProductId}\&quot;,\&quot;platformGoodsId\&quot;:\&quot;${platformGoodsId}\&quot;,\&quot;qty\&quot;:\&quot;${qty}\&quot;,\&quot;amount\&quot;:${__Random(111,999,)},\&quot;isGift\&quot;:0}],\&quot;payDate\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;}]&quot;,&quot;token&quot;:&quot;admin&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/service/calculatePromotionService/calculatePromotion?${ddcx_urlvar}&amp;sign=${ddcx_sign}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">20000</stringProp>
          <stringProp name="HTTPSampler.response_timeout">30000</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ddcx_urlvar" elementType="Argument">
                <stringProp name="Argument.name">ddcx_urlvar</stringProp>
                <stringProp name="Argument.value">app_key=23212136&amp;target_app_key=23212136&amp;method=baison.eplus.orderdistribute.promotion&amp;timestamp=2019-02-18 15:05:24&amp;app_secret=437bd4a3f04b2cce8ccc41924b09dc49&amp;format=json&amp;sign_method=md5&amp;v=2.0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ddcx_secret" elementType="Argument">
                <stringProp name="Argument.name">ddcx_secret</stringProp>
                <stringProp name="Argument.value">437bd4a3f04b2cce8ccc41924b09dc49</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.anta.jmeter.AntaRSAUtil;
import org.apache.jmeter.config.Arguments;

Arguments args = sampler.getArguments();
String postjson = vars.get(&quot;ddcx_urlvar&quot;);
String secret= vars.get(&quot;ddcx_secret&quot;);
String content = args.toString();


String sign = AntaRSAUtil.generaSignature(postjson, content.substring(1, content.length()-2), secret);
vars.put(&quot;ddcx_sign&quot;,sign);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1100399465">&quot;result&quot;:&quot;SUCCESS&quot;,&quot;success&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器_ddcx_result" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">ddcx_result</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;result&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 缓存响应数据" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">// cache response data for monitor write file
vars.put(&quot;xResponseData&quot;, prev.getResponseDataAsString());

//
//System.out.println(&quot;sampler response data is &quot; + prev.getResponseDataAsString());</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果（If）控制器" enabled="true">
          <stringProp name="IfController.condition">${__jexl3(&quot;${ddcx_result}&quot; == &quot;SUCCESS&quot;,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="订单分单" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;dataContent&quot;:&quot;[{\&quot;orderBillNo\&quot;:\&quot;TS${__time(yyMMddHHmmssSSS,)}${__Random(111111,999999,)}\&quot;,\&quot;shopCode\&quot;:\&quot;${shopCode}\&quot;,\&quot;supportCashOnDelivery\&quot;:0,\&quot;preSaleOrderBill\&quot;:0,\&quot;orderBusinessType\&quot;:\&quot;\&quot;,\&quot;contryCode\&quot;:\&quot;1\&quot;,\&quot;provinceCode\&quot;:\&quot;430000\&quot;,\&quot;cityCode\&quot;:\&quot;430200\&quot;,\&quot;areaCode\&quot;:\&quot;430225\&quot;,\&quot;skuDetail\&quot;:[{\&quot;sku\&quot;:\&quot;${sku}\&quot;,\&quot;barcode\&quot;:\&quot;${barcode}\&quot;,\&quot;qty\&quot;:\&quot;${__Random(1,5,)}\&quot;,\&quot;isGift\&quot;:\&quot;0\&quot;,\&quot;tc_sku_id\&quot;:\&quot;0\&quot;}],\&quot;isPureGift\&quot;:1}]&quot;,&quot;token&quot;:&quot;admin&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/service/orderDistributeCalculateService/distributeOrder?${ddfd_urlvar}&amp;sign=${ddfd_sign}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout">20000</stringProp>
            <stringProp name="HTTPSampler.response_timeout">30000</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="商品数据2" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="filename">data/goods_2.csv</stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">goodsId_2,singleProductId_2,sku_2,barcode_2</stringProp>
            </CSVDataSet>
            <hashTree/>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ddfd_urlvar" elementType="Argument">
                  <stringProp name="Argument.name">ddfd_urlvar</stringProp>
                  <stringProp name="Argument.value">app_key=23212136&amp;target_app_key=23212136&amp;method=baison.eplus.orderdistribute.distributeorder&amp;timestamp=2019-02-18 15:05:24&amp;app_secret=437bd4a3f04b2cce8ccc41924b09dc49&amp;format=json&amp;sign_method=md5&amp;v=2.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ddfd_secret" elementType="Argument">
                  <stringProp name="Argument.name">ddfd_secret</stringProp>
                  <stringProp name="Argument.value">437bd4a3f04b2cce8ccc41924b09dc49</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.anta.jmeter.AntaRSAUtil;
import org.apache.jmeter.config.Arguments;

Arguments args = sampler.getArguments();
String postjson = vars.get(&quot;ddfd_urlvar&quot;);
String secret= vars.get(&quot;ddfd_secret&quot;);
String content = args.toString();

String sign = AntaRSAUtil.generaSignature(postjson, content.substring(1, content.length()-2), secret);
vars.put(&quot;ddfd_sign&quot;,sign);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-billNo" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">billNo</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;orderBillNo&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-wareHouseId_return" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">wareHouseId_return</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;wareHouseId&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-wareHouseCode_return" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">wareHouseCode_return</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;wareHouseCode&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-goodsId_return" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">goodsId_return</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;goodsId&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-qty_return" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">qty_return</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;qty&quot;:(.+?)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-barcode_return" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">barcode_return</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;barcode&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-provinceId_return" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">provinceId_return</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;provinceId&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-whareaTypeId_return" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">whareaTypeId_return</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;whareaTypeId&quot;:(\d*)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器_ddfd_result" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">ddfd_result</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;result&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1100399465">&quot;result&quot;:&quot;SUCCESS&quot;,&quot;success&quot;:true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 缓存响应数据" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">// cache response data for monitor write file
vars.put(&quot;xResponseData&quot;, prev.getResponseDataAsString());

//
//System.out.println(&quot;sampler response data is &quot; + prev.getResponseDataAsString());</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果（If）控制器" enabled="true">
            <stringProp name="IfController.condition">${__jexl3(&quot;${ddfd_result}&quot; == &quot;SUCCESS&quot;,)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="订单创建" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;dataContent&quot;:&quot;[{\&quot;billNo\&quot;:\&quot;${billNo}\&quot;,\&quot;sourceBillNo\&quot;:\&quot;101161987989\&quot;,\&quot;businessDate\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;,\&quot;type\&quot;:1,\&quot;billDate\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;,\&quot;isFromOMS\&quot;:1,\&quot;businessType\&quot;:1,\&quot;channelId\&quot;:\&quot;313625\&quot;,\&quot;channelCode\&quot;:\&quot;999902A005\&quot;,\&quot;channelName\&quot;:\&quot;\\u5317\\u4eac\\u5409\\u5143\\u76db\\u5b9d\\u56fd\\u9645\\u8d38\\u6613\\u6709\\u9650\\u516c\\u53f8\&quot;,\&quot;shopId\&quot;:\&quot;170\&quot;,\&quot;shopCode\&quot;:\&quot;BJJY_ANTAFXJDOB\&quot;,\&quot;shopName\&quot;:\&quot;\\u5317\\u4eac\\u5409\\u5143\\u5b89\\u8e0f\\u4eac\\u4e1c\\u4e13\\u5356\\u5e97\&quot;,\&quot;wareHouseId\&quot;:\&quot;${wareHouseId_return}\&quot;,\&quot;wareHouseCode\&quot;:\&quot;${wareHouseCode_return}\&quot;,\&quot;wareHouseName\&quot;:\&quot;\\u5317\\u4eac\\u5206\\u9500\\u6cc9\\u5ddeB2C\\u5b9e\\u4ed3\&quot;,\&quot;whareaTypeId\&quot;:\&quot;${whareaTypeId_return}\&quot;,\&quot;whareaTypeCode\&quot;:\&quot;SL001\&quot;,\&quot;whareaTypeName\&quot;:\&quot;\\u6b63\\u54c1\\u5e93\\u4f4d\&quot;,\&quot;vipCardNO\&quot;:\&quot;jd_pepgumdtmyrw\&quot;,\&quot;memberName\&quot;:\&quot;\\u502a\\u7389\\u5fae\&quot;,\&quot;memberNickName\&quot;:\&quot;jd_pepgumdtmyrw\&quot;,\&quot;qty\&quot;:\&quot;${qty}\&quot;,\&quot;amountGoods\&quot;:\&quot;119.00\&quot;,\&quot;totalTaxPrice\&quot;:\&quot;119.00\&quot;,\&quot;amountStandard\&quot;:\&quot;279.00\&quot;,\&quot;amountTotal\&quot;:\&quot;279.00\&quot;,\&quot;amountTag\&quot;:\&quot;279.00\&quot;,\&quot;goodsConcession\&quot;:\&quot;160.00\&quot;,\&quot;amountDiscount\&quot;:\&quot;10.00\&quot;,\&quot;otherConcession\&quot;:\&quot;10.00\&quot;,\&quot;cashCouponAmount\&quot;:0,\&quot;orderType\&quot;:\&quot;0\&quot;,\&quot;oriOrderSn\&quot;:null,\&quot;oriDealCode\&quot;:\&quot;\&quot;,\&quot;parentDealCode\&quot;:\&quot;\&quot;,\&quot;expressFee\&quot;:\&quot;0.00\&quot;,\&quot;freight\&quot;:\&quot;0.00\&quot;,\&quot;logisticsExtraFee\&quot;:\&quot;0.00\&quot;,\&quot;distributionfeeAmount\&quot;:\&quot;0.00\&quot;,\&quot;amountActual\&quot;:\&quot;109.00\&quot;,\&quot;payableAmount\&quot;:\&quot;109.00\&quot;,\&quot;amountPaid\&quot;:\&quot;109.00\&quot;,\&quot;status\&quot;:1,\&quot;distributionState\&quot;:\&quot;2\&quot;,\&quot;payState\&quot;:\&quot;2\&quot;,\&quot;payDate\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;,\&quot;payTime\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;,\&quot;platformAddTime\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;,\&quot;settleMethodId\&quot;:\&quot;100081\&quot;,\&quot;settleMethodCode\&quot;:\&quot;chinabank\&quot;,\&quot;settleMethodName\&quot;:\&quot;\\u7f51\\u94f6\\u5728\\u7ebf\&quot;,\&quot;remarks\&quot;:\&quot;\&quot;,\&quot;buyMsg\&quot;:\&quot;\&quot;,\&quot;platformId\&quot;:5,\&quot;platformCode\&quot;:\&quot;jingdong\&quot;,\&quot;platformName\&quot;:\&quot;\\u4eac\\u4e1c\&quot;,\&quot;currencyTypeId\&quot;:200012,\&quot;currencyTypeCode\&quot;:\&quot;RMB\&quot;,\&quot;currencyTypeName\&quot;:\&quot;\\u4eba\\u6c11\\u5e01\&quot;,\&quot;invoiceType\&quot;:\&quot;\&quot;,\&quot;invoiceContent\&quot;:\&quot;\&quot;,\&quot;invoicePayType\&quot;:0,\&quot;invoiceTitle\&quot;:\&quot;\&quot;,\&quot;invoiceAmount\&quot;:\&quot;109\&quot;,\&quot;invoiceNumber\&quot;:\&quot;\&quot;,\&quot;invoiceStatus\&quot;:\&quot;\&quot;,\&quot;isSplitNew\&quot;:\&quot;0\&quot;,\&quot;isCombineNew\&quot;:\&quot;0\&quot;,\&quot;isCopy\&quot;:\&quot;0\&quot;,\&quot;isShougong\&quot;:\&quot;0\&quot;,\&quot;goodsDetail\&quot;:[{\&quot;billNo\&quot;:\&quot;${billNo}\&quot;,\&quot;goodsId\&quot;:\&quot;${goodsId}\&quot;,\&quot;goodsCode\&quot;:\&quot;31831104-1\&quot;,\&quot;goodsName\&quot;:\&quot;\\u7bee\\u7403\\u978b\&quot;,\&quot;singleProductId\&quot;:\&quot;${singleProductId}\&quot;,\&quot;referencePrice\&quot;:\&quot;299.00\&quot;,\&quot;priceCost\&quot;:\&quot;0.00\&quot;,\&quot;priceStandard\&quot;:\&quot;299.00\&quot;,\&quot;shopPrice\&quot;:\&quot;279.00\&quot;,\&quot;priceTag\&quot;:\&quot;279.00\&quot;,\&quot;price\&quot;:\&quot;119.00\&quot;,\&quot;sharePrice\&quot;:\&quot;109.00\&quot;,\&quot;amountSettle\&quot;:\&quot;109.00\&quot;,\&quot;amount\&quot;:\&quot;119.00\&quot;,\&quot;qty\&quot;:\&quot;${qty}\&quot;,\&quot;amountCost\&quot;:0,\&quot;amountStandard\&quot;:279,\&quot;amountTag\&quot;:279,\&quot;amountSale\&quot;:119,\&quot;amountDiscount\&quot;:\&quot;160.00\&quot;,\&quot;isGift\&quot;:\&quot;0\&quot;,\&quot;isExchange\&quot;:\&quot;0\&quot;,\&quot;qtyReturned\&quot;:\&quot;0\&quot;,\&quot;discount\&quot;:\&quot;0.4265\&quot;,\&quot;barcode\&quot;:\&quot;${barcode}\&quot;,\&quot;oid\&quot;:\&quot;\&quot;,\&quot;VoucherCode\&quot;:\&quot;\&quot;,\&quot;setMealSpec\&quot;:\&quot;\&quot;,\&quot;otherConcession\&quot;:null,\&quot;childBillNo\&quot;:\&quot;1201949148043556895\&quot;,\&quot;childPlatformGoodsId\&quot;:\&quot;617769130877\&quot;,\&quot;childPlatformGoodsName\&quot;:\&quot;\\u3010\\u6f6e\\u6d41\\u5236\\u71e5\\u4ef7\\u3011FILA\\u6590\\u4e50\\u5b98\\u65b9\\u5973\\u5b50\\u9488\\u7ec7\\u957f\\u88e42020\\u79cb\\u5b63\\u65b0\\u6b3e\\u5bbd\\u677e\\u6536\\u53e3\\u536b\\u88e4\\u4f11\\u95f2\\u88e4\\u8fd0\\u52a8\\u88e4\&quot;,\&quot;childPlatformGoodsAttr\&quot;:\&quot;\\u989c\\u8272\\u5206\\u7c7b:\\u4f20\\u5947\\u84dd-NV;\\u5c3a\\u7801:165\\\\/66A\\\\/M\&quot;}],\&quot;settleDetails\&quot;:[{\&quot;billNo\&quot;:\&quot;${billNo}\&quot;,\&quot;settleMethodId\&quot;:\&quot;100081\&quot;,\&quot;code\&quot;:\&quot;chinabank\&quot;,\&quot;name\&quot;:\&quot;\\u7f51\\u94f6\\u5728\\u7ebf\&quot;,\&quot;amountSettle\&quot;:\&quot;109.00\&quot;,\&quot;amountPaidIn\&quot;:\&quot;109.00\&quot;,\&quot;integralUsed\&quot;:\&quot;0\&quot;,\&quot;billNoRef\&quot;:\&quot;\&quot;,\&quot;remarks\&quot;:\&quot;\&quot;,\&quot;retailOrderBillId\&quot;:\&quot;7346995607300472832\&quot;,\&quot;payDate\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;}],\&quot;antaDistributionInfos\&quot;:[{\&quot;billNo\&quot;:\&quot;${billNo}\&quot;,\&quot;onlineShopTransNo\&quot;:\&quot;101161987989\&quot;,\&quot;TBDistriPurNo\&quot;:\&quot;\&quot;,\&quot;TBDistriTradeNo\&quot;:\&quot;\&quot;,\&quot;alipayTransNo\&quot;:\&quot;\&quot;,\&quot;receiver\&quot;:\&quot;\\u502a\\u7389\\u5fae\&quot;,\&quot;addressDesc\&quot;:\&quot;\\u6e56\\u5357\\u7701 \\u682a\\u6d32\\u5e02 \\u708e\\u9675\\u53bf \\u971e\\u9633\\u9547\\u9f99\\u4e95\\u5c0f\\u533a\&quot;,\&quot;receiverTel\&quot;:\&quot;18627537337\&quot;,\&quot;mobile\&quot;:\&quot;18627537337\&quot;,\&quot;email\&quot;:\&quot;\&quot;,\&quot;countryId\&quot;:\&quot;1\&quot;,\&quot;provinceId\&quot;:\&quot;${provinceId_return}\&quot;,\&quot;cityId\&quot;:\&quot;430200\&quot;,\&quot;districtId\&quot;:\&quot;430225\&quot;,\&quot;address\&quot;:\&quot;\\u971e\\u9633\\u9547\\u9f99\\u4e95\\u5c0f\\u533a\&quot;,\&quot;zipCode\&quot;:\&quot;\&quot;,\&quot;deliveryTypeId\&quot;:0,\&quot;deliveryTypeCode\&quot;:\&quot;\&quot;,\&quot;deliveryTypeName\&quot;:\&quot;\&quot;,\&quot;deliveryNo\&quot;:\&quot;\&quot;,\&quot;wareHouseOutId\&quot;:\&quot;100031\&quot;,\&quot;whareaTypeOutId\&quot;:\&quot;100002\&quot;,\&quot;weigh\&quot;:\&quot;0.00\&quot;,\&quot;wareHouseDefaultId\&quot;:\&quot;100031\&quot;,\&quot;wareHouseRealId\&quot;:\&quot;100031\&quot;}],\&quot;createDate\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;,\&quot;salesPromotion\&quot;:\&quot;\&quot;,\&quot;couponsInfo\&quot;:\&quot;\&quot;}]&quot;,&quot;token&quot;:&quot;admin&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/service/retailOrderService/create?${ddcj_urlvar}&amp;sign=${ddcj_sign}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout">20000</stringProp>
              <stringProp name="HTTPSampler.response_timeout">30000</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ddcj_urlvar" elementType="Argument">
                    <stringProp name="Argument.name">ddcj_urlvar</stringProp>
                    <stringProp name="Argument.value">app_key=23212136&amp;target_app_key=23212136&amp;method=baison.eplus.retailorderbill.create&amp;timestamp=2019-02-18 15:05:24&amp;app_secret=437bd4a3f04b2cce8ccc41924b09dc49&amp;format=json&amp;sign_method=md5&amp;v=2.0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="ddcj_secret" elementType="Argument">
                    <stringProp name="Argument.name">ddcj_secret</stringProp>
                    <stringProp name="Argument.value">437bd4a3f04b2cce8ccc41924b09dc49</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </Arguments>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.anta.jmeter.AntaRSAUtil;
import org.apache.jmeter.config.Arguments;

Arguments args = sampler.getArguments();
String postjson = vars.get(&quot;ddcj_urlvar&quot;);
String secret= vars.get(&quot;ddcj_secret&quot;);
String content = args.toString();

String sign = AntaRSAUtil.generaSignature(postjson, content.substring(1, content.length()-2), secret);
vars.put(&quot;ddcj_sign&quot;,sign);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1100399465">&quot;result&quot;:&quot;SUCCESS&quot;,&quot;success&quot;:true</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器_ddcj_result" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ddcj_result</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;result&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 缓存响应数据" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">// cache response data for monitor write file
vars.put(&quot;xResponseData&quot;, prev.getResponseDataAsString());

//
//System.out.println(&quot;sampler response data is &quot; + prev.getResponseDataAsString());</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果（If）控制器" enabled="true">
              <stringProp name="IfController.condition">${__jexl3(&quot;${ddcj_result}&quot; == &quot;SUCCESS&quot;,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="快递适配" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;dataContent&quot;:&quot;[{\&quot;billNo\&quot;:\&quot;${billNo}\&quot;,\&quot;wareHouseId\&quot;:\&quot;${wareHouseId_return}\&quot;,\&quot;shopId\&quot;:\&quot;${shopId}\&quot;,\&quot;platformCode\&quot;:\&quot;jingdong\&quot;,\&quot;payState\&quot;:\&quot;2\&quot;,\&quot;totalWeigh\&quot;:\&quot;0.00\&quot;,\&quot;amountTotal\&quot;:\&quot;109.00\&quot;,\&quot;provinceId\&quot;:\&quot;430000\&quot;,\&quot;cityId\&quot;:\&quot;430200\&quot;,\&quot;districtId\&quot;:\&quot;430225\&quot;,\&quot;ordertype\&quot;:0,\&quot;platformGoodsIds\&quot;:[],\&quot;singleProductCodes\&quot;:[\&quot;F11W038605FNVMCN\&quot;,\&quot;F13W018313F99XSCN\&quot;],\&quot;isCod\&quot;:0,\&quot;jsxz\&quot;:0}]&quot;,&quot;token&quot;:&quot;admin&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/service/regionalExpressService/filterExpress?${kdsp_urlvar}&amp;sign=${kdsp_sign}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">20000</stringProp>
                <stringProp name="HTTPSampler.response_timeout">30000</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="kdsp_urlvar" elementType="Argument">
                      <stringProp name="Argument.name">kdsp_urlvar</stringProp>
                      <stringProp name="Argument.value">app_key=23212136&amp;target_app_key=23212136&amp;method=baison.eplus.orderdistribute.shipping&amp;timestamp=2019-02-18 15:05:24&amp;app_secret=437bd4a3f04b2cce8ccc41924b09dc49&amp;format=json&amp;sign_method=md5&amp;v=2.0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="kdsp_secret" elementType="Argument">
                      <stringProp name="Argument.name">kdsp_secret</stringProp>
                      <stringProp name="Argument.value">437bd4a3f04b2cce8ccc41924b09dc49</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="billNoFile" elementType="Argument">
                      <stringProp name="Argument.name">billNoFile</stringProp>
                      <stringProp name="Argument.value">anta-2020/data/billNo.csv</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </Arguments>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import com.anta.jmeter.AntaRSAUtil;
import org.apache.jmeter.config.Arguments;

Arguments args = sampler.getArguments();
String postjson = vars.get(&quot;kdsp_urlvar&quot;);
String secret= vars.get(&quot;kdsp_secret&quot;);
String content = args.toString();

String sign = AntaRSAUtil.generaSignature(postjson, content.substring(1, content.length()-2), secret);
vars.put(&quot;kdsp_sign&quot;,sign);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1100399465">&quot;result&quot;:&quot;SUCCESS&quot;,&quot;success&quot;:true</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-logisticsCode_return" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">logisticsCode_return</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;code&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-logisticsName_return" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">logisticsName_return</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;name&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器_kdsp_result" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">kdsp_result</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;result&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 后置处理程序" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import com.anta.jmeter.WriteFileUtil;

String billNo = vars.get(&quot;billNo&quot;);
String billNoFile=vars.get(&quot;billNoFile&quot;);

WriteFileUtil.writeFile(billNoFile,billNo);</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 缓存响应数据" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">// cache response data for monitor write file
vars.put(&quot;xResponseData&quot;, prev.getResponseDataAsString());

//
//System.out.println(&quot;sampler response data is &quot; + prev.getResponseDataAsString());</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果（If）控制器" enabled="true">
                <stringProp name="IfController.condition">${__jexl3(&quot;${kdsp_result}&quot; == &quot;SUCCESS&quot;,)}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
                <boolProp name="IfController.useExpression">true</boolProp>
              </IfController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="推送WMS_FXOMS" enabled="false">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;request&gt;&#xd;
    &lt;deliveryOrder&gt;&#xd;
        &lt;deliveryOrderCode&gt;${billNo}&lt;/deliveryOrderCode&gt;&#xd;
        &lt;orderType&gt;JYCK&lt;/orderType&gt;&#xd;
        &lt;warehouseCode&gt;16&lt;/warehouseCode&gt;&#xd;
        &lt;orderFlag/&gt;&#xd;
        &lt;sourcePlatformCode&gt;JD&lt;/sourcePlatformCode&gt;&#xd;
        &lt;sourcePlatformName&gt;京东&lt;/sourcePlatformName&gt;&#xd;
        &lt;createTime&gt;2019-08-19 23:01:48&lt;/createTime&gt;&#xd;
        &lt;placeOrderTime&gt;2019-08-19 23:01:48&lt;/placeOrderTime&gt;&#xd;
        &lt;payTime&gt;2019-08-19 23:02:01&lt;/payTime&gt;&#xd;
        &lt;payNo&gt;101161987989&lt;/payNo&gt;&#xd;
        &lt;operateTime&gt;2019-08-19 23:02:08&lt;/operateTime&gt;&#xd;
        &lt;shopNick&gt;${shopName}&lt;/shopNick&gt;&#xd;
        &lt;buyerNick&gt;jd_pepgumdtmyrw&lt;/buyerNick&gt;&#xd;
        &lt;totalAmount&gt;109.00&lt;/totalAmount&gt;&#xd;
        &lt;itemAmount&gt;119.00&lt;/itemAmount&gt;&#xd;
        &lt;discountAmount&gt;10.00&lt;/discountAmount&gt;&#xd;
        &lt;freight&gt;0.00&lt;/freight&gt;&#xd;
        &lt;arAmount&gt;0&lt;/arAmount&gt;&#xd;
        &lt;gotAmount&gt;109.00&lt;/gotAmount&gt;&#xd;
        &lt;ownerCode&gt;56283928-9&lt;/ownerCode&gt;&#xd;
        &lt;logisticsCode&gt;${logisticsCode_return}&lt;/logisticsCode&gt;&#xd;
        &lt;logisticsName&gt;${logisticsName_return}&lt;/logisticsName&gt;&#xd;
        &lt;buyerMessage/&gt;&#xd;
        &lt;expressCode/&gt;&#xd;
        &lt;sellerMessage/&gt;&#xd;
        &lt;remark/&gt;&#xd;
        &lt;senderInfo&gt;&#xd;
            &lt;name&gt;孙艳波&lt;/name&gt;&#xd;
            &lt;zipCode&gt;362261&lt;/zipCode&gt;&#xd;
            &lt;tel&gt;010-85893455-8098&lt;/tel&gt;&#xd;
            &lt;mobile&gt;010-85893455-8098&lt;/mobile&gt;&#xd;
            &lt;email/&gt;&#xd;
            &lt;province&gt;福建省&lt;/province&gt;&#xd;
            &lt;city&gt;泉州市&lt;/city&gt;&#xd;
            &lt;area&gt;晋江市&lt;/area&gt;&#xd;
            &lt;detailAddress&gt;福建省泉州市晋江市五里工业区欣鑫22号鸿达物流3号仓库&lt;/detailAddress&gt;&#xd;
        &lt;/senderInfo&gt;&#xd;
        &lt;receiverInfo&gt;&#xd;
            &lt;name&gt;倪玉微&lt;/name&gt;&#xd;
            &lt;zipCode/&gt;&#xd;
            &lt;tel&gt;18627537337&lt;/tel&gt;&#xd;
            &lt;mobile&gt;18627537337&lt;/mobile&gt;&#xd;
            &lt;email/&gt;&#xd;
            &lt;countryCode&gt;中国&lt;/countryCode&gt;&#xd;
            &lt;province&gt;湖南省&lt;/province&gt;&#xd;
            &lt;city&gt;株洲市&lt;/city&gt;&#xd;
            &lt;area&gt;炎陵县&lt;/area&gt;&#xd;
            &lt;detailAddress&gt;湖南省 株洲市 炎陵县 霞阳镇龙井小区&lt;/detailAddress&gt;&#xd;
        &lt;/receiverInfo&gt;&#xd;
        &lt;invoiceFlag&gt;N&lt;/invoiceFlag&gt;&#xd;
        &lt;invoices&gt;&#xd;
            &lt;invoice&gt;&#xd;
                &lt;type/&gt;&#xd;
                &lt;header/&gt;&#xd;
                &lt;amount&gt;109&lt;/amount&gt;&#xd;
                &lt;content/&gt;&#xd;
                &lt;taxNumber/&gt;&#xd;
            &lt;/invoice&gt;&#xd;
        &lt;/invoices&gt;&#xd;
    &lt;/deliveryOrder&gt;&#xd;
    &lt;orderLines&gt;&#xd;
        &lt;orderLine&gt;&#xd;
            &lt;orderLineNo&gt;7&lt;/orderLineNo&gt;&#xd;
            &lt;sourceOrderCode&gt;101161987989&lt;/sourceOrderCode&gt;&#xd;
            &lt;subSourceOrderCode/&gt;&#xd;
            &lt;ownerCode&gt;ANTA_PRODUCT_MW_for_oms&lt;/ownerCode&gt;&#xd;
            &lt;itemCode&gt;6903711302583&lt;/itemCode&gt;&#xd;
            &lt;itemId/&gt;&#xd;
            &lt;itemName&gt;篮球鞋&lt;/itemName&gt;&#xd;
            &lt;planQty&gt;${qty_return}&lt;/planQty&gt;&#xd;
            &lt;actualPrice&gt;109.00&lt;/actualPrice&gt;&#xd;
        &lt;/orderLine&gt;&#xd;
    &lt;/orderLines&gt;&#xd;
    &lt;extendProps&gt;&#xd;
        &lt;is_gkd_order&gt;0&lt;/is_gkd_order&gt;&#xd;
        &lt;isv_pack_type_no&gt;attr1490838854282&lt;/isv_pack_type_no&gt;&#xd;
        &lt;extend&gt;[{&quot;erp_order_line_num&quot;:&quot;7&quot;,&quot;oid&quot;:&quot;&quot;,&quot;goods_id&quot;:&quot;${goodsId_return}&quot;,&quot;goods_sn&quot;:&quot;31831104-1&quot;,&quot;shop_price&quot;:&quot;279.00&quot;,&quot;discount&quot;:&quot;0.4265&quot;,&quot;discount_fee&quot;:&quot;160.00&quot;,&quot;payment&quot;:&quot;119.00&quot;,&quot;share_price&quot;:&quot;109.00&quot;,&quot;share_payment&quot;:&quot;109.00&quot;,&quot;share_discount_fee&quot;:&quot;150.00&quot;,&quot;cost_price&quot;:&quot;0.00&quot;,&quot;market_price&quot;:&quot;299.00&quot;,&quot;goods_price&quot;:&quot;119.00&quot;,&quot;share_other_discount_fee&quot;:&quot;10.00&quot;,&quot;outer_goods_sn&quot;:&quot;30691973749&quot;,&quot;outer_sku_id&quot;:0,&quot;sku_id&quot;:&quot;1&quot;,&quot;color_id&quot;:&quot;2&quot;,&quot;size_id&quot;:&quot;2&quot;,&quot;is_gift&quot;:&quot;0&quot;,&quot;weigh&quot;:&quot;0.00&quot;,&quot;brand_id&quot;:&quot;0&quot;,&quot;cat_id&quot;:&quot;0&quot;,&quot;original_order_sn&quot;:&quot;FX1908080000001&quot;,&quot;original_deal_code&quot;:&quot;101161987989&quot;,&quot;barcode&quot;:&quot;${barcode_return}&quot;,&quot;share_shipping_fee&quot;:&quot;0.00&quot;,&quot;tc_sku_id&quot;:&quot;0&quot;,&quot;cx_id&quot;:&quot;0&quot;,&quot;is_dzp&quot;:0,&quot;goods_attr&quot;:&quot;5a6J6LiP56ul6Z6LMjAxOeaYpeeni+Wto+aWsOasvuearue9kee7k+WQiOmAj+awlOeUt+S4reWkp+erpei\/kOWKqOmei+iIkumAguWHj+mch+WEv+erpeevrueQg+meizMxODMxMTA0IOm7kS\/lpKflrabnuqIv5a6J6LiP55m9LTEgMzgv5YaF&quot;}]&lt;/extend&gt;&#xd;
        &lt;order_id&gt;8&lt;/order_id&gt;&#xd;
        &lt;sd_id&gt;${shopId}&lt;/sd_id&gt;&#xd;
        &lt;shop_code&gt;${shopCode}&lt;/shop_code&gt;&#xd;
        &lt;qd_id&gt;33&lt;/qd_id&gt;&#xd;
        &lt;user_id&gt;0&lt;/user_id&gt;&#xd;
        &lt;order_status&gt;1&lt;/order_status&gt;&#xd;
        &lt;shipping_status&gt;3&lt;/shipping_status&gt;&#xd;
        &lt;sync_status&gt;0&lt;/sync_status&gt;&#xd;
        &lt;sync_lock&gt;1&lt;/sync_lock&gt;&#xd;
        &lt;ck_id&gt;${wareHouseId_return}&lt;/ck_id&gt;&#xd;
        &lt;fhck_id&gt;${wareHouseId_return}&lt;/fhck_id&gt;&#xd;
        &lt;fhck_dm&gt;${wareHouseCode_return}&lt;/fhck_dm&gt;&#xd;
        &lt;fhck_kw_id&gt;100002&lt;/fhck_kw_id&gt;&#xd;
        &lt;stfhck_id&gt;0&lt;/stfhck_id&gt;&#xd;
        &lt;stfhck_kw_id&gt;0&lt;/stfhck_kw_id&gt;&#xd;
        &lt;receiver_country&gt;1&lt;/receiver_country&gt;&#xd;
        &lt;receiver_province&gt;430000&lt;/receiver_province&gt;&#xd;
        &lt;receiver_city&gt;430200&lt;/receiver_city&gt;&#xd;
        &lt;receiver_district&gt;430225&lt;/receiver_district&gt;&#xd;
        &lt;shipping_id&gt;149&lt;/shipping_id&gt;&#xd;
        &lt;goods_count&gt;1&lt;/goods_count&gt;&#xd;
        &lt;sku_count&gt;1&lt;/sku_count&gt;&#xd;
        &lt;is_weigh&gt;0&lt;/is_weigh&gt;&#xd;
        &lt;weigh&gt;0.00&lt;/weigh&gt;&#xd;
        &lt;invoice_amount&gt;109&lt;/invoice_amount&gt;&#xd;
        &lt;pay_id&gt;5&lt;/pay_id&gt;&#xd;
        &lt;pay_name&gt;网银在线&lt;/pay_name&gt;&#xd;
        &lt;pay_code&gt;chinabank&lt;/pay_code&gt;&#xd;
        &lt;pay_status&gt;2&lt;/pay_status&gt;&#xd;
        &lt;shipping_time_tzph&gt;1570624275&lt;/shipping_time_tzph&gt;&#xd;
        &lt;total_amount&gt;279.00&lt;/total_amount&gt;&#xd;
        &lt;market_goods_amount&gt;279.00&lt;/market_goods_amount&gt;&#xd;
        &lt;shipping_fee&gt;0.00&lt;/shipping_fee&gt;&#xd;
        &lt;cod_fee&gt;0.00&lt;/cod_fee&gt;&#xd;
        &lt;other_discount_fee&gt;10.00&lt;/other_discount_fee&gt;&#xd;
        &lt;discount_fee&gt;160.00&lt;/discount_fee&gt;&#xd;
        &lt;is_yfp&gt;0&lt;/is_yfp&gt;&#xd;
        &lt;status_kc&gt;1&lt;/status_kc&gt;&#xd;
        &lt;is_combine_new&gt;0&lt;/is_combine_new&gt;&#xd;
        &lt;is_combine&gt;0&lt;/is_combine&gt;&#xd;
        &lt;is_split&gt;0&lt;/is_split&gt;&#xd;
        &lt;is_split_new&gt;0&lt;/is_split_new&gt;&#xd;
        &lt;is_copy&gt;1&lt;/is_copy&gt;&#xd;
        &lt;is_hh&gt;0&lt;/is_hh&gt;&#xd;
        &lt;mdck_id&gt;0&lt;/mdck_id&gt;&#xd;
        &lt;is_customization&gt;0&lt;/is_customization&gt;&#xd;
        &lt;cxsp/&gt;&#xd;
        &lt;system/&gt;&#xd;
        &lt;edit_shipping_time&gt;1570624271&lt;/edit_shipping_time&gt;&#xd;
        &lt;outWareHouseType&gt;0&lt;/outWareHouseType&gt;&#xd;
        &lt;priority&gt;1&lt;/priority&gt;&#xd;
        &lt;vendor_code/&gt;&#xd;
        &lt;carrier&gt;${logisticsCode_return}&lt;/carrier&gt;&#xd;
        &lt;carrier_product/&gt;&#xd;
        &lt;monthly_account/&gt;&#xd;
        &lt;out_warehouse_type&gt;0&lt;/out_warehouse_type&gt;&#xd;
        &lt;orig_bill_type&gt;3&lt;/orig_bill_type&gt;&#xd;
        &lt;source/&gt;&#xd;
        &lt;brand_code&gt;FILA&lt;/brand_code&gt;&#xd;
        &lt;brandName&gt;FILA&lt;/brandName&gt;&#xd;
        &lt;shipping_product&gt;sf&lt;/shipping_product&gt;&#xd;
        &lt;is_electprouct&gt;0&lt;/is_electprouct&gt;&#xd;
        &lt;company_note/&gt;&#xd;
    &lt;/extendProps&gt;&#xd;
&lt;/request&gt;</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/service/api/oms/FXOMS?${tswms_fxoms_urlvar}&amp;app_secret=${tswms_fxoms_secret}&amp;sign=${tswms_fxoms_sign}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout">20000</stringProp>
                  <stringProp name="HTTPSampler.response_timeout">30000</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="tswms_fxoms_urlvar" elementType="Argument">
                        <stringProp name="Argument.name">tswms_fxoms_urlvar</stringProp>
                        <stringProp name="Argument.value">app_key=12203817&amp;target_app_key=12203817&amp;method=taobao.qimen.deliveryorder.create&amp;timestamp=2018-08-07 13:33:48&amp;app_secret=b77988be8817404062882de0250e6567&amp;format=xml&amp;sign_method=md5&amp;v=2.0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="tswms_fxoms_postvar_header" elementType="Argument">
                        <stringProp name="Argument.name">tswms_fxoms_postvar_header</stringProp>
                        <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="tswms_fxoms_secret" elementType="Argument">
                        <stringProp name="Argument.name">tswms_fxoms_secret</stringProp>
                        <stringProp name="Argument.value">b77988be8817404062882de0250e6567</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="tswms_fxoms_postvar_content" elementType="Argument">
                        <stringProp name="Argument.name">tswms_fxoms_postvar_content</stringProp>
                        <stringProp name="Argument.value">&lt;request&gt;&lt;deliveryOrder&gt;&lt;deliveryOrderCode&gt;HQ1908190000008&lt;/deliveryOrderCode&gt;&lt;orderType&gt;JYCK&lt;/orderType&gt;&lt;warehouseCode&gt;16&lt;/warehouseCode&gt;&lt;orderFlag/&gt;&lt;sourcePlatformCode&gt;JD&lt;/sourcePlatformCode&gt;&lt;sourcePlatformName&gt;京东&lt;/sourcePlatformName&gt;&lt;createTime&gt;2019-08-19 23:01:48&lt;/createTime&gt;&lt;placeOrderTime&gt;2019-08-19 23:01:48&lt;/placeOrderTime&gt;&lt;payTime&gt;2019-08-19 23:02:01&lt;/payTime&gt;&lt;payNo&gt;101161987989&lt;/payNo&gt;&lt;operateTime&gt;2019-08-19 23:02:08&lt;/operateTime&gt;&lt;shopNick&gt;北京吉元安踏京东专卖店&lt;/shopNick&gt;&lt;buyerNick&gt;jd_pepgumdtmyrw&lt;/buyerNick&gt;&lt;totalAmount&gt;109.00&lt;/totalAmount&gt;&lt;itemAmount&gt;119.00&lt;/itemAmount&gt;&lt;discountAmount&gt;10.00&lt;/discountAmount&gt;&lt;freight&gt;0.00&lt;/freight&gt;&lt;arAmount&gt;0&lt;/arAmount&gt;&lt;gotAmount&gt;109.00&lt;/gotAmount&gt;&lt;logisticsCode&gt;YTO_BJJY&lt;/logisticsCode&gt;&lt;logisticsName&gt;圆通速递北京吉元专用&lt;/logisticsName&gt;&lt;buyerMessage/&gt;&lt;expressCode/&gt;&lt;sellerMessage/&gt;&lt;remark/&gt;&lt;senderInfo&gt;&lt;name&gt;孙艳波&lt;/name&gt;&lt;zipCode&gt;362261&lt;/zipCode&gt;&lt;tel&gt;010-85893455-8098&lt;/tel&gt;&lt;mobile&gt;010-85893455-8098&lt;/mobile&gt;&lt;email/&gt;&lt;province&gt;福建省&lt;/province&gt;&lt;city&gt;泉州市&lt;/city&gt;&lt;area&gt;晋江市&lt;/area&gt;&lt;detailAddress&gt;福建省泉州市晋江市五里工业区欣鑫22号鸿达物流3号仓库&lt;/detailAddress&gt;&lt;/senderInfo&gt;&lt;receiverInfo&gt;&lt;name&gt;倪玉微&lt;/name&gt;&lt;zipCode/&gt;&lt;tel&gt;18627537337&lt;/tel&gt;&lt;mobile&gt;18627537337&lt;/mobile&gt;&lt;email/&gt;&lt;countryCode&gt;中国&lt;/countryCode&gt;&lt;province&gt;湖南省&lt;/province&gt;&lt;city&gt;株洲市&lt;/city&gt;&lt;area&gt;炎陵县&lt;/area&gt;&lt;detailAddress&gt;湖南省 株洲市 炎陵县 霞阳镇龙井小区&lt;/detailAddress&gt;&lt;/receiverInfo&gt;&lt;invoiceFlag&gt;N&lt;/invoiceFlag&gt;&lt;invoices&gt;&lt;invoice&gt;&lt;type/&gt;&lt;header/&gt;&lt;amount&gt;109&lt;/amount&gt;&lt;content/&gt;&lt;taxNumber/&gt;&lt;/invoice&gt;&lt;/invoices&gt;&lt;/deliveryOrder&gt;&lt;orderLines&gt;&lt;orderLine&gt;&lt;orderLineNo&gt;7&lt;/orderLineNo&gt;&lt;sourceOrderCode&gt;101161987989&lt;/sourceOrderCode&gt;&lt;subSourceOrderCode/&gt;&lt;ownerCode/&gt;&lt;itemCode&gt;6903711302583&lt;/itemCode&gt;&lt;itemId/&gt;&lt;itemName&gt;篮球鞋&lt;/itemName&gt;&lt;planQty&gt;1&lt;/planQty&gt;&lt;actualPrice&gt;109.00&lt;/actualPrice&gt;&lt;/orderLine&gt;&lt;/orderLines&gt;&lt;extendProps&gt;&lt;isv_pack_type_no&gt;attr1490838854282&lt;/isv_pack_type_no&gt;&lt;extend&gt;[{&quot;erp_order_line_num&quot;:&quot;7&quot;,&quot;oid&quot;:&quot;&quot;,&quot;goods_id&quot;:&quot;109240&quot;,&quot;goods_sn&quot;:&quot;31831104-1&quot;,&quot;shop_price&quot;:&quot;279.00&quot;,&quot;discount&quot;:&quot;0.4265&quot;,&quot;discount_fee&quot;:&quot;160.00&quot;,&quot;payment&quot;:&quot;119.00&quot;,&quot;share_price&quot;:&quot;109.00&quot;,&quot;share_payment&quot;:&quot;109.00&quot;,&quot;share_discount_fee&quot;:&quot;150.00&quot;,&quot;cost_price&quot;:&quot;0.00&quot;,&quot;market_price&quot;:&quot;299.00&quot;,&quot;goods_price&quot;:&quot;119.00&quot;,&quot;share_other_discount_fee&quot;:&quot;10.00&quot;,&quot;outer_goods_sn&quot;:&quot;30691973749&quot;,&quot;outer_sku_id&quot;:0,&quot;sku_id&quot;:&quot;1&quot;,&quot;color_id&quot;:&quot;2&quot;,&quot;size_id&quot;:&quot;2&quot;,&quot;is_gift&quot;:&quot;0&quot;,&quot;weigh&quot;:&quot;0.00&quot;,&quot;brand_id&quot;:&quot;0&quot;,&quot;cat_id&quot;:&quot;0&quot;,&quot;original_order_sn&quot;:&quot;FX1908080000001&quot;,&quot;original_deal_code&quot;:&quot;101161987989&quot;,&quot;barcode&quot;:&quot;6903711302583&quot;,&quot;share_shipping_fee&quot;:&quot;0.00&quot;,&quot;tc_sku_id&quot;:&quot;0&quot;,&quot;cx_id&quot;:&quot;0&quot;,&quot;is_dzp&quot;:0,&quot;goods_attr&quot;:&quot;5a6J6LiP56ul6Z6LMjAxOeaYpeeni+Wto+aWsOasvuearue9kee7k+WQiOmAj+awlOeUt+S4reWkp+erpei\/kOWKqOmei+iIkumAguWHj+mch+WEv+erpeevrueQg+meizMxODMxMTA0IOm7kS\/lpKflrabnuqIv5a6J6LiP55m9LTEgMzgv5YaF&quot;}]&lt;/extend&gt;&lt;order_id&gt;8&lt;/order_id&gt;&lt;sd_id&gt;10170&lt;/sd_id&gt;&lt;shop_code&gt;BJJY_ANTAFXJDOB&lt;/shop_code&gt;&lt;qd_id&gt;33&lt;/qd_id&gt;&lt;user_id&gt;0&lt;/user_id&gt;&lt;order_status&gt;1&lt;/order_status&gt;&lt;shipping_status&gt;3&lt;/shipping_status&gt;&lt;sync_status&gt;0&lt;/sync_status&gt;&lt;sync_lock&gt;1&lt;/sync_lock&gt;&lt;ck_id&gt;100031&lt;/ck_id&gt;&lt;fhck_id&gt;100031&lt;/fhck_id&gt;&lt;fhck_dm&gt;CK_BJQZSC&lt;/fhck_dm&gt;&lt;fhck_kw_id&gt;100002&lt;/fhck_kw_id&gt;&lt;stfhck_id&gt;0&lt;/stfhck_id&gt;&lt;stfhck_kw_id&gt;0&lt;/stfhck_kw_id&gt;&lt;receiver_country&gt;1&lt;/receiver_country&gt;&lt;receiver_province&gt;430000&lt;/receiver_province&gt;&lt;receiver_city&gt;430200&lt;/receiver_city&gt;&lt;receiver_district&gt;430225&lt;/receiver_district&gt;&lt;shipping_id&gt;149&lt;/shipping_id&gt;&lt;goods_count&gt;1&lt;/goods_count&gt;&lt;sku_count&gt;1&lt;/sku_count&gt;&lt;is_weigh&gt;0&lt;/is_weigh&gt;&lt;weigh&gt;0.00&lt;/weigh&gt;&lt;invoice_amount&gt;109&lt;/invoice_amount&gt;&lt;pay_id&gt;5&lt;/pay_id&gt;&lt;pay_name&gt;网银在线&lt;/pay_name&gt;&lt;pay_code&gt;chinabank&lt;/pay_code&gt;&lt;pay_status&gt;2&lt;/pay_status&gt;&lt;shipping_time_tzph&gt;1570624275&lt;/shipping_time_tzph&gt;&lt;total_amount&gt;279.00&lt;/total_amount&gt;&lt;market_goods_amount&gt;279.00&lt;/market_goods_amount&gt;&lt;shipping_fee&gt;0.00&lt;/shipping_fee&gt;&lt;cod_fee&gt;0.00&lt;/cod_fee&gt;&lt;other_discount_fee&gt;10.00&lt;/other_discount_fee&gt;&lt;discount_fee&gt;160.00&lt;/discount_fee&gt;&lt;is_yfp&gt;0&lt;/is_yfp&gt;&lt;status_kc&gt;1&lt;/status_kc&gt;&lt;is_combine_new&gt;0&lt;/is_combine_new&gt;&lt;is_combine&gt;0&lt;/is_combine&gt;&lt;is_split&gt;0&lt;/is_split&gt;&lt;is_split_new&gt;0&lt;/is_split_new&gt;&lt;is_copy&gt;1&lt;/is_copy&gt;&lt;is_hh&gt;0&lt;/is_hh&gt;&lt;mdck_id&gt;0&lt;/mdck_id&gt;&lt;is_customization&gt;0&lt;/is_customization&gt;&lt;cxsp/&gt;&lt;system/&gt;&lt;edit_shipping_time&gt;1570624271&lt;/edit_shipping_time&gt;&lt;outWareHouseType&gt;0&lt;/outWareHouseType&gt;&lt;priority&gt;1&lt;/priority&gt;&lt;vendor_code/&gt;&lt;carrier&gt;YTO_BJJY&lt;/carrier&gt;&lt;carrier_product/&gt;&lt;monthly_account/&gt;&lt;out_warehouse_type&gt;0&lt;/out_warehouse_type&gt;&lt;orig_bill_type&gt;3&lt;/orig_bill_type&gt;&lt;/extendProps&gt;&lt;/request&gt;</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="billNoFile" elementType="Argument">
                        <stringProp name="Argument.name">billNoFile</stringProp>
                        <stringProp name="Argument.value">anta-2020/data/billNo.csv</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </Arguments>
                  <hashTree/>
                  <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <boolProp name="resetInterpreter">false</boolProp>
                    <stringProp name="script">/*import com.anta.jmeter.AntaRSAUtilWMS;
String postjson = vars.get(&quot;tswms_fxoms_urlvar&quot;);
String content_header= vars.get(&quot;tswms_fxoms_postvar_header&quot;);
String content= vars.get(&quot;tswms_fxoms_postvar_content&quot;);
String secret= vars.get(&quot;tswms_fxoms_secret&quot;);

String data = content_header+&quot;\r\n&quot;+content;
String sign =  AntaRSAUtilWMS.generaSignature(postjson,data,secret);
vars.put(&quot;tswms_fxoms_sign&quot;,sign);
*/

import com.anta.jmeter.AntaRSAUtilWMS;
import org.apache.jmeter.config.Arguments;

Arguments args = sampler.getArguments();
String postjson = vars.get(&quot;tswms_fxoms_urlvar&quot;);
String secret= vars.get(&quot;tswms_fxoms_secret&quot;);
String content = args.toString();

String sign = AntaRSAUtilWMS.generaSignature(postjson, content.substring(1, content.length()-2), secret);
vars.put(&quot;tswms_fxoms_sign&quot;,sign);</stringProp>
                  </BeanShellPreProcessor>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1867169789">success</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 后置处理程序" enabled="false">
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <boolProp name="resetInterpreter">false</boolProp>
                    <stringProp name="script">import com.anta.jmeter.WriteFileUtil;

String billNo = vars.get(&quot;billNo&quot;);
String billNoFile=vars.get(&quot;billNoFile&quot;);

//WriteFileUtil.writeFile(billNoFile,billNo);</stringProp>
                  </BeanShellPostProcessor>
                  <hashTree/>
                  <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 缓存响应数据" enabled="true">
                    <boolProp name="resetInterpreter">false</boolProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="script">// cache response data for monitor write file
vars.put(&quot;xResponseData&quot;, prev.getResponseDataAsString());

//
//System.out.println(&quot;sampler response data is &quot; + prev.getResponseDataAsString());</stringProp>
                  </BeanShellPostProcessor>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="订单出库" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${ddck_urlvar}&amp;data=${ddck_data}&amp;sign=${ddck_sign}&amp;source=IWMS</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/service/api/wms/EWMS</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV 数据文件设置" enabled="true">
                  <stringProp name="delimiter">,</stringProp>
                  <stringProp name="fileEncoding">UTF-8</stringProp>
                  <stringProp name="filename">data/billNo.csv</stringProp>
                  <boolProp name="ignoreFirstLine">false</boolProp>
                  <boolProp name="quotedData">false</boolProp>
                  <boolProp name="recycle">true</boolProp>
                  <stringProp name="shareMode">shareMode.all</stringProp>
                  <boolProp name="stopThread">false</boolProp>
                  <stringProp name="variableNames">ck_billNo</stringProp>
                </CSVDataSet>
                <hashTree/>
                <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="ddck_urlvar" elementType="Argument">
                      <stringProp name="Argument.name">ddck_urlvar</stringProp>
                      <stringProp name="Argument.value">key=BAISON_WMS&amp;requestTime=20191008184623&amp;version=0.1&amp;serviceType=UpdateSalesOrderStatus</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="ddck_data_tmp" elementType="Argument">
                      <stringProp name="Argument.name">ddck_data_tmp</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;root&gt;&lt;warehouseCode /&gt;&lt;orderCode&gt;FT1910084143648&lt;/orderCode&gt;&lt;orderStatus&gt;WMS_WEIGHT&lt;/orderStatus&gt;&lt;operator /&gt;&lt;operatorTime&gt;2019-10-08 17:28:58&lt;/operatorTime&gt;&lt;logisticsProviderCode&gt;YTO_ZZAF&lt;/logisticsProviderCode&gt;&lt;shippingOrderNo&gt;YT4127066165255&lt;/shippingOrderNo&gt;&lt;weight&gt;0.5900&lt;/weight&gt;&lt;volume&gt;0.0000&lt;/volume&gt;&lt;OrigWHID&gt;08&lt;/OrigWHID&gt;&lt;OrigWHName&gt;郑州安发B2C仓&lt;/OrigWHName&gt;&lt;billCode&gt;CK08201910080027305&lt;/billCode&gt;&lt;SystemType&gt;1&lt;/SystemType&gt;&lt;/root&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="ddck_secret" elementType="Argument">
                      <stringProp name="Argument.name">ddck_secret</stringProp>
                      <stringProp name="Argument.value">fd66c2a616c278ca918fa47055a164ef</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </Arguments>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import com.anta.jmeter.AntaRSAUtilDDCK;
import java.util.Date;

String postjson = vars.get(&quot;ddck_urlvar&quot;);
String content= vars.get(&quot;ddck_data_tmp&quot;);
String secret= vars.get(&quot;ddck_secret&quot;);
String ck_billNo = vars.get(&quot;billNo&quot;);
//String ck_billNo = vars.get(&quot;ck_billNo&quot;);

String shippingOrderNo = String.valueOf(new Date().getTime());
String billCode = String.valueOf(new Date().getTime());

content = content.replace(&quot;FT1910084143648&quot;,ck_billNo);
content = content.replace(&quot;YT4127066165255&quot;,&quot;YT&quot;+shippingOrderNo);
content = content.replace(&quot;CK08201910080027305&quot;,&quot;CK&quot;+billCode);



vars.put(&quot;ddck_data&quot;,content);

String sign =  AntaRSAUtilDDCK.generaSignature(postjson,content,secret);
vars.put(&quot;ddck_sign&quot;,sign);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1149187101">SUCCESS</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 缓存响应数据" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">// cache response data for monitor write file
vars.put(&quot;xResponseData&quot;, prev.getResponseDataAsString());

//
//System.out.println(&quot;sampler response data is &quot; + prev.getResponseDataAsString());</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.TransactionsPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transactions per Second" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">30000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Over Time" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">30000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <BeanShellListener guiclass="TestBeanGUI" testclass="BeanShellListener" testname="错误监听器" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">import java.text.SimpleDateFormat;
import com.jmeterx.async.AsyncFileUtils;

String errSamplerFile = vars.get(&quot;errSamplerFile&quot;);

if (!prev.isSuccessful()) {
	String samplerData = prev.getSamplerData();
	String responseData = vars.get(&quot;xResponseData&quot;);
	//String responseData = prev.getResponseDataAsString();
	
	SimpleDateFormat fmt =  new 
		SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss.SSS&quot;);
	String begtime = fmt.format(prev.getStartTime());
	String endtime = fmt.format(prev.getEndTime());
	long cost = prev.getEndTime() - prev.getStartTime();
	
	String data = &quot;sampler error&quot;
		+ &quot;\n======beg=======\n&quot; 
		+ &quot;Sampler &quot; + prev.getSampleLabel()
		+ &quot;\nTime &quot; + begtime + &quot; - &quot; + endtime
		+ &quot;\nCost &quot; +  cost
		+ &quot;\n&quot; + samplerData
		+ &quot;\nResponse data:\n&quot; 
		+ responseData
		+ &quot;\n======end=======\n&quot;;

	AsyncFileUtils.writeLine(errSamplerFile, data);
}
</stringProp>
        </BeanShellListener>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="jp@gc - 订单出库（梯形）" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.num_threads">200</stringProp>
        <stringProp name="Threads initial delay">10</stringProp>
        <stringProp name="Start users count">50</stringProp>
        <stringProp name="Start users count burst">50</stringProp>
        <stringProp name="Start users period">300</stringProp>
        <stringProp name="Stop users count">30</stringProp>
        <stringProp name="Stop users period">1</stringProp>
        <stringProp name="flighttime">300</stringProp>
        <stringProp name="rampUp">5</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${__if(${xenv},debug,${wan},${__RandomFromMultipleVars(ip1|ip2,)},)}</stringProp>
          <stringProp name="HTTPSampler.port">${xport}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="订单出库" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${ddck_urlvar}&amp;data=${ddck_data}&amp;sign=${ddck_sign}&amp;source=IWMS</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/service/api/wms/EWMS</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV 数据文件设置" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">data/billNo.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">ck_billNo</stringProp>
          </CSVDataSet>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ddck_urlvar" elementType="Argument">
                <stringProp name="Argument.name">ddck_urlvar</stringProp>
                <stringProp name="Argument.value">key=BAISON_WMS&amp;requestTime=20191008184623&amp;version=0.1&amp;serviceType=UpdateSalesOrderStatus</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ddck_data_tmp" elementType="Argument">
                <stringProp name="Argument.name">ddck_data_tmp</stringProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;root&gt;&lt;warehouseCode /&gt;&lt;orderCode&gt;FT1910084143648&lt;/orderCode&gt;&lt;orderStatus&gt;WMS_WEIGHT&lt;/orderStatus&gt;&lt;operator /&gt;&lt;operatorTime&gt;2019-10-08 17:28:58&lt;/operatorTime&gt;&lt;logisticsProviderCode&gt;YTO_ZZAF&lt;/logisticsProviderCode&gt;&lt;shippingOrderNo&gt;YT4127066165255&lt;/shippingOrderNo&gt;&lt;weight&gt;0.5900&lt;/weight&gt;&lt;volume&gt;0.0000&lt;/volume&gt;&lt;OrigWHID&gt;08&lt;/OrigWHID&gt;&lt;OrigWHName&gt;郑州安发B2C仓&lt;/OrigWHName&gt;&lt;billCode&gt;CK08201910080027305&lt;/billCode&gt;&lt;SystemType&gt;1&lt;/SystemType&gt;&lt;/root&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ddck_secret" elementType="Argument">
                <stringProp name="Argument.name">ddck_secret</stringProp>
                <stringProp name="Argument.value">fd66c2a616c278ca918fa47055a164ef</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.anta.jmeter.AntaRSAUtilDDCK;
import java.util.Date;

String postjson = vars.get(&quot;ddck_urlvar&quot;);
String content= vars.get(&quot;ddck_data_tmp&quot;);
String secret= vars.get(&quot;ddck_secret&quot;);
String ck_billNo = vars.get(&quot;ck_billNo&quot;);

String shippingOrderNo = String.valueOf(new Date().getTime());
String billCode = String.valueOf(new Date().getTime());

content = content.replace(&quot;FT1910084143648&quot;,ck_billNo);
content = content.replace(&quot;YT4127066165255&quot;,&quot;YT&quot;+shippingOrderNo);
content = content.replace(&quot;CK08201910080027305&quot;,&quot;CK&quot;+billCode);



vars.put(&quot;ddck_data&quot;,content);

String sign =  AntaRSAUtilDDCK.generaSignature(postjson,content,secret);
vars.put(&quot;ddck_sign&quot;,sign);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1149187101">SUCCESS</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 缓存响应数据" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">// cache response data for monitor write file
vars.put(&quot;xResponseData&quot;, prev.getResponseDataAsString());

//
//System.out.println(&quot;sampler response data is &quot; + prev.getResponseDataAsString());</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="响应时间图" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <BeanShellListener guiclass="TestBeanGUI" testclass="BeanShellListener" testname="错误监听器" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">import java.text.SimpleDateFormat;
import com.jmeterx.async.AsyncFileUtils;

String errSamplerFile = vars.get(&quot;errSamplerFile&quot;);

if (!prev.isSuccessful()) {
	String samplerData = prev.getSamplerData();
	String responseData = vars.get(&quot;xResponseData&quot;);
	//String responseData = prev.getResponseDataAsString();
	
	SimpleDateFormat fmt =  new 
		SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss.SSS&quot;);
	String begtime = fmt.format(prev.getStartTime());
	String endtime = fmt.format(prev.getEndTime());
	
	String data = &quot;sampler error&quot;
		+ &quot;\n======beg=======\n&quot; 
		+ &quot;Sampler &quot; + prev.getSampleLabel()
		+ &quot;\nTime &quot; + begtime + &quot; - &quot; + endtime 
		+ &quot;\n&quot; + samplerData
		+ &quot;\nResponse data:\n&quot; 
		+ responseData
		+ &quot;\n======end=======\n&quot;;

	AsyncFileUtils.writeLine(errSamplerFile, data);
}
</stringProp>
        </BeanShellListener>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="jp@gc - JITX订单" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.num_threads">300</stringProp>
        <stringProp name="Threads initial delay">10</stringProp>
        <stringProp name="Start users count">25</stringProp>
        <stringProp name="Start users count burst">25</stringProp>
        <stringProp name="Start users period">150</stringProp>
        <stringProp name="Stop users count">30</stringProp>
        <stringProp name="Stop users period">1</stringProp>
        <stringProp name="flighttime">150</stringProp>
        <stringProp name="rampUp">5</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="商品数据" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">jitx/goods.csv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">goodsId,singleProductId,sku,barcode,platformGoodsId</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="店铺数据" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">jitx/shops.csv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">shopId,shopCode,shopName</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="计数器" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end">5</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">qty</stringProp>
          <stringProp name="CounterConfig.format">0</stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${__if(${xenv},debug,${wan},${__RandomFromMultipleVars(ip1|ip2,)},)}</stringProp>
          <stringProp name="HTTPSampler.port">${xport}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="订单促销" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;dataContent&quot;:&quot;[{\&quot;orderBillNo\&quot;:\&quot;PF${__time(yyMMddHHmmssSSS,)}${__Random(111111,999999,)}\&quot;,\&quot;memberId\&quot;:\&quot;0\&quot;,\&quot;orderTime\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;,\&quot;paySettleMethodId\&quot;:\&quot;100081\&quot;,\&quot;qtyTotal\&quot;:\&quot;${qty}\&quot;,\&quot;amountTotal\&quot;:${__Random(111,999,)},\&quot;orgId\&quot;:\&quot;313625\&quot;,\&quot;shopId\&quot;:\&quot;${shopId}\&quot;,\&quot;singleProducts\&quot;:[{\&quot;goodsId\&quot;:\&quot;${goodsId}\&quot;,\&quot;singleProductId\&quot;:\&quot;${singleProductId}\&quot;,\&quot;platformGoodsId\&quot;:\&quot;${platformGoodsId}\&quot;,\&quot;qty\&quot;:\&quot;${qty}\&quot;,\&quot;amount\&quot;:${__Random(111,999,)},\&quot;isGift\&quot;:0}],\&quot;payDate\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;}]&quot;,&quot;token&quot;:&quot;admin&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/service/calculatePromotionService/calculatePromotion?${ddcx_urlvar}&amp;sign=${ddcx_sign}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">20000</stringProp>
          <stringProp name="HTTPSampler.response_timeout">30000</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ddcx_urlvar" elementType="Argument">
                <stringProp name="Argument.name">ddcx_urlvar</stringProp>
                <stringProp name="Argument.value">app_key=23212136&amp;target_app_key=23212136&amp;method=baison.eplus.orderdistribute.promotion&amp;timestamp=2019-02-18 15:05:24&amp;app_secret=437bd4a3f04b2cce8ccc41924b09dc49&amp;format=json&amp;sign_method=md5&amp;v=2.0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ddcx_secret" elementType="Argument">
                <stringProp name="Argument.name">ddcx_secret</stringProp>
                <stringProp name="Argument.value">437bd4a3f04b2cce8ccc41924b09dc49</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.anta.jmeter.AntaRSAUtil;
import org.apache.jmeter.config.Arguments;

Arguments args = sampler.getArguments();
String postjson = vars.get(&quot;ddcx_urlvar&quot;);
String secret= vars.get(&quot;ddcx_secret&quot;);
String content = args.toString();


String sign = AntaRSAUtil.generaSignature(postjson, content.substring(1, content.length()-2), secret);
vars.put(&quot;ddcx_sign&quot;,sign);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1100399465">&quot;result&quot;:&quot;SUCCESS&quot;,&quot;success&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器_ddcx_result" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">ddcx_result</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;result&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 缓存响应数据" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">// cache response data for monitor write file
vars.put(&quot;xResponseData&quot;, prev.getResponseDataAsString());

//
//System.out.println(&quot;sampler response data is &quot; + prev.getResponseDataAsString());</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果（If）控制器" enabled="true">
          <stringProp name="IfController.condition">${__jexl3(&quot;${ddcx_result}&quot; == &quot;SUCCESS&quot;,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="订单分单" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;dataContent&quot;:&quot;[{\&quot;orderBillNo\&quot;:\&quot;TS${__time(yyMMddHHmmssSSS,)}${__Random(111111,999999,)}\&quot;,\&quot;shopCode\&quot;:\&quot;${shopCode}\&quot;,\&quot;supportCashOnDelivery\&quot;:0,\&quot;preSaleOrderBill\&quot;:0,\&quot;orderBusinessType\&quot;:\&quot;JITX\&quot;,\&quot;sourceBillNo\&quot;:\&quot;20082936557980\&quot;,\&quot;isStoreDelivery\&quot;:0,\&quot;isAllowPart\&quot;:0,\&quot;contryCode\&quot;:\&quot;1\&quot;,\&quot;provinceCode\&quot;:\&quot;430000\&quot;,\&quot;cityCode\&quot;:\&quot;430200\&quot;,\&quot;areaCode\&quot;:\&quot;430225\&quot;,\&quot;skuDetail\&quot;:[{\&quot;sku\&quot;:\&quot;${sku}\&quot;,\&quot;barcode\&quot;:\&quot;${barcode}\&quot;,\&quot;qty\&quot;:\&quot;${__Random(1,5,)}\&quot;,\&quot;isGift\&quot;:\&quot;0\&quot;,\&quot;tc_sku_id\&quot;:\&quot;0\&quot;}],\&quot;isPureGift\&quot;:1}]&quot;,&quot;token&quot;:&quot;admin&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/service/orderDistributeCalculateService/distributeOrder?${ddfd_urlvar}&amp;sign=${ddfd_sign}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout">20000</stringProp>
            <stringProp name="HTTPSampler.response_timeout">30000</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ddfd_urlvar" elementType="Argument">
                  <stringProp name="Argument.name">ddfd_urlvar</stringProp>
                  <stringProp name="Argument.value">app_key=23212136&amp;target_app_key=23212136&amp;method=baison.eplus.orderdistribute.distributeorder&amp;timestamp=2019-02-18 15:05:24&amp;app_secret=437bd4a3f04b2cce8ccc41924b09dc49&amp;format=json&amp;sign_method=md5&amp;v=2.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ddfd_secret" elementType="Argument">
                  <stringProp name="Argument.name">ddfd_secret</stringProp>
                  <stringProp name="Argument.value">437bd4a3f04b2cce8ccc41924b09dc49</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.anta.jmeter.AntaRSAUtil;
import org.apache.jmeter.config.Arguments;

Arguments args = sampler.getArguments();
String postjson = vars.get(&quot;ddfd_urlvar&quot;);
String secret= vars.get(&quot;ddfd_secret&quot;);
String content = args.toString();

String sign = AntaRSAUtil.generaSignature(postjson, content.substring(1, content.length()-2), secret);
vars.put(&quot;ddfd_sign&quot;,sign);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-billNo" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">billNo</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;orderBillNo&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-wareHouseId_return" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">wareHouseId_return</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;wareHouseId&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-wareHouseCode_return" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">wareHouseCode_return</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;wareHouseCode&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-goodsId_return" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">goodsId_return</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;goodsId&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-qty_return" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">qty_return</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;qty&quot;:(.+?)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-barcode_return" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">barcode_return</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;barcode&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-deliveryNo_return" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">deliveryNo</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;deliveryNo&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">SF1885060031401</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-deliveryTypeId_return" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">deliveryTypeId_return</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;deliveryTypeId&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">100001</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-businessType_return" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">businessType</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;businessType&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">2</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-provinceId_return" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">provinceId_return</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;provinceId&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-whareaTypeId_return" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">whareaTypeId_return</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;whareaTypeId&quot;:(\d*)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1100399465">&quot;result&quot;:&quot;SUCCESS&quot;,&quot;success&quot;:true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器_ddfd_result" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">ddfd_result</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;result&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell-快递信息后处理程序" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Date;
import com.jmeterx.codec.XCodec;
import com.anta.jmeter.WriteFileUtil;


String deliveryTypeCode = &quot;sf&quot;;
String deliveryTypeName = &quot;顺丰速运&quot;;
String deliveryTypeIdRet = vars.get(&quot;deliveryTypeId_return&quot;);
String deliveryTypeNameEncode = XCodec.encodeUnicode(deliveryTypeName);


String shopName = vars.get(&quot;shopName&quot;);
String shopNameEncode = XCodec.encodeUnicode(shopName);

if (deliveryTypeIdRet.equals(&quot;100001&quot;)) {
	deliveryTypeCode = &quot;sf&quot;;
	deliveryTypeName = &quot;顺丰速运&quot;;
	deliveryTypeNameEncode = XCodec.encodeUnicode(deliveryTypeName);
}

vars.put(&quot;shopNameEncode&quot;, shopNameEncode);
vars.put(&quot;deliveryTypeCode&quot;, deliveryTypeCode);
vars.put(&quot;deliveryTypeName&quot;, deliveryTypeName);
vars.put(&quot;deliveryTypeNameEncode&quot;, deliveryTypeNameEncode);

log.info(vars.get(&quot;whareaTypeId_return&quot;));
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 缓存响应数据" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">// cache response data for monitor write file
vars.put(&quot;xResponseData&quot;, prev.getResponseDataAsString());

//
//System.out.println(&quot;sampler response data is &quot; + prev.getResponseDataAsString());</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果（If）控制器" enabled="true">
            <stringProp name="IfController.condition">${__jexl3(&quot;${ddfd_result}&quot; == &quot;SUCCESS&quot;,)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="订单创建" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;dataContent&quot;:&quot;[{\&quot;billNo\&quot;:\&quot;${billNo}\&quot;,\&quot;sourceBillNo\&quot;:\&quot;101161987989\&quot;,\&quot;businessDate\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;,\&quot;type\&quot;:1,\&quot;billDate\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;,\&quot;isFromOMS\&quot;:1,\&quot;businessType\&quot;:${businessType},\&quot;channelId\&quot;:\&quot;313625\&quot;,\&quot;channelCode\&quot;:\&quot;999902A005\&quot;,\&quot;channelName\&quot;:\&quot;\\u5317\\u4eac\\u5409\\u5143\\u76db\\u5b9d\\u56fd\\u9645\\u8d38\\u6613\\u6709\\u9650\\u516c\\u53f8\&quot;,\&quot;shopId\&quot;:\&quot;${shopId}\&quot;,\&quot;shopCode\&quot;:\&quot;${shopCode}\&quot;,\&quot;shopName\&quot;:\&quot;${shopNameEncode}\&quot;,\&quot;wareHouseId\&quot;:\&quot;${wareHouseId_return}\&quot;,\&quot;wareHouseCode\&quot;:\&quot;${wareHouseCode_return}\&quot;,\&quot;wareHouseName\&quot;:\&quot;\\u5317\\u4eac\\u5206\\u9500\\u6cc9\\u5ddeB2C\\u5b9e\\u4ed3\&quot;,\&quot;whareaTypeId\&quot;:\&quot;${whareaTypeId_return}\&quot;,\&quot;whareaTypeCode\&quot;:\&quot;SL001\&quot;,\&quot;whareaTypeName\&quot;:\&quot;\\u6b63\\u54c1\\u5e93\\u4f4d\&quot;,\&quot;vipCardNO\&quot;:\&quot;jd_pepgumdtmyrw\&quot;,\&quot;memberName\&quot;:\&quot;\\u502a\\u7389\\u5fae\&quot;,\&quot;memberNickName\&quot;:\&quot;jd_pepgumdtmyrw\&quot;,\&quot;qty\&quot;:\&quot;${qty}\&quot;,\&quot;amountGoods\&quot;:\&quot;119.00\&quot;,\&quot;totalTaxPrice\&quot;:\&quot;119.00\&quot;,\&quot;amountStandard\&quot;:\&quot;279.00\&quot;,\&quot;amountTotal\&quot;:\&quot;279.00\&quot;,\&quot;amountTag\&quot;:\&quot;279.00\&quot;,\&quot;goodsConcession\&quot;:\&quot;160.00\&quot;,\&quot;amountDiscount\&quot;:\&quot;10.00\&quot;,\&quot;otherConcession\&quot;:\&quot;10.00\&quot;,\&quot;cashCouponAmount\&quot;:0,\&quot;orderType\&quot;:\&quot;0\&quot;,\&quot;oriOrderSn\&quot;:null,\&quot;oriDealCode\&quot;:\&quot;\&quot;,\&quot;parentDealCode\&quot;:\&quot;\&quot;,\&quot;expressFee\&quot;:\&quot;0.00\&quot;,\&quot;freight\&quot;:\&quot;0.00\&quot;,\&quot;logisticsExtraFee\&quot;:\&quot;0.00\&quot;,\&quot;distributionfeeAmount\&quot;:\&quot;0.00\&quot;,\&quot;amountActual\&quot;:\&quot;109.00\&quot;,\&quot;payableAmount\&quot;:\&quot;109.00\&quot;,\&quot;amountPaid\&quot;:\&quot;109.00\&quot;,\&quot;status\&quot;:1,\&quot;distributionState\&quot;:\&quot;2\&quot;,\&quot;payState\&quot;:\&quot;2\&quot;,\&quot;payDate\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;,\&quot;payTime\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;,\&quot;platformAddTime\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;,\&quot;settleMethodId\&quot;:\&quot;100081\&quot;,\&quot;settleMethodCode\&quot;:\&quot;chinabank\&quot;,\&quot;settleMethodName\&quot;:\&quot;\\u7f51\\u94f6\\u5728\\u7ebf\&quot;,\&quot;remarks\&quot;:\&quot;\&quot;,\&quot;buyMsg\&quot;:\&quot;\&quot;,\&quot;platformId\&quot;:5,\&quot;platformCode\&quot;:\&quot;jingdong\&quot;,\&quot;platformName\&quot;:\&quot;\\u4eac\\u4e1c\&quot;,\&quot;currencyTypeId\&quot;:200012,\&quot;currencyTypeCode\&quot;:\&quot;RMB\&quot;,\&quot;currencyTypeName\&quot;:\&quot;\\u4eba\\u6c11\\u5e01\&quot;,\&quot;invoiceType\&quot;:\&quot;\&quot;,\&quot;invoiceContent\&quot;:\&quot;\&quot;,\&quot;invoicePayType\&quot;:0,\&quot;invoiceTitle\&quot;:\&quot;\&quot;,\&quot;invoiceAmount\&quot;:\&quot;109\&quot;,\&quot;invoiceNumber\&quot;:\&quot;\&quot;,\&quot;invoiceStatus\&quot;:\&quot;\&quot;,\&quot;isSplitNew\&quot;:\&quot;0\&quot;,\&quot;isCombineNew\&quot;:\&quot;0\&quot;,\&quot;isCopy\&quot;:\&quot;0\&quot;,\&quot;isShougong\&quot;:\&quot;0\&quot;,\&quot;goodsDetail\&quot;:[{\&quot;billNo\&quot;:\&quot;${billNo}\&quot;,\&quot;goodsId\&quot;:\&quot;${goodsId}\&quot;,\&quot;goodsCode\&quot;:\&quot;31831104-1\&quot;,\&quot;goodsName\&quot;:\&quot;\\u7bee\\u7403\\u978b\&quot;,\&quot;singleProductId\&quot;:\&quot;${singleProductId}\&quot;,\&quot;referencePrice\&quot;:\&quot;299.00\&quot;,\&quot;priceCost\&quot;:\&quot;0.00\&quot;,\&quot;priceStandard\&quot;:\&quot;299.00\&quot;,\&quot;shopPrice\&quot;:\&quot;279.00\&quot;,\&quot;priceTag\&quot;:\&quot;279.00\&quot;,\&quot;price\&quot;:\&quot;119.00\&quot;,\&quot;sharePrice\&quot;:\&quot;109.00\&quot;,\&quot;amountSettle\&quot;:\&quot;109.00\&quot;,\&quot;amount\&quot;:\&quot;119.00\&quot;,\&quot;qty\&quot;:\&quot;${qty}\&quot;,\&quot;amountCost\&quot;:0,\&quot;amountStandard\&quot;:279,\&quot;amountTag\&quot;:279,\&quot;amountSale\&quot;:119,\&quot;amountDiscount\&quot;:\&quot;160.00\&quot;,\&quot;isGift\&quot;:\&quot;0\&quot;,\&quot;isExchange\&quot;:\&quot;0\&quot;,\&quot;qtyReturned\&quot;:\&quot;0\&quot;,\&quot;discount\&quot;:\&quot;0.4265\&quot;,\&quot;barcode\&quot;:\&quot;${barcode}\&quot;,\&quot;oid\&quot;:\&quot;\&quot;,\&quot;VoucherCode\&quot;:\&quot;\&quot;,\&quot;setMealSpec\&quot;:\&quot;\&quot;,\&quot;otherConcession\&quot;:null,\&quot;childBillNo\&quot;:\&quot;1201949148043556895\&quot;,\&quot;childPlatformGoodsId\&quot;:\&quot;617769130877\&quot;,\&quot;childPlatformGoodsName\&quot;:\&quot;\\u3010\\u6f6e\\u6d41\\u5236\\u71e5\\u4ef7\\u3011FILA\\u6590\\u4e50\\u5b98\\u65b9\\u5973\\u5b50\\u9488\\u7ec7\\u957f\\u88e42020\\u79cb\\u5b63\\u65b0\\u6b3e\\u5bbd\\u677e\\u6536\\u53e3\\u536b\\u88e4\\u4f11\\u95f2\\u88e4\\u8fd0\\u52a8\\u88e4\&quot;,\&quot;childPlatformGoodsAttr\&quot;:\&quot;\\u989c\\u8272\\u5206\\u7c7b:\\u4f20\\u5947\\u84dd-NV;\\u5c3a\\u7801:165\\\\/66A\\\\/M\&quot;}],\&quot;settleDetails\&quot;:[{\&quot;billNo\&quot;:\&quot;${billNo}\&quot;,\&quot;settleMethodId\&quot;:\&quot;100081\&quot;,\&quot;code\&quot;:\&quot;chinabank\&quot;,\&quot;name\&quot;:\&quot;\\u7f51\\u94f6\\u5728\\u7ebf\&quot;,\&quot;amountSettle\&quot;:\&quot;109.00\&quot;,\&quot;amountPaidIn\&quot;:\&quot;109.00\&quot;,\&quot;integralUsed\&quot;:\&quot;0\&quot;,\&quot;billNoRef\&quot;:\&quot;\&quot;,\&quot;remarks\&quot;:\&quot;\&quot;,\&quot;retailOrderBillId\&quot;:\&quot;7346995607300472832\&quot;,\&quot;payDate\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;}],\&quot;antaDistributionInfos\&quot;:[{\&quot;billNo\&quot;:\&quot;${billNo}\&quot;,\&quot;onlineShopTransNo\&quot;:\&quot;101161987989\&quot;,\&quot;TBDistriPurNo\&quot;:\&quot;\&quot;,\&quot;TBDistriTradeNo\&quot;:\&quot;\&quot;,\&quot;alipayTransNo\&quot;:\&quot;\&quot;,\&quot;receiver\&quot;:\&quot;\\u502a\\u7389\\u5fae\&quot;,\&quot;addressDesc\&quot;:\&quot;\\u6e56\\u5357\\u7701 \\u682a\\u6d32\\u5e02 \\u708e\\u9675\\u53bf \\u971e\\u9633\\u9547\\u9f99\\u4e95\\u5c0f\\u533a\&quot;,\&quot;receiverTel\&quot;:\&quot;18627537337\&quot;,\&quot;mobile\&quot;:\&quot;18627537337\&quot;,\&quot;email\&quot;:\&quot;\&quot;,\&quot;countryId\&quot;:\&quot;1\&quot;,\&quot;provinceId\&quot;:\&quot;${provinceId_return}\&quot;,\&quot;cityId\&quot;:\&quot;430200\&quot;,\&quot;districtId\&quot;:\&quot;430225\&quot;,\&quot;address\&quot;:\&quot;\\u971e\\u9633\\u9547\\u9f99\\u4e95\\u5c0f\\u533a\&quot;,\&quot;zipCode\&quot;:\&quot;\&quot;,\&quot;deliveryTypeId\&quot;:\&quot;${deliveryTypeId_return}\&quot;,\&quot;deliveryTypeCode\&quot;:\&quot;${deliveryTypeCode}\&quot;,\&quot;deliveryTypeName\&quot;:\&quot;${deliveryTypeNameUTF8}\&quot;,\&quot;deliveryNo\&quot;:\&quot;${deliveryNo}\&quot;,\&quot;wareHouseOutId\&quot;:\&quot;100031\&quot;,\&quot;whareaTypeOutId\&quot;:\&quot;100002\&quot;,\&quot;weigh\&quot;:\&quot;0.00\&quot;,\&quot;wareHouseDefaultId\&quot;:\&quot;100031\&quot;,\&quot;wareHouseRealId\&quot;:\&quot;100031\&quot;}],\&quot;createDate\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;,\&quot;salesPromotion\&quot;:\&quot;\&quot;,\&quot;couponsInfo\&quot;:\&quot;\&quot;}]&quot;,&quot;token&quot;:&quot;admin&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/service/retailOrderService/create?${ddcj_urlvar}&amp;sign=${ddcj_sign}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout">20000</stringProp>
              <stringProp name="HTTPSampler.response_timeout">30000</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ddcj_urlvar" elementType="Argument">
                    <stringProp name="Argument.name">ddcj_urlvar</stringProp>
                    <stringProp name="Argument.value">app_key=23212136&amp;target_app_key=23212136&amp;method=baison.eplus.retailorderbill.create&amp;timestamp=2019-02-18 15:05:24&amp;app_secret=437bd4a3f04b2cce8ccc41924b09dc49&amp;format=json&amp;sign_method=md5&amp;v=2.0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="ddcj_secret" elementType="Argument">
                    <stringProp name="Argument.name">ddcj_secret</stringProp>
                    <stringProp name="Argument.value">437bd4a3f04b2cce8ccc41924b09dc49</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </Arguments>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.anta.jmeter.AntaRSAUtil;
import org.apache.jmeter.config.Arguments;

Arguments args = sampler.getArguments();
String postjson = vars.get(&quot;ddcj_urlvar&quot;);
String secret= vars.get(&quot;ddcj_secret&quot;);
String content = args.toString();

String sign = AntaRSAUtil.generaSignature(postjson, content.substring(1, content.length()-2), secret);
vars.put(&quot;ddcj_sign&quot;,sign);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1100399465">&quot;result&quot;:&quot;SUCCESS&quot;,&quot;success&quot;:true</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器_ddcj_result" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ddcj_result</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;result&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 缓存响应数据" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">// cache response data for monitor write file
vars.put(&quot;xResponseData&quot;, prev.getResponseDataAsString());

//
//System.out.println(&quot;sampler response data is &quot; + prev.getResponseDataAsString());</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果（If）控制器" enabled="true">
              <stringProp name="IfController.condition">${__jexl3(&quot;${ddcj_result}&quot; == &quot;SUCCESS&quot;,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="jitxBillNoFile" elementType="Argument">
                    <stringProp name="Argument.name">jitxBillNoFile</stringProp>
                    <stringProp name="Argument.value">billNoFile_JITX.csv</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </Arguments>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="推送顺丰WMS-JITX" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;request&gt;&#xd;
    &lt;deliveryOrder&gt;&#xd;
        &lt;deliveryOrderCode&gt;${billNo}&lt;/deliveryOrderCode&gt;&#xd;
        &lt;orderType&gt;XSDD_JITX&lt;/orderType&gt;&#xd;
        &lt;warehouseCode&gt;595DA&lt;/warehouseCode&gt;&#xd;
        &lt;orderFlag/&gt;&#xd;
        &lt;sourcePlatformCode&gt;WPH&lt;/sourcePlatformCode&gt;&#xd;
        &lt;sourcePlatformName&gt;唯品会JITX&lt;/sourcePlatformName&gt;&#xd;
        &lt;createTime&gt;2020-08-30 00:11:06&lt;/createTime&gt;&#xd;
        &lt;placeOrderTime&gt;2020-08-29 23:28:35&lt;/placeOrderTime&gt;&#xd;
        &lt;payTime&gt;2020-08-30 00:11:06&lt;/payTime&gt;&#xd;
        &lt;payNo&gt;20082936557980&lt;/payNo&gt;&#xd;
        &lt;operateTime&gt;2020-08-30 00:11:09&lt;/operateTime&gt;&#xd;
        &lt;shopNick&gt;${shopName}&lt;/shopNick&gt;&#xd;
        &lt;buyerNick/&gt;&#xd;
        &lt;totalAmount&gt;739.00&lt;/totalAmount&gt;&#xd;
        &lt;itemAmount&gt;739.00&lt;/itemAmount&gt;&#xd;
        &lt;discountAmount&gt;0.00&lt;/discountAmount&gt;&#xd;
        &lt;freight&gt;0.00&lt;/freight&gt;&#xd;
        &lt;arAmount&gt;0&lt;/arAmount&gt;&#xd;
        &lt;gotAmount&gt;739.00&lt;/gotAmount&gt;&#xd;
        &lt;ownerCode&gt;56283928-9&lt;/ownerCode&gt;&#xd;
        &lt;logisticsCode&gt;${deliveryTypeCode}&lt;/logisticsCode&gt;&#xd;
        &lt;logisticsName&gt;${deliveryTypeName}&lt;/logisticsName&gt;&#xd;
        &lt;buyerMessage/&gt;&#xd;
        &lt;expressCode&gt;${deliveryNo}&lt;/expressCode&gt;&#xd;
        &lt;sellerMessage/&gt;&#xd;
        &lt;remark/&gt;&#xd;
        &lt;senderInfo&gt;&#xd;
            &lt;name&gt;张华源&lt;/name&gt;&#xd;
            &lt;zipCode/&gt;&#xd;
            &lt;tel&gt;13505993076&lt;/tel&gt;&#xd;
            &lt;mobile&gt;13505993076&lt;/mobile&gt;&#xd;
            &lt;email/&gt;&#xd;
            &lt;province&gt;福建省&lt;/province&gt;&#xd;
            &lt;city&gt;泉州市&lt;/city&gt;&#xd;
            &lt;area&gt;南安市&lt;/area&gt;&#xd;
            &lt;detailAddress&gt;福建省泉州市南安市霞美镇福山工业园区顺丰新仓&lt;/detailAddress&gt;&#xd;
        &lt;/senderInfo&gt;&#xd;
        &lt;receiverInfo&gt;&#xd;
            &lt;name&gt;张*&lt;/name&gt;&#xd;
            &lt;zipCode&gt;236000&lt;/zipCode&gt;&#xd;
            &lt;tel/&gt;&#xd;
            &lt;mobile&gt;139****2333&lt;/mobile&gt;&#xd;
            &lt;email/&gt;&#xd;
            &lt;countryCode&gt;中国&lt;/countryCode&gt;&#xd;
            &lt;province&gt;安徽省&lt;/province&gt;&#xd;
            &lt;city&gt;阜阳市&lt;/city&gt;&#xd;
            &lt;area&gt;界首市&lt;/area&gt;&#xd;
            &lt;detailAddress&gt;安徽省 阜阳市 界首市 东城海能花园2栋1单元1202&lt;/detailAddress&gt;&#xd;
        &lt;/receiverInfo&gt;&#xd;
        &lt;invoiceFlag&gt;N&lt;/invoiceFlag&gt;&#xd;
        &lt;invoices&gt;&#xd;
            &lt;invoice&gt;&#xd;
                &lt;type/&gt;&#xd;
                &lt;header/&gt;&#xd;
                &lt;amount&gt;739&lt;/amount&gt;&#xd;
                &lt;content/&gt;&#xd;
                &lt;taxNumber/&gt;&#xd;
            &lt;/invoice&gt;&#xd;
        &lt;/invoices&gt;&#xd;
    &lt;/deliveryOrder&gt;&#xd;
    &lt;orderLines&gt;&#xd;
        &lt;orderLine&gt;&#xd;
            &lt;orderLineNo&gt;47911156&lt;/orderLineNo&gt;&#xd;
            &lt;sourceOrderCode&gt;20082936557980&lt;/sourceOrderCode&gt;&#xd;
            &lt;subSourceOrderCode/&gt;&#xd;
            &lt;ownerCode/&gt;&#xd;
            &lt;itemCode&gt;6918030107016&lt;/itemCode&gt;&#xd;
            &lt;itemId/&gt;&#xd;
            &lt;itemName&gt;梭织长裤&lt;/itemName&gt;&#xd;
            &lt;planQty&gt;${qty_return}&lt;/planQty&gt;&#xd;
            &lt;actualPrice&gt;739.000000&lt;/actualPrice&gt;&#xd;
        &lt;/orderLine&gt;&#xd;
    &lt;/orderLines&gt;&#xd;
    &lt;extendProps&gt;&#xd;
        &lt;is_gkd_order&gt;0&lt;/is_gkd_order&gt;&#xd;
        &lt;isv_pack_type_no&gt;attr1490838854282&lt;/isv_pack_type_no&gt;&#xd;
        &lt;extend&gt;[{&quot;erp_order_line_num&quot;:&quot;47911156&quot;,&quot;oid&quot;:&quot;&quot;,&quot;goods_id&quot;:&quot;${goodsId_return}&quot;,&quot;goods_sn&quot;:&quot;T11M021807FBK&quot;,&quot;shop_price&quot;:&quot;739.000000&quot;,&quot;discount&quot;:&quot;1.00000000&quot;,&quot;discount_fee&quot;:&quot;0.00&quot;,&quot;payment&quot;:&quot;739.00&quot;,&quot;share_price&quot;:&quot;739.000000&quot;,&quot;share_payment&quot;:&quot;739.00&quot;,&quot;share_discount_fee&quot;:&quot;0.00&quot;,&quot;cost_price&quot;:&quot;0.00&quot;,&quot;market_price&quot;:&quot;0.000000&quot;,&quot;goods_price&quot;:&quot;739.000000&quot;,&quot;share_other_discount_fee&quot;:&quot;0.00&quot;,&quot;outer_goods_sn&quot;:&quot;&quot;,&quot;outer_sku_id&quot;:0,&quot;sku_id&quot;:&quot;3682733&quot;,&quot;color_id&quot;:&quot;56380&quot;,&quot;size_id&quot;:&quot;4&quot;,&quot;is_gift&quot;:&quot;0&quot;,&quot;weigh&quot;:&quot;0.00&quot;,&quot;brand_id&quot;:&quot;100070&quot;,&quot;cat_id&quot;:&quot;100076&quot;,&quot;original_order_sn&quot;:&quot;AX2008304757884&quot;,&quot;original_deal_code&quot;:&quot;20082936557980&quot;,&quot;barcode&quot;:&quot;${barcode_return}&quot;,&quot;share_shipping_fee&quot;:&quot;0.00&quot;,&quot;tc_sku_id&quot;:&quot;0&quot;,&quot;cx_id&quot;:&quot;0&quot;,&quot;is_dzp&quot;:0,&quot;goods_attr&quot;:&quot;&quot;,&quot;size_code&quot;:&quot;XL&quot;,&quot;goods_note&quot;:&quot;&quot;}]&lt;/extend&gt;&#xd;
        &lt;order_id&gt;38919642&lt;/order_id&gt;&#xd;
        &lt;sd_id&gt;220344&lt;/sd_id&gt;&#xd;
        &lt;shop_code&gt;${shopCode}&lt;/shop_code&gt;&#xd;
        &lt;qd_id&gt;270&lt;/qd_id&gt;&#xd;
        &lt;user_id&gt;0&lt;/user_id&gt;&#xd;
        &lt;order_status&gt;1&lt;/order_status&gt;&#xd;
        &lt;shipping_status&gt;3&lt;/shipping_status&gt;&#xd;
        &lt;sync_status&gt;11&lt;/sync_status&gt;&#xd;
        &lt;sync_lock&gt;1&lt;/sync_lock&gt;&#xd;
        &lt;ck_id&gt;${wareHouseId_return}&lt;/ck_id&gt;&#xd;
        &lt;fhck_id&gt;${wareHouseId_return}&lt;/fhck_id&gt;&#xd;
        &lt;fhck_dm&gt;${wareHouseCode_return}&lt;/fhck_dm&gt;&#xd;
        &lt;fhck_kw_id&gt;100002&lt;/fhck_kw_id&gt;&#xd;
        &lt;stfhck_id&gt;0&lt;/stfhck_id&gt;&#xd;
        &lt;stfhck_kw_id&gt;1&lt;/stfhck_kw_id&gt;&#xd;
        &lt;receiver_country&gt;1&lt;/receiver_country&gt;&#xd;
        &lt;receiver_province&gt;340000&lt;/receiver_province&gt;&#xd;
        &lt;receiver_city&gt;341200&lt;/receiver_city&gt;&#xd;
        &lt;receiver_district&gt;341282&lt;/receiver_district&gt;&#xd;
        &lt;shipping_id&gt;19&lt;/shipping_id&gt;&#xd;
        &lt;goods_count&gt;1&lt;/goods_count&gt;&#xd;
        &lt;sku_count&gt;1&lt;/sku_count&gt;&#xd;
        &lt;is_weigh&gt;0&lt;/is_weigh&gt;&#xd;
        &lt;weigh&gt;0.00&lt;/weigh&gt;&#xd;
        &lt;invoice_amount&gt;739&lt;/invoice_amount&gt;&#xd;
        &lt;pay_id&gt;3&lt;/pay_id&gt;&#xd;
        &lt;pay_name&gt;支付宝&lt;/pay_name&gt;&#xd;
        &lt;pay_code&gt;alipay&lt;/pay_code&gt;&#xd;
        &lt;pay_status&gt;2&lt;/pay_status&gt;&#xd;
        &lt;shipping_time_tzph&gt;1598717470&lt;/shipping_time_tzph&gt;&#xd;
        &lt;total_amount&gt;739.00&lt;/total_amount&gt;&#xd;
        &lt;market_goods_amount&gt;739.00&lt;/market_goods_amount&gt;&#xd;
        &lt;shipping_fee&gt;0.00&lt;/shipping_fee&gt;&#xd;
        &lt;cod_fee&gt;0.00&lt;/cod_fee&gt;&#xd;
        &lt;other_discount_fee&gt;0.00&lt;/other_discount_fee&gt;&#xd;
        &lt;discount_fee&gt;0.00&lt;/discount_fee&gt;&#xd;
        &lt;is_yfp&gt;1&lt;/is_yfp&gt;&#xd;
        &lt;status_kc&gt;1&lt;/status_kc&gt;&#xd;
        &lt;is_combine_new&gt;0&lt;/is_combine_new&gt;&#xd;
        &lt;is_combine&gt;0&lt;/is_combine&gt;&#xd;
        &lt;is_split&gt;0&lt;/is_split&gt;&#xd;
        &lt;is_split_new&gt;0&lt;/is_split_new&gt;&#xd;
        &lt;is_copy&gt;0&lt;/is_copy&gt;&#xd;
        &lt;is_hh&gt;0&lt;/is_hh&gt;&#xd;
        &lt;mdck_id&gt;0&lt;/mdck_id&gt;&#xd;
        &lt;is_customization&gt;0&lt;/is_customization&gt;&#xd;
        &lt;cxsp/&gt;&#xd;
        &lt;system/&gt;&#xd;
        &lt;edit_shipping_time&gt;0&lt;/edit_shipping_time&gt;&#xd;
        &lt;outWareHouseType&gt;1&lt;/outWareHouseType&gt;&#xd;
        &lt;priority&gt;1&lt;/priority&gt;&#xd;
        &lt;vendor_code/&gt;&#xd;
        &lt;carrier&gt;sf&lt;/carrier&gt;&#xd;
        &lt;carrier_product/&gt;&#xd;
        &lt;monthly_account&gt;5954822258&lt;/monthly_account&gt;&#xd;
        &lt;out_warehouse_type&gt;1&lt;/out_warehouse_type&gt;&#xd;
        &lt;orig_bill_type&gt;4&lt;/orig_bill_type&gt;&#xd;
        &lt;source&gt;VPH_JITX&lt;/source&gt;&#xd;
        &lt;brand_code&gt;FILA&lt;/brand_code&gt;&#xd;
        &lt;brandName&gt;FILA&lt;/brandName&gt;&#xd;
        &lt;shipping_product&gt;sf&lt;/shipping_product&gt;&#xd;
        &lt;is_electprouct&gt;0&lt;/is_electprouct&gt;&#xd;
        &lt;company_note/&gt;&#xd;
        &lt;erp_order_type&gt;jitx&lt;/erp_order_type&gt;&#xd;
    &lt;/extendProps&gt;&#xd;
&lt;/request&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/service/api/oms/FXOMS?${tswms_fxoms_urlvar}&amp;app_secret=${tswms_fxoms_secret}&amp;sign=${tswms_fxoms_sign}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">20000</stringProp>
                <stringProp name="HTTPSampler.response_timeout">30000</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="tswms_fxoms_urlvar" elementType="Argument">
                      <stringProp name="Argument.name">tswms_fxoms_urlvar</stringProp>
                      <stringProp name="Argument.value">app_key=12203817&amp;target_app_key=12203817&amp;method=taobao.qimen.deliveryorder.create&amp;timestamp=2018-08-07 13:33:48&amp;app_secret=b77988be8817404062882de0250e6567&amp;format=xml&amp;sign_method=md5&amp;v=2.0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="tswms_fxoms_postvar_header" elementType="Argument">
                      <stringProp name="Argument.name">tswms_fxoms_postvar_header</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="tswms_fxoms_secret" elementType="Argument">
                      <stringProp name="Argument.name">tswms_fxoms_secret</stringProp>
                      <stringProp name="Argument.value">b77988be8817404062882de0250e6567</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="tswms_fxoms_postvar_content" elementType="Argument">
                      <stringProp name="Argument.name">tswms_fxoms_postvar_content</stringProp>
                      <stringProp name="Argument.value">&lt;request&gt;&lt;deliveryOrder&gt;&lt;deliveryOrderCode&gt;HQ1908190000008&lt;/deliveryOrderCode&gt;&lt;orderType&gt;JYCK&lt;/orderType&gt;&lt;warehouseCode&gt;16&lt;/warehouseCode&gt;&lt;orderFlag/&gt;&lt;sourcePlatformCode&gt;JD&lt;/sourcePlatformCode&gt;&lt;sourcePlatformName&gt;京东&lt;/sourcePlatformName&gt;&lt;createTime&gt;2019-08-19 23:01:48&lt;/createTime&gt;&lt;placeOrderTime&gt;2019-08-19 23:01:48&lt;/placeOrderTime&gt;&lt;payTime&gt;2019-08-19 23:02:01&lt;/payTime&gt;&lt;payNo&gt;101161987989&lt;/payNo&gt;&lt;operateTime&gt;2019-08-19 23:02:08&lt;/operateTime&gt;&lt;shopNick&gt;北京吉元安踏京东专卖店&lt;/shopNick&gt;&lt;buyerNick&gt;jd_pepgumdtmyrw&lt;/buyerNick&gt;&lt;totalAmount&gt;109.00&lt;/totalAmount&gt;&lt;itemAmount&gt;119.00&lt;/itemAmount&gt;&lt;discountAmount&gt;10.00&lt;/discountAmount&gt;&lt;freight&gt;0.00&lt;/freight&gt;&lt;arAmount&gt;0&lt;/arAmount&gt;&lt;gotAmount&gt;109.00&lt;/gotAmount&gt;&lt;logisticsCode&gt;YTO_BJJY&lt;/logisticsCode&gt;&lt;logisticsName&gt;圆通速递北京吉元专用&lt;/logisticsName&gt;&lt;buyerMessage/&gt;&lt;expressCode/&gt;&lt;sellerMessage/&gt;&lt;remark/&gt;&lt;senderInfo&gt;&lt;name&gt;孙艳波&lt;/name&gt;&lt;zipCode&gt;362261&lt;/zipCode&gt;&lt;tel&gt;010-85893455-8098&lt;/tel&gt;&lt;mobile&gt;010-85893455-8098&lt;/mobile&gt;&lt;email/&gt;&lt;province&gt;福建省&lt;/province&gt;&lt;city&gt;泉州市&lt;/city&gt;&lt;area&gt;晋江市&lt;/area&gt;&lt;detailAddress&gt;福建省泉州市晋江市五里工业区欣鑫22号鸿达物流3号仓库&lt;/detailAddress&gt;&lt;/senderInfo&gt;&lt;receiverInfo&gt;&lt;name&gt;倪玉微&lt;/name&gt;&lt;zipCode/&gt;&lt;tel&gt;18627537337&lt;/tel&gt;&lt;mobile&gt;18627537337&lt;/mobile&gt;&lt;email/&gt;&lt;countryCode&gt;中国&lt;/countryCode&gt;&lt;province&gt;湖南省&lt;/province&gt;&lt;city&gt;株洲市&lt;/city&gt;&lt;area&gt;炎陵县&lt;/area&gt;&lt;detailAddress&gt;湖南省 株洲市 炎陵县 霞阳镇龙井小区&lt;/detailAddress&gt;&lt;/receiverInfo&gt;&lt;invoiceFlag&gt;N&lt;/invoiceFlag&gt;&lt;invoices&gt;&lt;invoice&gt;&lt;type/&gt;&lt;header/&gt;&lt;amount&gt;109&lt;/amount&gt;&lt;content/&gt;&lt;taxNumber/&gt;&lt;/invoice&gt;&lt;/invoices&gt;&lt;/deliveryOrder&gt;&lt;orderLines&gt;&lt;orderLine&gt;&lt;orderLineNo&gt;7&lt;/orderLineNo&gt;&lt;sourceOrderCode&gt;101161987989&lt;/sourceOrderCode&gt;&lt;subSourceOrderCode/&gt;&lt;ownerCode/&gt;&lt;itemCode&gt;6903711302583&lt;/itemCode&gt;&lt;itemId/&gt;&lt;itemName&gt;篮球鞋&lt;/itemName&gt;&lt;planQty&gt;1&lt;/planQty&gt;&lt;actualPrice&gt;109.00&lt;/actualPrice&gt;&lt;/orderLine&gt;&lt;/orderLines&gt;&lt;extendProps&gt;&lt;isv_pack_type_no&gt;attr1490838854282&lt;/isv_pack_type_no&gt;&lt;extend&gt;[{&quot;erp_order_line_num&quot;:&quot;7&quot;,&quot;oid&quot;:&quot;&quot;,&quot;goods_id&quot;:&quot;109240&quot;,&quot;goods_sn&quot;:&quot;31831104-1&quot;,&quot;shop_price&quot;:&quot;279.00&quot;,&quot;discount&quot;:&quot;0.4265&quot;,&quot;discount_fee&quot;:&quot;160.00&quot;,&quot;payment&quot;:&quot;119.00&quot;,&quot;share_price&quot;:&quot;109.00&quot;,&quot;share_payment&quot;:&quot;109.00&quot;,&quot;share_discount_fee&quot;:&quot;150.00&quot;,&quot;cost_price&quot;:&quot;0.00&quot;,&quot;market_price&quot;:&quot;299.00&quot;,&quot;goods_price&quot;:&quot;119.00&quot;,&quot;share_other_discount_fee&quot;:&quot;10.00&quot;,&quot;outer_goods_sn&quot;:&quot;30691973749&quot;,&quot;outer_sku_id&quot;:0,&quot;sku_id&quot;:&quot;1&quot;,&quot;color_id&quot;:&quot;2&quot;,&quot;size_id&quot;:&quot;2&quot;,&quot;is_gift&quot;:&quot;0&quot;,&quot;weigh&quot;:&quot;0.00&quot;,&quot;brand_id&quot;:&quot;0&quot;,&quot;cat_id&quot;:&quot;0&quot;,&quot;original_order_sn&quot;:&quot;FX1908080000001&quot;,&quot;original_deal_code&quot;:&quot;101161987989&quot;,&quot;barcode&quot;:&quot;6903711302583&quot;,&quot;share_shipping_fee&quot;:&quot;0.00&quot;,&quot;tc_sku_id&quot;:&quot;0&quot;,&quot;cx_id&quot;:&quot;0&quot;,&quot;is_dzp&quot;:0,&quot;goods_attr&quot;:&quot;5a6J6LiP56ul6Z6LMjAxOeaYpeeni+Wto+aWsOasvuearue9kee7k+WQiOmAj+awlOeUt+S4reWkp+erpei\/kOWKqOmei+iIkumAguWHj+mch+WEv+erpeevrueQg+meizMxODMxMTA0IOm7kS\/lpKflrabnuqIv5a6J6LiP55m9LTEgMzgv5YaF&quot;}]&lt;/extend&gt;&lt;order_id&gt;8&lt;/order_id&gt;&lt;sd_id&gt;10170&lt;/sd_id&gt;&lt;shop_code&gt;BJJY_ANTAFXJDOB&lt;/shop_code&gt;&lt;qd_id&gt;33&lt;/qd_id&gt;&lt;user_id&gt;0&lt;/user_id&gt;&lt;order_status&gt;1&lt;/order_status&gt;&lt;shipping_status&gt;3&lt;/shipping_status&gt;&lt;sync_status&gt;0&lt;/sync_status&gt;&lt;sync_lock&gt;1&lt;/sync_lock&gt;&lt;ck_id&gt;100031&lt;/ck_id&gt;&lt;fhck_id&gt;100031&lt;/fhck_id&gt;&lt;fhck_dm&gt;CK_BJQZSC&lt;/fhck_dm&gt;&lt;fhck_kw_id&gt;100002&lt;/fhck_kw_id&gt;&lt;stfhck_id&gt;0&lt;/stfhck_id&gt;&lt;stfhck_kw_id&gt;0&lt;/stfhck_kw_id&gt;&lt;receiver_country&gt;1&lt;/receiver_country&gt;&lt;receiver_province&gt;430000&lt;/receiver_province&gt;&lt;receiver_city&gt;430200&lt;/receiver_city&gt;&lt;receiver_district&gt;430225&lt;/receiver_district&gt;&lt;shipping_id&gt;149&lt;/shipping_id&gt;&lt;goods_count&gt;1&lt;/goods_count&gt;&lt;sku_count&gt;1&lt;/sku_count&gt;&lt;is_weigh&gt;0&lt;/is_weigh&gt;&lt;weigh&gt;0.00&lt;/weigh&gt;&lt;invoice_amount&gt;109&lt;/invoice_amount&gt;&lt;pay_id&gt;5&lt;/pay_id&gt;&lt;pay_name&gt;网银在线&lt;/pay_name&gt;&lt;pay_code&gt;chinabank&lt;/pay_code&gt;&lt;pay_status&gt;2&lt;/pay_status&gt;&lt;shipping_time_tzph&gt;1570624275&lt;/shipping_time_tzph&gt;&lt;total_amount&gt;279.00&lt;/total_amount&gt;&lt;market_goods_amount&gt;279.00&lt;/market_goods_amount&gt;&lt;shipping_fee&gt;0.00&lt;/shipping_fee&gt;&lt;cod_fee&gt;0.00&lt;/cod_fee&gt;&lt;other_discount_fee&gt;10.00&lt;/other_discount_fee&gt;&lt;discount_fee&gt;160.00&lt;/discount_fee&gt;&lt;is_yfp&gt;0&lt;/is_yfp&gt;&lt;status_kc&gt;1&lt;/status_kc&gt;&lt;is_combine_new&gt;0&lt;/is_combine_new&gt;&lt;is_combine&gt;0&lt;/is_combine&gt;&lt;is_split&gt;0&lt;/is_split&gt;&lt;is_split_new&gt;0&lt;/is_split_new&gt;&lt;is_copy&gt;1&lt;/is_copy&gt;&lt;is_hh&gt;0&lt;/is_hh&gt;&lt;mdck_id&gt;0&lt;/mdck_id&gt;&lt;is_customization&gt;0&lt;/is_customization&gt;&lt;cxsp/&gt;&lt;system/&gt;&lt;edit_shipping_time&gt;1570624271&lt;/edit_shipping_time&gt;&lt;outWareHouseType&gt;0&lt;/outWareHouseType&gt;&lt;priority&gt;1&lt;/priority&gt;&lt;vendor_code/&gt;&lt;carrier&gt;YTO_BJJY&lt;/carrier&gt;&lt;carrier_product/&gt;&lt;monthly_account/&gt;&lt;out_warehouse_type&gt;0&lt;/out_warehouse_type&gt;&lt;orig_bill_type&gt;3&lt;/orig_bill_type&gt;&lt;/extendProps&gt;&lt;/request&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="billNoFile" elementType="Argument">
                      <stringProp name="Argument.name">billNoFile</stringProp>
                      <stringProp name="Argument.value">data/billNo.csv</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </Arguments>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">/*import com.anta.jmeter.AntaRSAUtilWMS;
String postjson = vars.get(&quot;tswms_fxoms_urlvar&quot;);
String content_header= vars.get(&quot;tswms_fxoms_postvar_header&quot;);
String content= vars.get(&quot;tswms_fxoms_postvar_content&quot;);
String secret= vars.get(&quot;tswms_fxoms_secret&quot;);

String data = content_header+&quot;\r\n&quot;+content;
String sign =  AntaRSAUtilWMS.generaSignature(postjson,data,secret);
vars.put(&quot;tswms_fxoms_sign&quot;,sign);
*/

import com.anta.jmeter.AntaRSAUtilWMS;
import org.apache.jmeter.config.Arguments;

Arguments args = sampler.getArguments();
String postjson = vars.get(&quot;tswms_fxoms_urlvar&quot;);
String secret= vars.get(&quot;tswms_fxoms_secret&quot;);
String content = args.toString();

String sign = AntaRSAUtilWMS.generaSignature(postjson, content.substring(1, content.length()-2), secret);
vars.put(&quot;tswms_fxoms_sign&quot;,sign);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1867169789">success</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 后置处理程序" enabled="false">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import com.anta.jmeter.WriteFileUtil;

String billNo = vars.get(&quot;billNo&quot;);
String billNoFile=vars.get(&quot;billNoFile&quot;);

WriteFileUtil.writeFile(billNoFile,billNo);

/*
${billNo}
${barcode}
${deliveryNo}
*/</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 缓存响应数据" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">// cache response data for monitor write file
vars.put(&quot;xResponseData&quot;, prev.getResponseDataAsString());

//
//System.out.println(&quot;sampler response data is &quot; + prev.getResponseDataAsString());</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
              </hashTree>
              <SwitchController guiclass="SwitchControllerGui" testclass="SwitchController" testname="Switch控制器" enabled="true">
                <stringProp name="SwitchController.value">顺丰WMS出库回传-JITX</stringProp>
              </SwitchController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="顺丰WMS出库回传-JITX" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">logistics_interface=&lt;Request service=&quot;SALE_ORDER_OUTBOUND_DETAIL_PUSH_SERVICE&quot;lang=&quot;zh-CN&quot;&gt;&lt;Body&gt;&lt;SaleOrderOutboundDetailRequest&gt;&lt;CompanyCode&gt;56283928-9&lt;/CompanyCode&gt;&lt;SaleOrders&gt;&lt;SaleOrder&gt;&lt;WarehouseCode&gt;595DA&lt;/WarehouseCode&gt;&lt;ErpOrder&gt;${billNo}&lt;/ErpOrder&gt;&lt;ShipmentId&gt;OAT${__time(yyMMddHHmmssSSS,)}${__Random(0,9,)}&lt;/ShipmentId&gt;&lt;WayBillNo&gt;${deliveryNo}&lt;/WayBillNo&gt;&lt;ActualShipDateTime&gt;2020-08-30 09:58:57&lt;/ActualShipDateTime&gt;&lt;Carrier&gt;唯品会顺丰&lt;/Carrier&gt;&lt;CarrierProduct&gt;唯品会顺丰&lt;/CarrierProduct&gt;&lt;ErpOrderType&gt;jitx&lt;/ErpOrderType&gt;&lt;IsSplit&gt;N&lt;/IsSplit&gt;&lt;DataStatus&gt;2900&lt;/DataStatus&gt;&lt;UserDef2&gt;595AT0007*1&lt;/UserDef2&gt;&lt;UserDef4&gt;E3Plus_ALI&lt;/UserDef4&gt;&lt;UserDef7&gt;0.0&lt;/UserDef7&gt;&lt;UserDef8&gt;0.0&lt;/UserDef8&gt;&lt;Items&gt;&lt;Item&gt;&lt;ErpOrderLineNum&gt;47911156&lt;/ErpOrderLineNum&gt;&lt;SkuNo&gt;${barcode}&lt;/SkuNo&gt;&lt;ActualQty&gt;1&lt;/ActualQty&gt;&lt;QtyUm&gt;EA&lt;/QtyUm&gt;&lt;/Item&gt;&lt;/Items&gt;&lt;Containers&gt;&lt;Container&gt;&lt;ContainerNo&gt;${deliveryNo}&lt;/ContainerNo&gt;&lt;ContainerType&gt;0&lt;/ContainerType&gt;&lt;Weight&gt;0.325&lt;/Weight&gt;&lt;WeightUm&gt;KG&lt;/WeightUm&gt;&lt;ContainerItems&gt;&lt;Item&gt;&lt;SkuNo&gt;${barcode}&lt;/SkuNo&gt;&lt;ActualQty&gt;1&lt;/ActualQty&gt;&lt;Weight&gt;0.325&lt;/Weight&gt;&lt;WeightUm&gt;KG&lt;/WeightUm&gt;&lt;InventoryStatus&gt;10&lt;/InventoryStatus&gt;&lt;UserDef3&gt;47911156&lt;/UserDef3&gt;&lt;SerialNumbers/&gt;&lt;/Item&gt;&lt;/ContainerItems&gt;&lt;/Container&gt;&lt;/Containers&gt;&lt;/SaleOrder&gt;&lt;/SaleOrders&gt;&lt;/SaleOrderOutboundDetailRequest&gt;&lt;/Body&gt;&lt;/Request&gt;&amp;warehouseCode=595DA&amp;data_digest=XfAOyXyDCSPApRbVZpmzXw==</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/service/api/wms/SF</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV 数据文件设置" enabled="false">
                    <stringProp name="delimiter">,</stringProp>
                    <stringProp name="fileEncoding">UTF-8</stringProp>
                    <stringProp name="filename">jitx/billNoFile_JITX.csv</stringProp>
                    <boolProp name="ignoreFirstLine">false</boolProp>
                    <boolProp name="quotedData">false</boolProp>
                    <boolProp name="recycle">false</boolProp>
                    <stringProp name="shareMode">shareMode.all</stringProp>
                    <boolProp name="stopThread">false</boolProp>
                    <stringProp name="variableNames">billNo,barcode,deliveryNo</stringProp>
                  </CSVDataSet>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="2524">OK</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 缓存响应数据" enabled="true">
                    <boolProp name="resetInterpreter">false</boolProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="script">// cache response data for monitor write file
vars.put(&quot;xResponseData&quot;, prev.getResponseDataAsString());

//
//System.out.println(&quot;sampler response data is &quot; + prev.getResponseDataAsString());</stringProp>
                  </BeanShellPostProcessor>
                  <hashTree/>
                </hashTree>
                <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell-JITX订单落地" enabled="true">
                  <stringProp name="BeanShellSampler.query">import com.anta.jmeter.WriteFileUtil;

String billNo = vars.get(&quot;billNo&quot;);
String barcode = vars.get(&quot;barcode&quot;);
String deliveryNo = vars.get(&quot;deliveryNo&quot;);
String txtcontent = billNo + &quot;,&quot; 
				+ barcode + &quot;,&quot; 
				+ deliveryNo;
				
//log.info(txtcontent);

String jitxBillNoFile=vars.get(&quot;jitxBillNoFile&quot;);
WriteFileUtil.writeFile(jitxBillNoFile, txtcontent);</stringProp>
                  <stringProp name="BeanShellSampler.filename"></stringProp>
                  <stringProp name="BeanShellSampler.parameters"></stringProp>
                  <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                </BeanShellSampler>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.TransactionsPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transactions per Second" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">30000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Over Time" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">30000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <BeanShellListener guiclass="TestBeanGUI" testclass="BeanShellListener" testname="错误监听器" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">import java.text.SimpleDateFormat;
import com.jmeterx.async.AsyncFileUtils;

String errSamplerFile = vars.get(&quot;errSamplerFile&quot;);

if (!prev.isSuccessful()) {
	String samplerData = prev.getSamplerData();
	String responseData = vars.get(&quot;xResponseData&quot;);
	//String responseData = prev.getResponseDataAsString();
	
	SimpleDateFormat fmt =  new 
		SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss.SSS&quot;);
	String begtime = fmt.format(prev.getStartTime());
	String endtime = fmt.format(prev.getEndTime());
	
	String data = &quot;sampler error&quot;
		+ &quot;\n======beg=======\n&quot; 
		+ &quot;Sampler &quot; + prev.getSampleLabel()
		+ &quot;\nTime &quot; + begtime + &quot; - &quot; + endtime 
		+ &quot;\n&quot; + samplerData
		+ &quot;\nResponse data:\n&quot; 
		+ responseData
		+ &quot;\n======end=======\n&quot;;

	AsyncFileUtils.writeLine(errSamplerFile, data);
}
</stringProp>
        </BeanShellListener>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="jp@gc - 顺丰WMS出库回传-JITX" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">stoptestnow</stringProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="Threads initial delay">1</stringProp>
        <stringProp name="Start users count">50</stringProp>
        <stringProp name="Start users count burst">50</stringProp>
        <stringProp name="Start users period">120</stringProp>
        <stringProp name="Stop users count">30</stringProp>
        <stringProp name="Stop users period">1</stringProp>
        <stringProp name="flighttime">300</stringProp>
        <stringProp name="rampUp">5</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${__if(${xenv},debug,${wan},${__RandomFromMultipleVars(ip1|ip2,)},)}</stringProp>
          <stringProp name="HTTPSampler.port">8085</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="顺丰WMS出库回传-JITX" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">logistics_interface=&lt;Request service=&quot;SALE_ORDER_OUTBOUND_DETAIL_PUSH_SERVICE&quot;lang=&quot;zh-CN&quot;&gt;&lt;Body&gt;&lt;SaleOrderOutboundDetailRequest&gt;&lt;CompanyCode&gt;56283928-9&lt;/CompanyCode&gt;&lt;SaleOrders&gt;&lt;SaleOrder&gt;&lt;WarehouseCode&gt;595DA&lt;/WarehouseCode&gt;&lt;ErpOrder&gt;${billNo}&lt;/ErpOrder&gt;&lt;ShipmentId&gt;OAT202008300405030440&lt;/ShipmentId&gt;&lt;WayBillNo&gt;${deliveryNo}&lt;/WayBillNo&gt;&lt;ActualShipDateTime&gt;2020-08-30 09:58:57&lt;/ActualShipDateTime&gt;&lt;Carrier&gt;唯品会顺丰&lt;/Carrier&gt;&lt;CarrierProduct&gt;唯品会顺丰&lt;/CarrierProduct&gt;&lt;ErpOrderType&gt;jitx&lt;/ErpOrderType&gt;&lt;IsSplit&gt;N&lt;/IsSplit&gt;&lt;DataStatus&gt;2900&lt;/DataStatus&gt;&lt;UserDef2&gt;595AT0007*1&lt;/UserDef2&gt;&lt;UserDef4&gt;E3Plus_ALI&lt;/UserDef4&gt;&lt;UserDef7&gt;0.0&lt;/UserDef7&gt;&lt;UserDef8&gt;0.0&lt;/UserDef8&gt;&lt;Items&gt;&lt;Item&gt;&lt;ErpOrderLineNum&gt;47911156&lt;/ErpOrderLineNum&gt;&lt;SkuNo&gt;${barcode}&lt;/SkuNo&gt;&lt;ActualQty&gt;1&lt;/ActualQty&gt;&lt;QtyUm&gt;EA&lt;/QtyUm&gt;&lt;/Item&gt;&lt;/Items&gt;&lt;Containers&gt;&lt;Container&gt;&lt;ContainerNo&gt;${deliveryNo}&lt;/ContainerNo&gt;&lt;ContainerType&gt;0&lt;/ContainerType&gt;&lt;Weight&gt;0.325&lt;/Weight&gt;&lt;WeightUm&gt;KG&lt;/WeightUm&gt;&lt;ContainerItems&gt;&lt;Item&gt;&lt;SkuNo&gt;${barcode}&lt;/SkuNo&gt;&lt;ActualQty&gt;1&lt;/ActualQty&gt;&lt;Weight&gt;0.325&lt;/Weight&gt;&lt;WeightUm&gt;KG&lt;/WeightUm&gt;&lt;InventoryStatus&gt;10&lt;/InventoryStatus&gt;&lt;UserDef3&gt;47911156&lt;/UserDef3&gt;&lt;SerialNumbers/&gt;&lt;/Item&gt;&lt;/ContainerItems&gt;&lt;/Container&gt;&lt;/Containers&gt;&lt;/SaleOrder&gt;&lt;/SaleOrders&gt;&lt;/SaleOrderOutboundDetailRequest&gt;&lt;/Body&gt;&lt;/Request&gt;&amp;warehouseCode=595DA&amp;data_digest=XfAOyXyDCSPApRbVZpmzXw==</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/service/api/wms/SF</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV 数据文件设置" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">jitx/billNoFile_JITX.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">billNo,barcode,deliveryNo</stringProp>
          </CSVDataSet>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2524">OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 缓存响应数据" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">// cache response data for monitor write file
vars.put(&quot;xResponseData&quot;, prev.getResponseDataAsString());

//
//System.out.println(&quot;sampler response data is &quot; + prev.getResponseDataAsString());</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="响应时间图" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <BeanShellListener guiclass="TestBeanGUI" testclass="BeanShellListener" testname="错误监听器" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">import java.text.SimpleDateFormat;
import com.jmeterx.async.AsyncFileUtils;

String errSamplerFile = vars.get(&quot;errSamplerFile&quot;);

if (!prev.isSuccessful()) {
	String samplerData = prev.getSamplerData();
	String responseData = vars.get(&quot;xResponseData&quot;);
	//String responseData = prev.getResponseDataAsString();
	
	SimpleDateFormat fmt =  new 
		SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss.SSS&quot;);
	String begtime = fmt.format(prev.getStartTime());
	String endtime = fmt.format(prev.getEndTime());
	
	String data = &quot;sampler error&quot;
		+ &quot;\n======beg=======\n&quot; 
		+ &quot;Sampler &quot; + prev.getSampleLabel()
		+ &quot;\nTime &quot; + begtime + &quot; - &quot; + endtime 
		+ &quot;\n&quot; + samplerData
		+ &quot;\nResponse data:\n&quot; 
		+ responseData
		+ &quot;\n======end=======\n&quot;;

	AsyncFileUtils.writeLine(errSamplerFile, data);
}
</stringProp>
        </BeanShellListener>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="jp@gc - XPOS订单" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="Threads initial delay">10</stringProp>
        <stringProp name="Start users count">100</stringProp>
        <stringProp name="Start users count burst">100</stringProp>
        <stringProp name="Start users period">0</stringProp>
        <stringProp name="Stop users count">30</stringProp>
        <stringProp name="Stop users period">1</stringProp>
        <stringProp name="flighttime">300</stringProp>
        <stringProp name="rampUp">5</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="商品数据" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">xpos/goods.csv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">goodsId,singleProductId,sku,barcode,platformGoodsId</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="店铺数据" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">xpos/shops.csv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">shopId,shopCode,shopName</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="计数器" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end">5</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">qty</stringProp>
          <stringProp name="CounterConfig.format">0</stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${__if(${xenv},debug,${wan},${__RandomFromMultipleVars(ip1|ip2,)},)}</stringProp>
          <stringProp name="HTTPSampler.port">8085</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="订单促销" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;dataContent&quot;:&quot;[{\&quot;orderBillNo\&quot;:\&quot;PF${__time(yyMMddHHmmssSSS,)}${__Random(111111,999999,)}\&quot;,\&quot;memberId\&quot;:\&quot;0\&quot;,\&quot;orderTime\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;,\&quot;paySettleMethodId\&quot;:\&quot;100081\&quot;,\&quot;qtyTotal\&quot;:\&quot;${qty}\&quot;,\&quot;amountTotal\&quot;:${__Random(111,999,)},\&quot;orgId\&quot;:\&quot;313625\&quot;,\&quot;shopId\&quot;:\&quot;${shopId}\&quot;,\&quot;singleProducts\&quot;:[{\&quot;goodsId\&quot;:\&quot;${goodsId}\&quot;,\&quot;singleProductId\&quot;:\&quot;${singleProductId}\&quot;,\&quot;platformGoodsId\&quot;:\&quot;${platformGoodsId}\&quot;,\&quot;qty\&quot;:\&quot;${qty}\&quot;,\&quot;amount\&quot;:${__Random(111,999,)},\&quot;isGift\&quot;:0}],\&quot;payDate\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;}]&quot;,&quot;token&quot;:&quot;admin&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/service/calculatePromotionService/calculatePromotion?${ddcx_urlvar}&amp;sign=${ddcx_sign}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">20000</stringProp>
          <stringProp name="HTTPSampler.response_timeout">30000</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ddcx_urlvar" elementType="Argument">
                <stringProp name="Argument.name">ddcx_urlvar</stringProp>
                <stringProp name="Argument.value">app_key=23212136&amp;target_app_key=23212136&amp;method=baison.eplus.orderdistribute.promotion&amp;timestamp=2019-02-18 15:05:24&amp;app_secret=437bd4a3f04b2cce8ccc41924b09dc49&amp;format=json&amp;sign_method=md5&amp;v=2.0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ddcx_secret" elementType="Argument">
                <stringProp name="Argument.name">ddcx_secret</stringProp>
                <stringProp name="Argument.value">437bd4a3f04b2cce8ccc41924b09dc49</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.anta.jmeter.AntaRSAUtil;
import org.apache.jmeter.config.Arguments;

Arguments args = sampler.getArguments();
String postjson = vars.get(&quot;ddcx_urlvar&quot;);
String secret= vars.get(&quot;ddcx_secret&quot;);
String content = args.toString();


String sign = AntaRSAUtil.generaSignature(postjson, content.substring(1, content.length()-2), secret);
vars.put(&quot;ddcx_sign&quot;,sign);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1100399465">&quot;result&quot;:&quot;SUCCESS&quot;,&quot;success&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器_ddcx_result" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">ddcx_result</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;result&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 缓存响应数据" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">// cache response data for monitor write file
vars.put(&quot;xResponseData&quot;, prev.getResponseDataAsString());

//
//System.out.println(&quot;sampler response data is &quot; + prev.getResponseDataAsString());</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果（If）控制器" enabled="true">
          <stringProp name="IfController.condition">${__jexl3(&quot;${ddcx_result}&quot; == &quot;SUCCESS&quot;,)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="订单分单" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;dataContent&quot;:&quot;[{\&quot;orderBillNo\&quot;:\&quot;TS${__time(yyMMddHHmmssSSS,)}${__Random(111111,999999,)}\&quot;,\&quot;shopCode\&quot;:\&quot;${shopCode}\&quot;,\&quot;supportCashOnDelivery\&quot;:0,\&quot;preSaleOrderBill\&quot;:0,\&quot;orderBusinessType\&quot;:\&quot;\&quot;,\&quot;contryCode\&quot;:\&quot;1\&quot;,\&quot;provinceCode\&quot;:\&quot;210000\&quot;,\&quot;cityCode\&quot;:\&quot;211300\&quot;,\&quot;areaCode\&quot;:\&quot;211381\&quot;,\&quot;skuDetail\&quot;:[{\&quot;sku\&quot;:\&quot;${sku}\&quot;,\&quot;barcode\&quot;:\&quot;${barcode}\&quot;,\&quot;qty\&quot;:\&quot;${__Random(1,5,)}\&quot;,\&quot;isGift\&quot;:\&quot;0\&quot;,\&quot;tc_sku_id\&quot;:\&quot;0\&quot;}],\&quot;isPureGift\&quot;:1}]&quot;,&quot;isQiMen&quot;:&quot;1&quot;,&quot;token&quot;:&quot;admin&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/service/orderDistributeCalculateService/distributeOrder?${ddfd_urlvar}&amp;sign=${ddfd_sign}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout">20000</stringProp>
            <stringProp name="HTTPSampler.response_timeout">30000</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ddfd_urlvar" elementType="Argument">
                  <stringProp name="Argument.name">ddfd_urlvar</stringProp>
                  <stringProp name="Argument.value">app_key=23212136&amp;target_app_key=23212136&amp;method=baison.eplus.orderdistribute.distributeorder&amp;timestamp=2019-02-18 15:05:24&amp;app_secret=437bd4a3f04b2cce8ccc41924b09dc49&amp;format=json&amp;sign_method=md5&amp;v=2.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ddfd_secret" elementType="Argument">
                  <stringProp name="Argument.name">ddfd_secret</stringProp>
                  <stringProp name="Argument.value">437bd4a3f04b2cce8ccc41924b09dc49</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import com.anta.jmeter.AntaRSAUtil;
import org.apache.jmeter.config.Arguments;

Arguments args = sampler.getArguments();
String postjson = vars.get(&quot;ddfd_urlvar&quot;);
String secret= vars.get(&quot;ddfd_secret&quot;);
String content = args.toString();

String sign = AntaRSAUtil.generaSignature(postjson, content.substring(1, content.length()-2), secret);
vars.put(&quot;ddfd_sign&quot;,sign);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-billNo" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">billNo</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;orderBillNo&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-wareHouseId_return" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">wareHouseId_return</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;wareHouseId&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-wareHouseCode_return" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">wareHouseCode_return</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;wareHouseCode&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-goodsId_return" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">goodsId_return</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;goodsId&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">783213</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-qty_return" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">qty_return</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;qty&quot;:(.+?)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-barcode_return" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">barcode_return</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;barcode&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-provinceId_return" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">provinceId_return</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;provinceId&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-whareaTypeId_return" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">whareaTypeId_return</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;whareaTypeId&quot;:(\d*)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1100399465">&quot;result&quot;:&quot;SUCCESS&quot;,&quot;success&quot;:true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器_ddfd_result" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">ddfd_result</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;result&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 缓存响应数据" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">// cache response data for monitor write file
vars.put(&quot;xResponseData&quot;, prev.getResponseDataAsString());

//
//System.out.println(&quot;sampler response data is &quot; + prev.getResponseDataAsString());</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果（If）控制器" enabled="true">
            <stringProp name="IfController.condition">${__jexl3(&quot;${ddfd_result}&quot; == &quot;SUCCESS&quot;,)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="订单创建" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;dataContent&quot;:&quot;[{\&quot;billNo\&quot;:\&quot;${billNo}\&quot;,\&quot;sourceBillNo\&quot;:\&quot;1205468822538361728\&quot;,\&quot;businessDate\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;,\&quot;type\&quot;:1,\&quot;billDate\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;,\&quot;isFromOMS\&quot;:1,\&quot;businessType\&quot;:1,\&quot;channelId\&quot;:\&quot;100026\&quot;,\&quot;channelCode\&quot;:\&quot;AG-003\&quot;,\&quot;channelName\&quot;:\&quot;\\u76f4\\u8425\\u7535\\u5546\&quot;,\&quot;shopId\&quot;:\&quot;200215\&quot;,\&quot;shopCode\&quot;:\&quot;BJGX_FilaTBOB\&quot;,\&quot;shopName\&quot;:\&quot;\\u5929\\u732b-fila\\u5b98\\u65b9\\u65d7\\u8230\\u5e97\&quot;,\&quot;wareHouseId\&quot;:\&quot;${wareHouseId_return}\&quot;,\&quot;wareHouseCode\&quot;:\&quot;${wareHouseCode_return}\&quot;,\&quot;wareHouseName\&quot;:\&quot;\\u6c88\\u9633\\u5927\\u60a6\\u57ceFILA\\u6f6e\\u724c\\u5e97\&quot;,\&quot;whareaTypeId\&quot;:\&quot;${whareaTypeId_return}\&quot;,\&quot;whareaTypeCode\&quot;:\&quot;SL001\&quot;,\&quot;whareaTypeName\&quot;:\&quot;\\u6b63\\u54c1\\u5e93\\u4f4d\&quot;,\&quot;vipCardNO\&quot;:null,\&quot;qty\&quot;:\&quot;${qty}\&quot;,\&quot;amountGoods\&quot;:\&quot;699.00\&quot;,\&quot;totalTaxPrice\&quot;:\&quot;699.00\&quot;,\&quot;amountStandard\&quot;:\&quot;780.00\&quot;,\&quot;amountTotal\&quot;:\&quot;780.00\&quot;,\&quot;amountTag\&quot;:\&quot;780.00\&quot;,\&quot;goodsConcession\&quot;:\&quot;81.00\&quot;,\&quot;amountDiscount\&quot;:\&quot;0.00\&quot;,\&quot;otherConcession\&quot;:\&quot;0.00\&quot;,\&quot;cashCouponAmount\&quot;:0,\&quot;orderType\&quot;:\&quot;1\&quot;,\&quot;oriOrderSn\&quot;:\&quot;AT2008254903858\&quot;,\&quot;oriDealCode\&quot;:\&quot;1205468822538361728\&quot;,\&quot;parentDealCode\&quot;:\&quot;\&quot;,\&quot;expressFee\&quot;:\&quot;0.00\&quot;,\&quot;freight\&quot;:\&quot;0.00\&quot;,\&quot;logisticsExtraFee\&quot;:\&quot;0.00\&quot;,\&quot;distributionfeeAmount\&quot;:\&quot;0.00\&quot;,\&quot;amountActual\&quot;:\&quot;699.00\&quot;,\&quot;payableAmount\&quot;:\&quot;699.00\&quot;,\&quot;amountPaid\&quot;:\&quot;699.00\&quot;,\&quot;status\&quot;:1,\&quot;distributionState\&quot;:2,\&quot;payState\&quot;:\&quot;2\&quot;,\&quot;payDate\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;,\&quot;payTime\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;,\&quot;platformAddTime\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;,\&quot;settleMethodId\&quot;:\&quot;100011\&quot;,\&quot;settleMethodCode\&quot;:\&quot;alipay\&quot;,\&quot;settleMethodName\&quot;:\&quot;\\u652f\\u4ed8\\u5b9d\&quot;,\&quot;remarks\&quot;:\&quot;\&quot;,\&quot;buyMsg\&quot;:\&quot;\&quot;,\&quot;platformId\&quot;:1,\&quot;platformCode\&quot;:\&quot;taobao\&quot;,\&quot;platformName\&quot;:\&quot;\\u6dd8\\u5b9d\&quot;,\&quot;currencyTypeId\&quot;:200012,\&quot;currencyTypeCode\&quot;:\&quot;RMB\&quot;,\&quot;currencyTypeName\&quot;:\&quot;\\u4eba\\u6c11\\u5e01\&quot;,\&quot;invoiceType\&quot;:\&quot;\&quot;,\&quot;invoiceContent\&quot;:\&quot;\&quot;,\&quot;invoicePayType\&quot;:0,\&quot;invoiceTitle\&quot;:\&quot;\&quot;,\&quot;invoiceAmount\&quot;:\&quot;699\&quot;,\&quot;invoiceNumber\&quot;:\&quot;\&quot;,\&quot;invoiceStatus\&quot;:\&quot;\&quot;,\&quot;isSplitNew\&quot;:\&quot;0\&quot;,\&quot;isCombineNew\&quot;:\&quot;0\&quot;,\&quot;isCopy\&quot;:\&quot;0\&quot;,\&quot;isShougong\&quot;:\&quot;0\&quot;,\&quot;goodsDetail\&quot;:[{\&quot;billNo\&quot;:\&quot;${billNo}\&quot;,\&quot;goodsId\&quot;:\&quot;${goodsId}\&quot;,\&quot;goodsCode\&quot;:\&quot;T12W034105FGA\&quot;,\&quot;goodsName\&quot;:\&quot;\\u65f6\\u5c1a\\u7403\\u978b\&quot;,\&quot;singleProductId\&quot;:\&quot;${singleProductId}\&quot;,\&quot;referencePrice\&quot;:\&quot;780.00\&quot;,\&quot;priceCost\&quot;:\&quot;0.00\&quot;,\&quot;priceStandard\&quot;:\&quot;780.00\&quot;,\&quot;shopPrice\&quot;:\&quot;780.00\&quot;,\&quot;priceTag\&quot;:\&quot;780.00\&quot;,\&quot;price\&quot;:\&quot;699.00\&quot;,\&quot;sharePrice\&quot;:\&quot;699.00\&quot;,\&quot;amountSettle\&quot;:\&quot;699.00\&quot;,\&quot;amount\&quot;:\&quot;699.00\&quot;,\&quot;qty\&quot;:\&quot;${qty}\&quot;,\&quot;amountCost\&quot;:0,\&quot;amountStandard\&quot;:780,\&quot;amountTag\&quot;:780,\&quot;amountSale\&quot;:699,\&quot;amountDiscount\&quot;:\&quot;0.00\&quot;,\&quot;isGift\&quot;:\&quot;0\&quot;,\&quot;isExchange\&quot;:\&quot;1\&quot;,\&quot;qtyReturned\&quot;:\&quot;0\&quot;,\&quot;discount\&quot;:\&quot;0.8962\&quot;,\&quot;barcode\&quot;:\&quot;${barcode}\&quot;,\&quot;oid\&quot;:\&quot;\&quot;,\&quot;VoucherCode\&quot;:\&quot;\&quot;,\&quot;setMealSpec\&quot;:\&quot;\&quot;,\&quot;otherConcession\&quot;:null,\&quot;childBillNo\&quot;:\&quot;1205468822538361728\&quot;,\&quot;childPlatformGoodsId\&quot;:\&quot;\&quot;,\&quot;childPlatformGoodsName\&quot;:\&quot;\&quot;,\&quot;childPlatformGoodsAttr\&quot;:\&quot;\&quot;}],\&quot;settleDetails\&quot;:[{\&quot;billNo\&quot;:\&quot;${billNo}\&quot;,\&quot;settleMethodId\&quot;:\&quot;100011\&quot;,\&quot;code\&quot;:\&quot;alipay\&quot;,\&quot;name\&quot;:\&quot;\\u652f\\u4ed8\\u5b9d\&quot;,\&quot;amountSettle\&quot;:\&quot;699.00\&quot;,\&quot;amountPaidIn\&quot;:\&quot;699.00\&quot;,\&quot;integralUsed\&quot;:\&quot;0\&quot;,\&quot;billNoRef\&quot;:\&quot;\&quot;,\&quot;remarks\&quot;:\&quot;\&quot;,\&quot;payDate\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;}],\&quot;antaDistributionInfos\&quot;:[{\&quot;billNo\&quot;:\&quot;${billNo}\&quot;,\&quot;onlineShopTransNo\&quot;:\&quot;1205468822538361728\&quot;,\&quot;TBDistriPurNo\&quot;:\&quot;\&quot;,\&quot;TBDistriTradeNo\&quot;:\&quot;\&quot;,\&quot;alipayTransNo\&quot;:\&quot;\&quot;,\&quot;countryId\&quot;:\&quot;1\&quot;,\&quot;provinceId\&quot;:\&quot;${provinceId_return}\&quot;,\&quot;cityId\&quot;:\&quot;211300\&quot;,\&quot;districtId\&quot;:\&quot;211381\&quot;,\&quot;address\&quot;:\&quot;\\u5357\\u5c71\\u8857\\u9053 \\u548c\\u5e73\\u8857\\u9633\\u5149\\u9ad8\\u5c422\\u5355\\u5143702\\u5ba4\&quot;,\&quot;zipCode\&quot;:\&quot;\&quot;,\&quot;deliveryTypeId\&quot;:\&quot;\&quot;,\&quot;deliveryTypeCode\&quot;:\&quot;\&quot;,\&quot;deliveryTypeName\&quot;:\&quot;\&quot;,\&quot;deliveryNo\&quot;:\&quot;\&quot;,\&quot;wareHouseOutId\&quot;:\&quot;100007788\&quot;,\&quot;whareaTypeOutId\&quot;:\&quot;100002\&quot;,\&quot;weigh\&quot;:\&quot;0.00\&quot;,\&quot;wareHouseDefaultId\&quot;:\&quot;100007788\&quot;,\&quot;wareHouseRealId\&quot;:\&quot;100007788\&quot;}],\&quot;createDate\&quot;:\&quot;${__time(yyyy-MM-dd HH:mm:ss,)}\&quot;,\&quot;salesPromotion\&quot;:\&quot;\&quot;,\&quot;couponsInfo\&quot;:\&quot;\&quot;}]&quot;,&quot;isQiMen&quot;:&quot;1&quot;,&quot;token&quot;:&quot;admin&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/service/retailOrderService/create?${ddcj_urlvar}&amp;sign=${ddcj_sign}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout">20000</stringProp>
              <stringProp name="HTTPSampler.response_timeout">30000</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ddcj_urlvar" elementType="Argument">
                    <stringProp name="Argument.name">ddcj_urlvar</stringProp>
                    <stringProp name="Argument.value">app_key=23212136&amp;target_app_key=23212136&amp;method=baison.eplus.retailorderbill.create&amp;timestamp=2019-02-18 15:05:24&amp;app_secret=437bd4a3f04b2cce8ccc41924b09dc49&amp;format=json&amp;sign_method=md5&amp;v=2.0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="ddcj_secret" elementType="Argument">
                    <stringProp name="Argument.name">ddcj_secret</stringProp>
                    <stringProp name="Argument.value">437bd4a3f04b2cce8ccc41924b09dc49</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </Arguments>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import com.anta.jmeter.AntaRSAUtil;
import org.apache.jmeter.config.Arguments;

Arguments args = sampler.getArguments();
String postjson = vars.get(&quot;ddcj_urlvar&quot;);
String secret= vars.get(&quot;ddcj_secret&quot;);
String content = args.toString();

String sign = AntaRSAUtil.generaSignature(postjson, content.substring(1, content.length()-2), secret);
vars.put(&quot;ddcj_sign&quot;,sign);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1100399465">&quot;result&quot;:&quot;SUCCESS&quot;,&quot;success&quot;:true</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器_ddcj_result" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ddcj_result</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;result&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 缓存响应数据" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">// cache response data for monitor write file
vars.put(&quot;xResponseData&quot;, prev.getResponseDataAsString());

//
//System.out.println(&quot;sampler response data is &quot; + prev.getResponseDataAsString());</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果（If）控制器" enabled="true">
              <stringProp name="IfController.condition">${__jexl3(&quot;${ddcj_result}&quot; == &quot;SUCCESS&quot;,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="快递适配" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;dataContent&quot;:&quot;[{\&quot;billNo\&quot;:\&quot;${billNo}\&quot;,\&quot;wareHouseId\&quot;:\&quot;${wareHouseId_return}\&quot;,\&quot;shopId\&quot;:\&quot;${shopId}\&quot;,\&quot;platformCode\&quot;:\&quot;taobao\&quot;,\&quot;payState\&quot;:\&quot;2\&quot;,\&quot;totalWeigh\&quot;:\&quot;0.00\&quot;,\&quot;amountTotal\&quot;:\&quot;699.00\&quot;,\&quot;provinceId\&quot;:\&quot;210000\&quot;,\&quot;cityId\&quot;:\&quot;211300\&quot;,\&quot;districtId\&quot;:\&quot;211381\&quot;,\&quot;ordertype\&quot;:0,\&quot;platformGoodsIds\&quot;:[${platformGoodsId}],\&quot;singleProductCodes\&quot;:[\&quot;T12W034105FGA6CN\&quot;],\&quot;isCod\&quot;:0,\&quot;jsxz\&quot;:0}]&quot;,&quot;token&quot;:&quot;admin&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/service/regionalExpressService/filterExpress?${kdsp_urlvar}&amp;sign=${kdsp_sign}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout">20000</stringProp>
                <stringProp name="HTTPSampler.response_timeout">30000</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="kdsp_urlvar" elementType="Argument">
                      <stringProp name="Argument.name">kdsp_urlvar</stringProp>
                      <stringProp name="Argument.value">app_key=23212136&amp;target_app_key=23212136&amp;method=baison.eplus.orderdistribute.shipping&amp;timestamp=2019-02-18 15:05:24&amp;app_secret=437bd4a3f04b2cce8ccc41924b09dc49&amp;format=json&amp;sign_method=md5&amp;v=2.0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="kdsp_secret" elementType="Argument">
                      <stringProp name="Argument.name">kdsp_secret</stringProp>
                      <stringProp name="Argument.value">437bd4a3f04b2cce8ccc41924b09dc49</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="billNoFile" elementType="Argument">
                      <stringProp name="Argument.name">billNoFile</stringProp>
                      <stringProp name="Argument.value">data/billNo.csv</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </Arguments>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import com.anta.jmeter.AntaRSAUtil;
import org.apache.jmeter.config.Arguments;

Arguments args = sampler.getArguments();
String postjson = vars.get(&quot;kdsp_urlvar&quot;);
String secret= vars.get(&quot;kdsp_secret&quot;);
String content = args.toString();

String sign = AntaRSAUtil.generaSignature(postjson, content.substring(1, content.length()-2), secret);
vars.put(&quot;kdsp_sign&quot;,sign);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1100399465">&quot;result&quot;:&quot;SUCCESS&quot;,&quot;success&quot;:true</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-logisticsCode_return" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">logisticsCode_return</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;code&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器-logisticsName_return" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">logisticsName_return</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;name&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器_kdsp_result" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">kdsp_result</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;result&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 后置处理程序" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">// 生成快递单号
long now = System.currentTimeMillis();
String deliveryCode = vars.get(&quot;logisticsCode_return&quot;);
String deliveryName = vars.get(&quot;logisticsName_return&quot;);
String deliveryNo = deliveryCode.toUpperCase() + Long.toString(now);

vars.put(&quot;deliveryNo&quot;, deliveryNo);
vars.put(&quot;deliveryName&quot;, deliveryName);
vars.put(&quot;deliveryCode&quot;, deliveryCode);

/*
log.info(deliveryNo);
log.info(deliveryName);
log.info(deliveryCode);
*/
</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 缓存响应数据" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">// cache response data for monitor write file
vars.put(&quot;xResponseData&quot;, prev.getResponseDataAsString());

//
//System.out.println(&quot;sampler response data is &quot; + prev.getResponseDataAsString());</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果（If）控制器" enabled="true">
                <stringProp name="IfController.condition">${__jexl3(&quot;${kdsp_result}&quot; == &quot;SUCCESS&quot;,)}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
                <boolProp name="IfController.useExpression">true</boolProp>
              </IfController>
              <hashTree>
                <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="xposBillNoFile" elementType="Argument">
                      <stringProp name="Argument.name">xposBillNoFile</stringProp>
                      <stringProp name="Argument.value">billNoFile_XPOS.csv</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </Arguments>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="推送XPOS" enabled="false">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;request&gt;&#xd;
    &lt;deliveryOrder&gt;&#xd;
        &lt;deliveryOrderCode&gt;${billNo}&lt;/deliveryOrderCode&gt;&#xd;
        &lt;preDeliveryOrderCode&gt;AT2008254903858&lt;/preDeliveryOrderCode&gt;&#xd;
        &lt;preDeliveryOrderId&gt;FLOD2008234107&lt;/preDeliveryOrderId&gt;&#xd;
        &lt;orderType&gt;HHCK&lt;/orderType&gt;&#xd;
        &lt;warehouseCode&gt;NEWPOS003656&lt;/warehouseCode&gt;&#xd;
        &lt;orderFlag/&gt;&#xd;
        &lt;sourcePlatformCode&gt;TB&lt;/sourcePlatformCode&gt;&#xd;
        &lt;sourcePlatformName&gt;淘宝&lt;/sourcePlatformName&gt;&#xd;
        &lt;createTime&gt;2020-08-31 16:12:18&lt;/createTime&gt;&#xd;
        &lt;placeOrderTime&gt;2020-08-31 16:12:18&lt;/placeOrderTime&gt;&#xd;
        &lt;payTime&gt;2020-08-25 21:38:09&lt;/payTime&gt;&#xd;
        &lt;payNo&gt;1205468822538361728&lt;/payNo&gt;&#xd;
        &lt;operateTime&gt;2020-08-31 16:12:21&lt;/operateTime&gt;&#xd;
        &lt;shopNick&gt;${shopName}&lt;/shopNick&gt;&#xd;
        &lt;buyerNick&gt;~a1pp590eM+7zwvID5xLH3CqLZVWe/xKGOf/pi2ngkyY=~2rX4RtFD4IkJkSEadvFX~1~~&lt;/buyerNick&gt;&#xd;
        &lt;totalAmount&gt;699.00&lt;/totalAmount&gt;&#xd;
        &lt;itemAmount&gt;699.00&lt;/itemAmount&gt;&#xd;
        &lt;discountAmount&gt;0.00&lt;/discountAmount&gt;&#xd;
        &lt;freight&gt;0.00&lt;/freight&gt;&#xd;
        &lt;arAmount&gt;0&lt;/arAmount&gt;&#xd;
        &lt;gotAmount&gt;699.00&lt;/gotAmount&gt;&#xd;
        &lt;ownerCode/&gt;&#xd;
        &lt;logisticsCode&gt;${logisticsCode_return}&lt;/logisticsCode&gt;&#xd;
        &lt;logisticsName&gt;${logisticsName_return}&lt;/logisticsName&gt;&#xd;
        &lt;buyerMessage/&gt;&#xd;
        &lt;expressCode/&gt;&#xd;
        &lt;sellerMessage&gt;原订单商家备注：&lt;/sellerMessage&gt;&#xd;
        &lt;remark/&gt;&#xd;
        &lt;senderInfo&gt;&#xd;
            &lt;name&gt;刘姝歆&lt;/name&gt;&#xd;
            &lt;zipCode/&gt;&#xd;
            &lt;tel&gt;15040351420&lt;/tel&gt;&#xd;
            &lt;mobile&gt;15040351420&lt;/mobile&gt;&#xd;
            &lt;email/&gt;&#xd;
            &lt;province&gt;辽宁省&lt;/province&gt;&#xd;
            &lt;city&gt;沈阳市&lt;/city&gt;&#xd;
            &lt;area&gt;大东区&lt;/area&gt;&#xd;
            &lt;detailAddress&gt;沈阳市大东区小东路大悦城1楼&lt;/detailAddress&gt;&#xd;
        &lt;/senderInfo&gt;&#xd;
        &lt;receiverInfo&gt;&#xd;
            &lt;name&gt;~bqJ9vINeTpEgm8ywBH0Lvw==~JvmS6EmX~1~~&lt;/name&gt;&#xd;
            &lt;zipCode&gt;000000&lt;/zipCode&gt;&#xd;
            &lt;tel/&gt;&#xd;
            &lt;mobile&gt;$UOhpN/t+Pr17utdLLdSljA==$Mpqjf/t77y9zNs0jxvvzMg==$1$$&lt;/mobile&gt;&#xd;
            &lt;email/&gt;&#xd;
            &lt;countryCode&gt;中国&lt;/countryCode&gt;&#xd;
            &lt;province&gt;辽宁省&lt;/province&gt;&#xd;
            &lt;city&gt;朝阳市&lt;/city&gt;&#xd;
            &lt;area&gt;北票市&lt;/area&gt;&#xd;
            &lt;detailAddress&gt;辽宁省 朝阳市 北票市 南山街道 和平街阳光高层2单元702室&lt;/detailAddress&gt;&#xd;
        &lt;/receiverInfo&gt;&#xd;
        &lt;invoiceFlag&gt;N&lt;/invoiceFlag&gt;&#xd;
        &lt;invoices&gt;&#xd;
            &lt;invoice&gt;&#xd;
                &lt;type/&gt;&#xd;
                &lt;header/&gt;&#xd;
                &lt;amount&gt;699&lt;/amount&gt;&#xd;
                &lt;content/&gt;&#xd;
                &lt;taxNumber/&gt;&#xd;
            &lt;/invoice&gt;&#xd;
        &lt;/invoices&gt;&#xd;
    &lt;/deliveryOrder&gt;&#xd;
    &lt;orderLines&gt;&#xd;
        &lt;orderLine&gt;&#xd;
            &lt;orderLineNo&gt;92368534&lt;/orderLineNo&gt;&#xd;
            &lt;sourceOrderCode/&gt;&#xd;
            &lt;subSourceOrderCode&gt;1205468822538361728&lt;/subSourceOrderCode&gt;&#xd;
            &lt;ownerCode&gt;ANTA_PRODUCT_MW_for_oms&lt;/ownerCode&gt;&#xd;
            &lt;itemCode&gt;6918030392252&lt;/itemCode&gt;&#xd;
            &lt;itemId/&gt;&#xd;
            &lt;itemName&gt;时尚球鞋&lt;/itemName&gt;&#xd;
            &lt;planQty&gt;${qty_return}&lt;/planQty&gt;&#xd;
            &lt;actualPrice&gt;699.000000&lt;/actualPrice&gt;&#xd;
        &lt;/orderLine&gt;&#xd;
    &lt;/orderLines&gt;&#xd;
    &lt;extendProps&gt;&#xd;
        &lt;is_gkd_order&gt;0&lt;/is_gkd_order&gt;&#xd;
        &lt;isv_pack_type_no&gt;attr1490838854282&lt;/isv_pack_type_no&gt;&#xd;
        &lt;extend&gt;[{&quot;erp_order_line_num&quot;:&quot;92368534&quot;,&quot;oid&quot;:&quot;1205468822538361728&quot;,&quot;goods_id&quot;:&quot;${goodsId_return}&quot;,&quot;goods_sn&quot;:&quot;T12W034105FGA&quot;,&quot;shop_price&quot;:&quot;780.000000&quot;,&quot;discount&quot;:&quot;0.89620000&quot;,&quot;discount_fee&quot;:&quot;0.00&quot;,&quot;payment&quot;:&quot;699.00&quot;,&quot;share_price&quot;:&quot;699.000000&quot;,&quot;share_payment&quot;:&quot;699.00&quot;,&quot;share_discount_fee&quot;:&quot;81.00&quot;,&quot;cost_price&quot;:&quot;0.00&quot;,&quot;market_price&quot;:&quot;780.000000&quot;,&quot;goods_price&quot;:&quot;699.000000&quot;,&quot;share_other_discount_fee&quot;:&quot;0.00&quot;,&quot;outer_goods_sn&quot;:&quot;&quot;,&quot;outer_sku_id&quot;:0,&quot;sku_id&quot;:&quot;11339731&quot;,&quot;color_id&quot;:&quot;106615&quot;,&quot;size_id&quot;:&quot;35&quot;,&quot;is_gift&quot;:&quot;0&quot;,&quot;weigh&quot;:&quot;0.00&quot;,&quot;brand_id&quot;:&quot;100070&quot;,&quot;cat_id&quot;:&quot;100020&quot;,&quot;original_order_sn&quot;:&quot;AT2008315062506&quot;,&quot;original_deal_code&quot;:&quot;&quot;,&quot;barcode&quot;:&quot;${barcode_return}&quot;,&quot;share_shipping_fee&quot;:&quot;0.00&quot;,&quot;tc_sku_id&quot;:&quot;0&quot;,&quot;cx_id&quot;:&quot;0&quot;,&quot;is_dzp&quot;:0,&quot;goods_attr&quot;:&quot;&quot;,&quot;size_code&quot;:&quot;6&quot;,&quot;goods_note&quot;:&quot;&quot;}]&lt;/extend&gt;&#xd;
        &lt;order_id&gt;70069598&lt;/order_id&gt;&#xd;
        &lt;sd_id&gt;${shopId}&lt;/sd_id&gt;&#xd;
        &lt;shop_code&gt;${shopCode}&lt;/shop_code&gt;&#xd;
        &lt;qd_id&gt;7&lt;/qd_id&gt;&#xd;
        &lt;user_id&gt;0&lt;/user_id&gt;&#xd;
        &lt;order_status&gt;1&lt;/order_status&gt;&#xd;
        &lt;shipping_status&gt;3&lt;/shipping_status&gt;&#xd;
        &lt;sync_status&gt;11&lt;/sync_status&gt;&#xd;
        &lt;sync_lock&gt;1&lt;/sync_lock&gt;&#xd;
        &lt;ck_id&gt;${wareHouseId_return}&lt;/ck_id&gt;&#xd;
        &lt;fhck_id&gt;${wareHouseId_return}&lt;/fhck_id&gt;&#xd;
        &lt;fhck_dm&gt;${wareHouseCode_return}&lt;/fhck_dm&gt;&#xd;
        &lt;fhck_kw_id&gt;100002&lt;/fhck_kw_id&gt;&#xd;
        &lt;stfhck_id&gt;0&lt;/stfhck_id&gt;&#xd;
        &lt;stfhck_kw_id&gt;1&lt;/stfhck_kw_id&gt;&#xd;
        &lt;receiver_country&gt;1&lt;/receiver_country&gt;&#xd;
        &lt;receiver_province&gt;210000&lt;/receiver_province&gt;&#xd;
        &lt;receiver_city&gt;211300&lt;/receiver_city&gt;&#xd;
        &lt;receiver_district&gt;211381&lt;/receiver_district&gt;&#xd;
        &lt;shipping_id&gt;19&lt;/shipping_id&gt;&#xd;
        &lt;goods_count&gt;1&lt;/goods_count&gt;&#xd;
        &lt;sku_count&gt;1&lt;/sku_count&gt;&#xd;
        &lt;is_weigh&gt;0&lt;/is_weigh&gt;&#xd;
        &lt;weigh&gt;0.00&lt;/weigh&gt;&#xd;
        &lt;invoice_amount&gt;699&lt;/invoice_amount&gt;&#xd;
        &lt;pay_id&gt;3&lt;/pay_id&gt;&#xd;
        &lt;pay_name&gt;支付宝&lt;/pay_name&gt;&#xd;
        &lt;pay_code&gt;alipay&lt;/pay_code&gt;&#xd;
        &lt;pay_status&gt;2&lt;/pay_status&gt;&#xd;
        &lt;shipping_time_tzph&gt;1598861541&lt;/shipping_time_tzph&gt;&#xd;
        &lt;total_amount&gt;780.00&lt;/total_amount&gt;&#xd;
        &lt;market_goods_amount&gt;780.00&lt;/market_goods_amount&gt;&#xd;
        &lt;shipping_fee&gt;0.00&lt;/shipping_fee&gt;&#xd;
        &lt;cod_fee&gt;0.00&lt;/cod_fee&gt;&#xd;
        &lt;other_discount_fee&gt;0.00&lt;/other_discount_fee&gt;&#xd;
        &lt;discount_fee&gt;81.00&lt;/discount_fee&gt;&#xd;
        &lt;is_yfp&gt;1&lt;/is_yfp&gt;&#xd;
        &lt;status_kc&gt;1&lt;/status_kc&gt;&#xd;
        &lt;is_combine_new&gt;0&lt;/is_combine_new&gt;&#xd;
        &lt;is_combine&gt;0&lt;/is_combine&gt;&#xd;
        &lt;is_split&gt;0&lt;/is_split&gt;&#xd;
        &lt;is_split_new&gt;0&lt;/is_split_new&gt;&#xd;
        &lt;is_copy&gt;0&lt;/is_copy&gt;&#xd;
        &lt;is_hh&gt;1&lt;/is_hh&gt;&#xd;
        &lt;mdck_id&gt;0&lt;/mdck_id&gt;&#xd;
        &lt;is_customization&gt;0&lt;/is_customization&gt;&#xd;
        &lt;cxsp/&gt;&#xd;
        &lt;system/&gt;&#xd;
        &lt;edit_shipping_time&gt;0&lt;/edit_shipping_time&gt;&#xd;
        &lt;outWareHouseType&gt;7&lt;/outWareHouseType&gt;&#xd;
        &lt;priority&gt;1&lt;/priority&gt;&#xd;
        &lt;vendor_code/&gt;&#xd;
        &lt;carrier&gt;${logisticsCode_return}&lt;/carrier&gt;&#xd;
        &lt;carrier_product/&gt;&#xd;
        &lt;monthly_account/&gt;&#xd;
        &lt;out_warehouse_type&gt;7&lt;/out_warehouse_type&gt;&#xd;
        &lt;orig_bill_type&gt;9&lt;/orig_bill_type&gt;&#xd;
        &lt;source/&gt;&#xd;
        &lt;brand_code&gt;FILA&lt;/brand_code&gt;&#xd;
        &lt;brandName&gt;FILA&lt;/brandName&gt;&#xd;
        &lt;shipping_product&gt;sf&lt;/shipping_product&gt;&#xd;
        &lt;is_electprouct&gt;0&lt;/is_electprouct&gt;&#xd;
        &lt;company_note/&gt;&#xd;
    &lt;/extendProps&gt;&#xd;
&lt;/request&gt;</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/service/api/oms/QM?${tswms_fxoms_urlvar}&amp;app_secret=${tswms_fxoms_secret}&amp;sign=${tswms_fxoms_sign}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout">20000</stringProp>
                  <stringProp name="HTTPSampler.response_timeout">30000</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="tswms_fxoms_urlvar" elementType="Argument">
                        <stringProp name="Argument.name">tswms_fxoms_urlvar</stringProp>
                        <stringProp name="Argument.value">app_key=12203817&amp;target_app_key=12203817&amp;method=taobao.qimen.deliveryorder.create&amp;timestamp=2018-08-07 13:33:48&amp;app_secret=b77988be8817404062882de0250e6567&amp;format=xml&amp;sign_method=md5&amp;v=2.0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="tswms_fxoms_postvar_header" elementType="Argument">
                        <stringProp name="Argument.name">tswms_fxoms_postvar_header</stringProp>
                        <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="tswms_fxoms_secret" elementType="Argument">
                        <stringProp name="Argument.name">tswms_fxoms_secret</stringProp>
                        <stringProp name="Argument.value">b77988be8817404062882de0250e6567</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="tswms_fxoms_postvar_content" elementType="Argument">
                        <stringProp name="Argument.name">tswms_fxoms_postvar_content</stringProp>
                        <stringProp name="Argument.value">&lt;request&gt;&lt;deliveryOrder&gt;&lt;deliveryOrderCode&gt;HQ1908190000008&lt;/deliveryOrderCode&gt;&lt;orderType&gt;JYCK&lt;/orderType&gt;&lt;warehouseCode&gt;16&lt;/warehouseCode&gt;&lt;orderFlag/&gt;&lt;sourcePlatformCode&gt;JD&lt;/sourcePlatformCode&gt;&lt;sourcePlatformName&gt;京东&lt;/sourcePlatformName&gt;&lt;createTime&gt;2019-08-19 23:01:48&lt;/createTime&gt;&lt;placeOrderTime&gt;2019-08-19 23:01:48&lt;/placeOrderTime&gt;&lt;payTime&gt;2019-08-19 23:02:01&lt;/payTime&gt;&lt;payNo&gt;101161987989&lt;/payNo&gt;&lt;operateTime&gt;2019-08-19 23:02:08&lt;/operateTime&gt;&lt;shopNick&gt;北京吉元安踏京东专卖店&lt;/shopNick&gt;&lt;buyerNick&gt;jd_pepgumdtmyrw&lt;/buyerNick&gt;&lt;totalAmount&gt;109.00&lt;/totalAmount&gt;&lt;itemAmount&gt;119.00&lt;/itemAmount&gt;&lt;discountAmount&gt;10.00&lt;/discountAmount&gt;&lt;freight&gt;0.00&lt;/freight&gt;&lt;arAmount&gt;0&lt;/arAmount&gt;&lt;gotAmount&gt;109.00&lt;/gotAmount&gt;&lt;logisticsCode&gt;YTO_BJJY&lt;/logisticsCode&gt;&lt;logisticsName&gt;圆通速递北京吉元专用&lt;/logisticsName&gt;&lt;buyerMessage/&gt;&lt;expressCode/&gt;&lt;sellerMessage/&gt;&lt;remark/&gt;&lt;senderInfo&gt;&lt;name&gt;孙艳波&lt;/name&gt;&lt;zipCode&gt;362261&lt;/zipCode&gt;&lt;tel&gt;010-85893455-8098&lt;/tel&gt;&lt;mobile&gt;010-85893455-8098&lt;/mobile&gt;&lt;email/&gt;&lt;province&gt;福建省&lt;/province&gt;&lt;city&gt;泉州市&lt;/city&gt;&lt;area&gt;晋江市&lt;/area&gt;&lt;detailAddress&gt;福建省泉州市晋江市五里工业区欣鑫22号鸿达物流3号仓库&lt;/detailAddress&gt;&lt;/senderInfo&gt;&lt;receiverInfo&gt;&lt;name&gt;倪玉微&lt;/name&gt;&lt;zipCode/&gt;&lt;tel&gt;18627537337&lt;/tel&gt;&lt;mobile&gt;18627537337&lt;/mobile&gt;&lt;email/&gt;&lt;countryCode&gt;中国&lt;/countryCode&gt;&lt;province&gt;湖南省&lt;/province&gt;&lt;city&gt;株洲市&lt;/city&gt;&lt;area&gt;炎陵县&lt;/area&gt;&lt;detailAddress&gt;湖南省 株洲市 炎陵县 霞阳镇龙井小区&lt;/detailAddress&gt;&lt;/receiverInfo&gt;&lt;invoiceFlag&gt;N&lt;/invoiceFlag&gt;&lt;invoices&gt;&lt;invoice&gt;&lt;type/&gt;&lt;header/&gt;&lt;amount&gt;109&lt;/amount&gt;&lt;content/&gt;&lt;taxNumber/&gt;&lt;/invoice&gt;&lt;/invoices&gt;&lt;/deliveryOrder&gt;&lt;orderLines&gt;&lt;orderLine&gt;&lt;orderLineNo&gt;7&lt;/orderLineNo&gt;&lt;sourceOrderCode&gt;101161987989&lt;/sourceOrderCode&gt;&lt;subSourceOrderCode/&gt;&lt;ownerCode/&gt;&lt;itemCode&gt;6903711302583&lt;/itemCode&gt;&lt;itemId/&gt;&lt;itemName&gt;篮球鞋&lt;/itemName&gt;&lt;planQty&gt;1&lt;/planQty&gt;&lt;actualPrice&gt;109.00&lt;/actualPrice&gt;&lt;/orderLine&gt;&lt;/orderLines&gt;&lt;extendProps&gt;&lt;isv_pack_type_no&gt;attr1490838854282&lt;/isv_pack_type_no&gt;&lt;extend&gt;[{&quot;erp_order_line_num&quot;:&quot;7&quot;,&quot;oid&quot;:&quot;&quot;,&quot;goods_id&quot;:&quot;109240&quot;,&quot;goods_sn&quot;:&quot;31831104-1&quot;,&quot;shop_price&quot;:&quot;279.00&quot;,&quot;discount&quot;:&quot;0.4265&quot;,&quot;discount_fee&quot;:&quot;160.00&quot;,&quot;payment&quot;:&quot;119.00&quot;,&quot;share_price&quot;:&quot;109.00&quot;,&quot;share_payment&quot;:&quot;109.00&quot;,&quot;share_discount_fee&quot;:&quot;150.00&quot;,&quot;cost_price&quot;:&quot;0.00&quot;,&quot;market_price&quot;:&quot;299.00&quot;,&quot;goods_price&quot;:&quot;119.00&quot;,&quot;share_other_discount_fee&quot;:&quot;10.00&quot;,&quot;outer_goods_sn&quot;:&quot;30691973749&quot;,&quot;outer_sku_id&quot;:0,&quot;sku_id&quot;:&quot;1&quot;,&quot;color_id&quot;:&quot;2&quot;,&quot;size_id&quot;:&quot;2&quot;,&quot;is_gift&quot;:&quot;0&quot;,&quot;weigh&quot;:&quot;0.00&quot;,&quot;brand_id&quot;:&quot;0&quot;,&quot;cat_id&quot;:&quot;0&quot;,&quot;original_order_sn&quot;:&quot;FX1908080000001&quot;,&quot;original_deal_code&quot;:&quot;101161987989&quot;,&quot;barcode&quot;:&quot;6903711302583&quot;,&quot;share_shipping_fee&quot;:&quot;0.00&quot;,&quot;tc_sku_id&quot;:&quot;0&quot;,&quot;cx_id&quot;:&quot;0&quot;,&quot;is_dzp&quot;:0,&quot;goods_attr&quot;:&quot;5a6J6LiP56ul6Z6LMjAxOeaYpeeni+Wto+aWsOasvuearue9kee7k+WQiOmAj+awlOeUt+S4reWkp+erpei\/kOWKqOmei+iIkumAguWHj+mch+WEv+erpeevrueQg+meizMxODMxMTA0IOm7kS\/lpKflrabnuqIv5a6J6LiP55m9LTEgMzgv5YaF&quot;}]&lt;/extend&gt;&lt;order_id&gt;8&lt;/order_id&gt;&lt;sd_id&gt;10170&lt;/sd_id&gt;&lt;shop_code&gt;BJJY_ANTAFXJDOB&lt;/shop_code&gt;&lt;qd_id&gt;33&lt;/qd_id&gt;&lt;user_id&gt;0&lt;/user_id&gt;&lt;order_status&gt;1&lt;/order_status&gt;&lt;shipping_status&gt;3&lt;/shipping_status&gt;&lt;sync_status&gt;0&lt;/sync_status&gt;&lt;sync_lock&gt;1&lt;/sync_lock&gt;&lt;ck_id&gt;100031&lt;/ck_id&gt;&lt;fhck_id&gt;100031&lt;/fhck_id&gt;&lt;fhck_dm&gt;CK_BJQZSC&lt;/fhck_dm&gt;&lt;fhck_kw_id&gt;100002&lt;/fhck_kw_id&gt;&lt;stfhck_id&gt;0&lt;/stfhck_id&gt;&lt;stfhck_kw_id&gt;0&lt;/stfhck_kw_id&gt;&lt;receiver_country&gt;1&lt;/receiver_country&gt;&lt;receiver_province&gt;430000&lt;/receiver_province&gt;&lt;receiver_city&gt;430200&lt;/receiver_city&gt;&lt;receiver_district&gt;430225&lt;/receiver_district&gt;&lt;shipping_id&gt;149&lt;/shipping_id&gt;&lt;goods_count&gt;1&lt;/goods_count&gt;&lt;sku_count&gt;1&lt;/sku_count&gt;&lt;is_weigh&gt;0&lt;/is_weigh&gt;&lt;weigh&gt;0.00&lt;/weigh&gt;&lt;invoice_amount&gt;109&lt;/invoice_amount&gt;&lt;pay_id&gt;5&lt;/pay_id&gt;&lt;pay_name&gt;网银在线&lt;/pay_name&gt;&lt;pay_code&gt;chinabank&lt;/pay_code&gt;&lt;pay_status&gt;2&lt;/pay_status&gt;&lt;shipping_time_tzph&gt;1570624275&lt;/shipping_time_tzph&gt;&lt;total_amount&gt;279.00&lt;/total_amount&gt;&lt;market_goods_amount&gt;279.00&lt;/market_goods_amount&gt;&lt;shipping_fee&gt;0.00&lt;/shipping_fee&gt;&lt;cod_fee&gt;0.00&lt;/cod_fee&gt;&lt;other_discount_fee&gt;10.00&lt;/other_discount_fee&gt;&lt;discount_fee&gt;160.00&lt;/discount_fee&gt;&lt;is_yfp&gt;0&lt;/is_yfp&gt;&lt;status_kc&gt;1&lt;/status_kc&gt;&lt;is_combine_new&gt;0&lt;/is_combine_new&gt;&lt;is_combine&gt;0&lt;/is_combine&gt;&lt;is_split&gt;0&lt;/is_split&gt;&lt;is_split_new&gt;0&lt;/is_split_new&gt;&lt;is_copy&gt;1&lt;/is_copy&gt;&lt;is_hh&gt;0&lt;/is_hh&gt;&lt;mdck_id&gt;0&lt;/mdck_id&gt;&lt;is_customization&gt;0&lt;/is_customization&gt;&lt;cxsp/&gt;&lt;system/&gt;&lt;edit_shipping_time&gt;1570624271&lt;/edit_shipping_time&gt;&lt;outWareHouseType&gt;0&lt;/outWareHouseType&gt;&lt;priority&gt;1&lt;/priority&gt;&lt;vendor_code/&gt;&lt;carrier&gt;YTO_BJJY&lt;/carrier&gt;&lt;carrier_product/&gt;&lt;monthly_account/&gt;&lt;out_warehouse_type&gt;0&lt;/out_warehouse_type&gt;&lt;orig_bill_type&gt;3&lt;/orig_bill_type&gt;&lt;/extendProps&gt;&lt;/request&gt;</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="billNoFile" elementType="Argument">
                        <stringProp name="Argument.name">billNoFile</stringProp>
                        <stringProp name="Argument.value">c:\\apache-jmeter-5.1.1\\bin\\script\\data\\billNo.csv</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="billNoFile2" elementType="Argument">
                        <stringProp name="Argument.name">billNoFile2</stringProp>
                        <stringProp name="Argument.value">/Users/toplin/Documents/apache-jmeter-5.1.1/bin/script/data/billNo.csv</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </Arguments>
                  <hashTree/>
                  <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <boolProp name="resetInterpreter">false</boolProp>
                    <stringProp name="script">/*import com.anta.jmeter.AntaRSAUtilWMS;
String postjson = vars.get(&quot;tswms_fxoms_urlvar&quot;);
String content_header= vars.get(&quot;tswms_fxoms_postvar_header&quot;);
String content= vars.get(&quot;tswms_fxoms_postvar_content&quot;);
String secret= vars.get(&quot;tswms_fxoms_secret&quot;);

String data = content_header+&quot;\r\n&quot;+content;
String sign =  AntaRSAUtilWMS.generaSignature(postjson,data,secret);
vars.put(&quot;tswms_fxoms_sign&quot;,sign);
*/

import com.anta.jmeter.AntaRSAUtilWMS;
import org.apache.jmeter.config.Arguments;

Arguments args = sampler.getArguments();
String postjson = vars.get(&quot;tswms_fxoms_urlvar&quot;);
String secret= vars.get(&quot;tswms_fxoms_secret&quot;);
String content = args.toString();

String sign = AntaRSAUtilWMS.generaSignature(postjson, content.substring(1, content.length()-2), secret);
vars.put(&quot;tswms_fxoms_sign&quot;,sign);</stringProp>
                  </BeanShellPreProcessor>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1867169789">success</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 缓存响应数据" enabled="true">
                    <boolProp name="resetInterpreter">false</boolProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="script">// cache response data for monitor write file
vars.put(&quot;xResponseData&quot;, prev.getResponseDataAsString());

//
//System.out.println(&quot;sampler response data is &quot; + prev.getResponseDataAsString());</stringProp>
                  </BeanShellPostProcessor>
                  <hashTree/>
                </hashTree>
                <SwitchController guiclass="SwitchControllerGui" testclass="SwitchController" testname="出库回传-XPOS" enabled="true">
                  <stringProp name="SwitchController.value">出库回传-XPOS</stringProp>
                </SwitchController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="出库回传-XPOS" enabled="false">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">appkey=NewRetailPOS&amp;timestamp=1598867101&amp;method=SALE.ORDER.OUTBOUND.DETAIL.PUSH&amp;sign=9ED5A3ADCFE05C85DB1222B3D99E3C6D&amp;data={&quot;Body&quot;:{&quot;SaleOrderOutboundDetailRequest&quot;:{&quot;CompanyCode&quot;:&quot;3656&quot;,&quot;SaleOrders&quot;:{&quot;SaleOrder&quot;:{&quot;WarehouseCode&quot;:&quot;NEWPOS003656&quot;,&quot;ErpOrderType&quot;:&quot;xsdd&quot;,&quot;ErpOrder&quot;:&quot;${billNo}&quot;,&quot;PosBillID&quot;:&quot;OD2008025393&quot;,&quot;WayBillNo&quot;:&quot;${deliveryNo}&quot;,&quot;ActualShipDateTime&quot;:&quot;${__time(yyyy-MM-dd HH:mm:ss,)}&quot;,&quot;Carrier&quot;:&quot;${__changeCase(${deliveryCode},UPPER,)}&quot;,&quot;CarrierProduct&quot;:&quot;&quot;,&quot;IsSplit&quot;:&quot;N&quot;,&quot;DataStatus&quot;:&quot;3900&quot;,&quot;UserDef1&quot;:&quot;&quot;,&quot;UserDef2&quot;:&quot;&quot;,&quot;UserDef3&quot;:&quot;&quot;,&quot;UserDef4&quot;:&quot;&quot;,&quot;UserDef5&quot;:&quot;&quot;,&quot;items&quot;:{&quot;item&quot;:[{&quot;ErpOrderLineNum&quot;:1,&quot;SkuNo&quot;:&quot;${barcode}&quot;,&quot;ActualQty&quot;:1,&quot;QtyUm&quot;:&quot;KG&quot;}]},&quot;Containers&quot;:null}}}}}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/service/api/wms/XPOS</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout">20000</stringProp>
                    <stringProp name="HTTPSampler.response_timeout">30000</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV 数据文件设置" enabled="false">
                      <stringProp name="delimiter">,</stringProp>
                      <stringProp name="fileEncoding">UTF-8</stringProp>
                      <stringProp name="filename">xpos/billNoFile_XPOS.csv</stringProp>
                      <boolProp name="ignoreFirstLine">false</boolProp>
                      <boolProp name="quotedData">false</boolProp>
                      <boolProp name="recycle">true</boolProp>
                      <stringProp name="shareMode">shareMode.all</stringProp>
                      <boolProp name="stopThread">false</boolProp>
                      <stringProp name="variableNames">billNo,barcode,deliveryNo,deliveryCode</stringProp>
                    </CSVDataSet>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1867169789">success</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 缓存响应数据" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">// cache response data for monitor write file
vars.put(&quot;xResponseData&quot;, prev.getResponseDataAsString());

//
//System.out.println(&quot;sampler response data is &quot; + prev.getResponseDataAsString());</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                  <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell-XPOS订单落地" enabled="true">
                    <stringProp name="BeanShellSampler.query">import com.anta.jmeter.WriteFileUtil;

String billNo = vars.get(&quot;billNo&quot;);
String barcode = vars.get(&quot;barcode&quot;);
String deliveryNo = vars.get(&quot;deliveryNo&quot;);
String deliveryCode = vars.get(&quot;deliveryCode&quot;);

String txtcontent = billNo + &quot;,&quot; 
				+ barcode + &quot;,&quot; 
				+ deliveryNo + &quot;,&quot;
				+ deliveryCode;
				
//log.info(txtcontent);

String xposBillNoFile=vars.get(&quot;xposBillNoFile&quot;);
WriteFileUtil.writeFile(xposBillNoFile, txtcontent);</stringProp>
                    <stringProp name="BeanShellSampler.filename"></stringProp>
                    <stringProp name="BeanShellSampler.parameters"></stringProp>
                    <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                  </BeanShellSampler>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.TransactionsPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transactions per Second" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">30000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Over Time" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">30000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
        <BeanShellListener guiclass="TestBeanGUI" testclass="BeanShellListener" testname="错误监听器" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">import java.text.SimpleDateFormat;
import com.jmeterx.async.AsyncFileUtils;

String errSamplerFile = vars.get(&quot;errSamplerFile&quot;);

if (!prev.isSuccessful()) {
	String samplerData = prev.getSamplerData();
	String responseData = vars.get(&quot;xResponseData&quot;);
	//String responseData = prev.getResponseDataAsString();
	
	SimpleDateFormat fmt =  new 
		SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss.SSS&quot;);
	String begtime = fmt.format(prev.getStartTime());
	String endtime = fmt.format(prev.getEndTime());
	
	String data = &quot;sampler error&quot;
		+ &quot;\n======beg=======\n&quot; 
		+ &quot;Sampler &quot; + prev.getSampleLabel()
		+ &quot;\nTime &quot; + begtime + &quot; - &quot; + endtime 
		+ &quot;\n&quot; + samplerData
		+ &quot;\nResponse data:\n&quot; 
		+ responseData
		+ &quot;\n======end=======\n&quot;;

	AsyncFileUtils.writeLine(errSamplerFile, data);
}
</stringProp>
        </BeanShellListener>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="jp@gc - 出库回传-XPOS" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">stoptestnow</stringProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="Threads initial delay">1</stringProp>
        <stringProp name="Start users count">50</stringProp>
        <stringProp name="Start users count burst">50</stringProp>
        <stringProp name="Start users period">120</stringProp>
        <stringProp name="Stop users count">30</stringProp>
        <stringProp name="Stop users period">1</stringProp>
        <stringProp name="flighttime">300</stringProp>
        <stringProp name="rampUp">5</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${__if(${xenv},debug,${wan},${__RandomFromMultipleVars(ip1|ip2,)},)}</stringProp>
          <stringProp name="HTTPSampler.port">8085</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="出库回传-XPOS" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">appkey=NewRetailPOS&amp;timestamp=1598867101&amp;method=SALE.ORDER.OUTBOUND.DETAIL.PUSH&amp;sign=9ED5A3ADCFE05C85DB1222B3D99E3C6D&amp;data={&quot;Body&quot;:{&quot;SaleOrderOutboundDetailRequest&quot;:{&quot;CompanyCode&quot;:&quot;3656&quot;,&quot;SaleOrders&quot;:{&quot;SaleOrder&quot;:{&quot;WarehouseCode&quot;:&quot;NEWPOS003656&quot;,&quot;ErpOrderType&quot;:&quot;xsdd&quot;,&quot;ErpOrder&quot;:&quot;${billNo}&quot;,&quot;PosBillID&quot;:&quot;OD2008025393&quot;,&quot;WayBillNo&quot;:&quot;${deliveryNo}&quot;,&quot;ActualShipDateTime&quot;:&quot;${__time(yyyy-MM-dd HH:mm:ss,)}&quot;,&quot;Carrier&quot;:&quot;${__changeCase(${deliveryCode},UPPER,)}&quot;,&quot;CarrierProduct&quot;:&quot;&quot;,&quot;IsSplit&quot;:&quot;N&quot;,&quot;DataStatus&quot;:&quot;3900&quot;,&quot;UserDef1&quot;:&quot;&quot;,&quot;UserDef2&quot;:&quot;&quot;,&quot;UserDef3&quot;:&quot;&quot;,&quot;UserDef4&quot;:&quot;&quot;,&quot;UserDef5&quot;:&quot;&quot;,&quot;items&quot;:{&quot;item&quot;:[{&quot;ErpOrderLineNum&quot;:1,&quot;SkuNo&quot;:&quot;${barcode}&quot;,&quot;ActualQty&quot;:1,&quot;QtyUm&quot;:&quot;KG&quot;}]},&quot;Containers&quot;:null}}}}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/service/api/wms/XPOS</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout">20000</stringProp>
          <stringProp name="HTTPSampler.response_timeout">30000</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV 数据文件设置" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">xpos/billNoFile_XPOS.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">billNo,barcode,deliveryNo,deliveryCode</stringProp>
          </CSVDataSet>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1867169789">success</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 缓存响应数据" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">// cache response data for monitor write file
vars.put(&quot;xResponseData&quot;, prev.getResponseDataAsString());

//
//System.out.println(&quot;sampler response data is &quot; + prev.getResponseDataAsString());</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="响应时间图" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <BeanShellListener guiclass="TestBeanGUI" testclass="BeanShellListener" testname="错误监听器" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">import java.text.SimpleDateFormat;
import com.jmeterx.async.AsyncFileUtils;

String errSamplerFile = vars.get(&quot;errSamplerFile&quot;);

if (!prev.isSuccessful()) {
	String samplerData = prev.getSamplerData();
	String responseData = vars.get(&quot;xResponseData&quot;);
	//String responseData = prev.getResponseDataAsString();
	
	SimpleDateFormat fmt =  new 
		SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss.SSS&quot;);
	String begtime = fmt.format(prev.getStartTime());
	String endtime = fmt.format(prev.getEndTime());
	
	String data = &quot;sampler error&quot;
		+ &quot;\n======beg=======\n&quot; 
		+ &quot;Sampler &quot; + prev.getSampleLabel()
		+ &quot;\nTime &quot; + begtime + &quot; - &quot; + endtime 
		+ &quot;\n&quot; + samplerData
		+ &quot;\nResponse data:\n&quot; 
		+ responseData
		+ &quot;\n======end=======\n&quot;;

	AsyncFileUtils.writeLine(errSamplerFile, data);
}
</stringProp>
        </BeanShellListener>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="样例调试" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">2</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="xoxb" elementType="Argument">
              <stringProp name="Argument.name">xoxb</stringProp>
              <stringProp name="Argument.value">${__if(${xenv},debug,${wan},${__RandomFromMultipleVars(ip1|ip2,)},)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="bbbb" elementType="Argument">
              <stringProp name="Argument.name">bbbb</stringProp>
              <stringProp name="Argument.value">${__xhome(data/b.log,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="xrspdata" elementType="Argument">
              <stringProp name="Argument.name">xrspdata</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${__if(${xenv},debug,${wan},${__RandomFromMultipleVars(ip1|ip2,)},)}</stringProp>
          <stringProp name="HTTPSampler.port">${xport}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="订单促销" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;dataContent&quot;:&quot;[{\&quot;orderBillNo\&quot;:\&quot;DC201902130001\&quot;,\&quot;memberId\&quot;:\&quot;43021\&quot;,\&quot;orderTime\&quot;:\&quot;2019-02-13 10:26:32\&quot;,\&quot;paySettleMethodId\&quot;:\&quot;100077\&quot;,\&quot;qtyTotal\&quot;:\&quot;1\&quot;,\&quot;amountTotal\&quot;:\&quot;320.00\&quot;,\&quot;orgId\&quot;:\&quot;313636\&quot;,\&quot;shopId\&quot;:\&quot;192\&quot;,\&quot;singleProducts\&quot;:[{\&quot;goodsId\&quot;:\&quot;102172\&quot;,\&quot;singleProductId\&quot;:\&quot;109255\&quot;,\&quot;qty\&quot;:\&quot;1\&quot;,\&quot;amount\&quot;:\&quot;320.00\&quot;,\&quot;isGift\&quot;:\&quot;0\&quot;}],\&quot;payDate\&quot;:\&quot;2019-02-13 10:30:19\&quot;}]&quot;,&quot;token&quot;:&quot;admin&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/service/calculatePromotionService/calculatePromotion?app_key=23212136&amp;target_app_key=23212136&amp;method=baison.eplus.orderdistribute.promotion&amp;timestamp=2019-02-18+15%3A05%3A24&amp;app_secret=437bd4a3f04b2cce8ccc41924b09dc49&amp;format=json&amp;sign_method=md5&amp;v=2.0&amp;sign=46072C925E443C7E1F64493DF8D062DC</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="订单分单" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;dataContent&quot;:&quot;[{\&quot;orderBillNo\&quot;:\&quot;FX1902180063322\&quot;,\&quot;shopCode\&quot;:\&quot;ZZAF_ANTAFXJDOB\&quot;,\&quot;isAllowPart\&quot;:\&quot;1\&quot;,\&quot;supportCashOnDelivery\&quot;:0,\&quot;preSaleOrderBill\&quot;:0,\&quot;contryCode\&quot;:\&quot;1\&quot;,\&quot;provinceCode\&quot;:\&quot;610000\&quot;,\&quot;cityCode\&quot;:\&quot;610100\&quot;,\&quot;areaCode\&quot;:\&quot;610113\&quot;,\&quot;skuDetail\&quot;:[{\&quot;sku\&quot;:\&quot;15817757-3LCN\&quot;,\&quot;barcode\&quot;:\&quot;6901849488797\&quot;,\&quot;qty\&quot;:\&quot;1\&quot;,\&quot;isGift\&quot;:\&quot;0\&quot;}]}]&quot;,&quot;token&quot;:&quot;admin&quot;}${__if(${__Random(0,9,)},2,&quot;aaaaaa&quot;,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/service/orderDistributeCalculateService/distributeOrder?app_key=23212136&amp;target_app_key=23212136&amp;method=baison.eplus.orderdistribute.distributeorder&amp;timestamp=2019-02-18+15%3A05%3A24&amp;app_secret=437bd4a3f04b2cce8ccc41924b09dc49&amp;format=json&amp;sign_method=md5&amp;v=2.0&amp;sign=1E3B093178C30A24FC6339599DCD1A4B</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1100399465">&quot;result&quot;:&quot;SUCCESS&quot;,&quot;success&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="false">
            <stringProp name="BeanShellAssertion.query">
System.out.println( &quot;prev addr is 1 &quot; + System.identityHashCode(prev));
System.out.println( &quot;Response code is &quot; + ResponseCode);
System.out.println( &quot;Response data2 is &quot; + ResponseData);

String response = prev.getResponseDataAsString();
System.out.println( &quot;Response data2 is &quot; + response);

System.out.println( &quot;SampleResult addr is &quot; + System.identityHashCode(SampleResult));

String samplerData = prev.getSamplerData();
System.out.println( &quot;prev sampler Data is &quot; + samplerData);

String responseData = prev.getResponseDataAsString();
System.out.println(&quot;prev responseData &quot; + responseData);
String responseData2 = SampleResult.getResponseDataAsString();
System.out.println(&quot;SampleResult responseData &quot; + responseData);

vars.put(&quot;prevrspdata&quot;, prev.getResponseDataAsString());</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 缓存响应数据" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">// cache response data for monitor write file
vars.put(&quot;xResponseData&quot;, prev.getResponseDataAsString());

//
//System.out.println(&quot;sampler response data is &quot; + prev.getResponseDataAsString());</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="订单快递适配" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;dataContent&quot;:&quot;[{\&quot;billNo\&quot;:\&quot;FX1902180063322\&quot;,\&quot;wareHouseId\&quot;:\&quot;100025\&quot;,\&quot;shopId\&quot;:\&quot;166\&quot;,\&quot;platformCode\&quot;:\&quot;jingdong\&quot;,\&quot;payState\&quot;:\&quot;2\&quot;,\&quot;totalWeigh\&quot;:\&quot;0.00\&quot;,\&quot;amountTotal\&quot;:\&quot;129.00\&quot;,\&quot;provinceId\&quot;:\&quot;610000\&quot;,\&quot;cityId\&quot;:\&quot;610100\&quot;,\&quot;districtId\&quot;:\&quot;610113\&quot;,\&quot;ordertype\&quot;:0,\&quot;platformGoodsIds\&quot;:[]}]&quot;,&quot;token&quot;:&quot;admin&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/service/regionalExpressService/filterExpress?app_key=23212136&amp;target_app_key=23212136&amp;method=baison.eplus.orderdistribute.shipping&amp;timestamp=2019-02-18+15%3A05%3A24&amp;app_secret=437bd4a3f04b2cce8ccc41924b09dc49&amp;format=json&amp;sign_method=md5&amp;v=2.0&amp;sign=689AC9780AE4916526554A5A52197B6B</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 缓存响应数据" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">// cache response data for monitor write file
vars.put(&quot;xResponseData&quot;, prev.getResponseDataAsString());

//
//System.out.println(&quot;sampler response data is &quot; + prev.getResponseDataAsString());

log.info(&quot;hello jmeter &quot; + vars.get(&quot;xplan&quot;));</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="订单创建" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;dataContent&quot;:&quot;[{\&quot;billNo\&quot;:\&quot;FX1902180063323\&quot;,\&quot;sourceBillNo\&quot;:\&quot;84017076701\&quot;,\&quot;businessDate\&quot;:\&quot;2019-02-18 14:59:14\&quot;,\&quot;type\&quot;:1,\&quot;billDate\&quot;:\&quot;2019-02-18 14:59:14\&quot;,\&quot;isFromOMS\&quot;:1,\&quot;channelId\&quot;:\&quot;313639\&quot;,\&quot;channelCode\&quot;:\&quot;999902A022\&quot;,\&quot;channelName\&quot;:\&quot;\\u90d1\\u5dde\\u5b89\\u53d1\\u4f53\\u80b2\\u7528\\u54c1\\u6709\\u9650\\u516c\\u53f8\&quot;,\&quot;shopId\&quot;:\&quot;166\&quot;,\&quot;shopCode\&quot;:\&quot;ZZAF_ANTAFXJDOB\&quot;,\&quot;shopName\&quot;:\&quot;\\u90d1\\u5dde\\u5b89\\u53d1\\u5b89\\u8e0f\\u4eac\\u4e1c\\u4e13\\u5356\\u5e97\&quot;,\&quot;wareHouseId\&quot;:\&quot;100025\&quot;,\&quot;wareHouseCode\&quot;:\&quot;ZZAFwh\&quot;,\&quot;wareHouseName\&quot;:\&quot;\\u90d1\\u5dde\\u5b89\\u53d1B2C\\u5b9e\\u4ed3\&quot;,\&quot;whareaTypeId\&quot;:\&quot;100002\&quot;,\&quot;whareaTypeCode\&quot;:\&quot;SL001\&quot;,\&quot;whareaTypeName\&quot;:\&quot;\\u6b63\\u54c1\\u5e93\\u4f4d\&quot;,\&quot;vipCardNO\&quot;:\&quot;jd_45c425221c8fd\&quot;,\&quot;memberName\&quot;:\&quot;\\u5f90\\u6b66\\u6770\&quot;,\&quot;memberNickName\&quot;:\&quot;jd_45c425221c8fd\&quot;,\&quot;qty\&quot;:\&quot;1\&quot;,\&quot;amountGoods\&quot;:\&quot;129.00\&quot;,\&quot;totalTaxPrice\&quot;:\&quot;129.00\&quot;,\&quot;amountStandard\&quot;:\&quot;239.00\&quot;,\&quot;amountTotal\&quot;:\&quot;239.00\&quot;,\&quot;amountTag\&quot;:\&quot;239.00\&quot;,\&quot;goodsConcession\&quot;:\&quot;110.00\&quot;,\&quot;amountDiscount\&quot;:\&quot;0.00\&quot;,\&quot;otherConcession\&quot;:\&quot;0.00\&quot;,\&quot;expressFee\&quot;:\&quot;0.00\&quot;,\&quot;freight\&quot;:\&quot;0.00\&quot;,\&quot;logisticsExtraFee\&quot;:\&quot;0.00\&quot;,\&quot;distributionfeeAmount\&quot;:\&quot;0.00\&quot;,\&quot;amountActual\&quot;:\&quot;129.00\&quot;,\&quot;payableAmount\&quot;:\&quot;129.00\&quot;,\&quot;amountPaid\&quot;:\&quot;129.00\&quot;,\&quot;status\&quot;:1,\&quot;distributionState\&quot;:2,\&quot;payState\&quot;:\&quot;2\&quot;,\&quot;payDate\&quot;:\&quot;2019-02-18 14:59:45\&quot;,\&quot;settleMethodId\&quot;:\&quot;100081\&quot;,\&quot;settleMethodCode\&quot;:\&quot;chinabank\&quot;,\&quot;settleMethodName\&quot;:\&quot;\\u7f51\\u94f6\\u5728\\u7ebf\&quot;,\&quot;remarks\&quot;:\&quot;\&quot;,\&quot;buyMsg\&quot;:\&quot;\&quot;,\&quot;platformId\&quot;:5,\&quot;platformCode\&quot;:\&quot;jingdong\&quot;,\&quot;platformName\&quot;:\&quot;\\u4eac\\u4e1c\&quot;,\&quot;currencyTypeId\&quot;:200012,\&quot;currencyTypeCode\&quot;:\&quot;RMB\&quot;,\&quot;currencyTypeName\&quot;:\&quot;\\u4eba\\u6c11\\u5e01\&quot;,\&quot;invoiceType\&quot;:\&quot;\&quot;,\&quot;invoiceContent\&quot;:\&quot;\&quot;,\&quot;invoicePayType\&quot;:0,\&quot;invoiceTitle\&quot;:\&quot;\&quot;,\&quot;invoiceAmount\&quot;:\&quot;129\&quot;,\&quot;invoiceNumber\&quot;:\&quot;\&quot;,\&quot;invoiceStatus\&quot;:\&quot;\&quot;,\&quot;goodsDetail\&quot;:[{\&quot;billNo\&quot;:\&quot;FX1902180063322\&quot;,\&quot;goodsId\&quot;:\&quot;123693\&quot;,\&quot;goodsCode\&quot;:\&quot;15817757-3\&quot;,\&quot;goodsName\&quot;:\&quot;\\u9488\\u7ec7\\u8fd0\\u52a8\\u957f\\u88e4\&quot;,\&quot;singleProductId\&quot;:\&quot;236128\&quot;,\&quot;referencePrice\&quot;:\&quot;0.00\&quot;,\&quot;priceCost\&quot;:\&quot;0.00\&quot;,\&quot;priceStandard\&quot;:\&quot;0.00\&quot;,\&quot;shopPrice\&quot;:\&quot;239.00\&quot;,\&quot;priceTag\&quot;:\&quot;239.00\&quot;,\&quot;price\&quot;:\&quot;129.00\&quot;,\&quot;sharePrice\&quot;:\&quot;129.00\&quot;,\&quot;amountSettle\&quot;:\&quot;129.00\&quot;,\&quot;amount\&quot;:\&quot;129.00\&quot;,\&quot;qty\&quot;:\&quot;1\&quot;,\&quot;amountCost\&quot;:0,\&quot;amountStandard\&quot;:239,\&quot;amountTag\&quot;:239,\&quot;amountSale\&quot;:129,\&quot;amountDiscount\&quot;:\&quot;110.00\&quot;,\&quot;isGift\&quot;:\&quot;0\&quot;,\&quot;isExchange\&quot;:\&quot;0\&quot;,\&quot;qtyReturned\&quot;:\&quot;0\&quot;,\&quot;discount\&quot;:\&quot;0.5397\&quot;,\&quot;barcode\&quot;:\&quot;6901849488797\&quot;,\&quot;oid\&quot;:\&quot;\&quot;,\&quot;VoucherCode\&quot;:\&quot;\&quot;,\&quot;setMealSpec\&quot;:\&quot;\&quot;}],\&quot;settleDetails\&quot;:[{\&quot;billNo\&quot;:\&quot;FX1902180063322\&quot;,\&quot;settleMethodId\&quot;:\&quot;100081\&quot;,\&quot;code\&quot;:\&quot;chinabank\&quot;,\&quot;name\&quot;:\&quot;\\u7f51\\u94f6\\u5728\\u7ebf\&quot;,\&quot;amountSettle\&quot;:\&quot;129.00\&quot;,\&quot;amountPaidIn\&quot;:\&quot;129.00\&quot;,\&quot;integralUsed\&quot;:\&quot;0\&quot;,\&quot;billNoRef\&quot;:\&quot;\&quot;,\&quot;remarks\&quot;:\&quot;\&quot;,\&quot;payDate\&quot;:\&quot;2019-02-18 14:59:45\&quot;}],\&quot;distributionInfos\&quot;:[{\&quot;billNo\&quot;:\&quot;FX1902180063322\&quot;,\&quot;onlineShopTransNo\&quot;:\&quot;84017076701\&quot;,\&quot;TBDistriPurNo\&quot;:\&quot;\&quot;,\&quot;TBDistriTradeNo\&quot;:\&quot;\&quot;,\&quot;alipayTransNo\&quot;:\&quot;\&quot;,\&quot;receiver\&quot;:\&quot;\\u5f90\\u6b66\\u6770\&quot;,\&quot;addressDesc\&quot;:\&quot;\\u9655\\u897f\\u897f\\u5b89\\u5e02\\u96c1\\u5854\\u533a\\u957f\\u5ef6\\u5821\\u8857\\u9053\\u6731\\u96c0\\u5927\\u8857\\u5357\\u7aef\\u4e0e\\u5357\\u4e09\\u73af\\u4ea4\\u6c47\\u5904\\u7d2b\\u90e1\\u957f\\u5b89\\u5c0f\\u533aD9\\u680b2310\\u5ba4\&quot;,\&quot;receiverTel\&quot;:\&quot;18292184254\&quot;,\&quot;mobile\&quot;:\&quot;18292184254\&quot;,\&quot;email\&quot;:\&quot;\&quot;,\&quot;countryId\&quot;:\&quot;1\&quot;,\&quot;provinceId\&quot;:\&quot;610000\&quot;,\&quot;cityId\&quot;:\&quot;610100\&quot;,\&quot;districtId\&quot;:\&quot;610113\&quot;,\&quot;address\&quot;:\&quot;\\u957f\\u5ef6\\u5821\\u8857\\u9053\\u6731\\u96c0\\u5927\\u8857\\u5357\\u7aef\\u4e0e\\u5357\\u4e09\\u73af\\u4ea4\\u6c47\\u5904\\u7d2b\\u90e1\\u957f\\u5b89\\u5c0f\\u533aD9\\u680b2310\\u5ba4\&quot;,\&quot;zipCode\&quot;:\&quot;\&quot;,\&quot;deliveryTypeId\&quot;:\&quot;100042\&quot;,\&quot;deliveryTypeCode\&quot;:\&quot;YUNDA_ZZAF\&quot;,\&quot;deliveryTypeName\&quot;:\&quot;\\u97f5\\u8fbe\\u70ed\\u654f\\u90d1\\u5dde\\u5b89\\u53d1\\u4e13\\u7528\&quot;,\&quot;deliveryNo\&quot;:\&quot;\&quot;,\&quot;wareHouseOutId\&quot;:\&quot;100025\&quot;,\&quot;whareaTypeOutId\&quot;:\&quot;100002\&quot;,\&quot;weigh\&quot;:\&quot;0.00\&quot;,\&quot;wareHouseDefaultId\&quot;:\&quot;100025\&quot;,\&quot;wareHouseRealId\&quot;:\&quot;100025\&quot;}],\&quot;createDate\&quot;:\&quot;2019-02-18 15:02:06\&quot;}]&quot;,&quot;token&quot;:&quot;admin&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/service/retailOrderService/create?app_key=23212136&amp;target_app_key=23212136&amp;method=baison.eplus.retailorderbill.create&amp;timestamp=2019-02-18+15%3A05%3A24&amp;app_secret=437bd4a3f04b2cce8ccc41924b09dc49&amp;format=json&amp;sign_method=md5&amp;v=2.0&amp;sign=41C19AD27A64FA583E4F8DB1FA16A51B</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Pos库存同步" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&amp;sign=6FBFCFBCB7E50F59BB2EEC652DC0D2D3&amp;data={&quot;data&quot;:{&quot;operationTime&quot;:&quot;2019-04-15 16:51:33&quot;,&quot;stores&quot;:{&quot;store&quot;:[{&quot;storeInventories&quot;:{&quot;storeInventory&quot;:[{&quot;billNum&quot;:1,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849045600&quot;},{&quot;billNum&quot;:2,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849045556&quot;},{&quot;billNum&quot;:3,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849045617&quot;},{&quot;billNum&quot;:4,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849045563&quot;},{&quot;billNum&quot;:5,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849045587&quot;},{&quot;billNum&quot;:6,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849045570&quot;},{&quot;billNum&quot;:7,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849045624&quot;},{&quot;billNum&quot;:8,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849045594&quot;},{&quot;billNum&quot;:9,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849048137&quot;},{&quot;billNum&quot;:10,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849048144&quot;},{&quot;billNum&quot;:11,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849048175&quot;},{&quot;billNum&quot;:12,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849048113&quot;},{&quot;billNum&quot;:13,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849048182&quot;},{&quot;billNum&quot;:14,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849048168&quot;},{&quot;billNum&quot;:15,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849048151&quot;},{&quot;billNum&quot;:16,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849048120&quot;},{&quot;billNum&quot;:17,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849048250&quot;},{&quot;billNum&quot;:18,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849048199&quot;},{&quot;billNum&quot;:19,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849048212&quot;},{&quot;billNum&quot;:20,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849048205&quot;},{&quot;billNum&quot;:21,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849048236&quot;},{&quot;billNum&quot;:22,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849048267&quot;},{&quot;billNum&quot;:23,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849048243&quot;},{&quot;billNum&quot;:24,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849048229&quot;},{&quot;billNum&quot;:25,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849048311&quot;},{&quot;billNum&quot;:26,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849048304&quot;},{&quot;billNum&quot;:27,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849048335&quot;},{&quot;billNum&quot;:28,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849048281&quot;},{&quot;billNum&quot;:29,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849048342&quot;},{&quot;billNum&quot;:30,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849048298&quot;},{&quot;billNum&quot;:31,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849048328&quot;},{&quot;billNum&quot;:32,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849048274&quot;},{&quot;billNum&quot;:33,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849050901&quot;},{&quot;billNum&quot;:34,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849050871&quot;},{&quot;billNum&quot;:35,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849050833&quot;},{&quot;billNum&quot;:36,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849050864&quot;},{&quot;billNum&quot;:37,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849050888&quot;},{&quot;billNum&quot;:38,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849050840&quot;},{&quot;billNum&quot;:39,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849050895&quot;},{&quot;billNum&quot;:40,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849050857&quot;},{&quot;billNum&quot;:41,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849051960&quot;},{&quot;billNum&quot;:42,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052011&quot;},{&quot;billNum&quot;:43,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849051991&quot;},{&quot;billNum&quot;:44,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849051984&quot;},{&quot;billNum&quot;:45,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849051953&quot;},{&quot;billNum&quot;:46,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052028&quot;},{&quot;billNum&quot;:47,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849051977&quot;},{&quot;billNum&quot;:48,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052004&quot;},{&quot;billNum&quot;:49,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052172&quot;},{&quot;billNum&quot;:50,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052141&quot;},{&quot;billNum&quot;:51,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052158&quot;},{&quot;billNum&quot;:52,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052127&quot;},{&quot;billNum&quot;:53,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052189&quot;},{&quot;billNum&quot;:54,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052134&quot;},{&quot;billNum&quot;:55,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052165&quot;},{&quot;billNum&quot;:56,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052110&quot;},{&quot;billNum&quot;:57,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052325&quot;},{&quot;billNum&quot;:58,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052349&quot;},{&quot;billNum&quot;:59,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052318&quot;},{&quot;billNum&quot;:60,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052295&quot;},{&quot;billNum&quot;:61,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052288&quot;},{&quot;billNum&quot;:62,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052271&quot;},{&quot;billNum&quot;:63,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052332&quot;},{&quot;billNum&quot;:64,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052301&quot;},{&quot;billNum&quot;:65,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052646&quot;},{&quot;billNum&quot;:66,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052660&quot;},{&quot;billNum&quot;:67,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052653&quot;},{&quot;billNum&quot;:68,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052615&quot;},{&quot;billNum&quot;:69,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052592&quot;},{&quot;billNum&quot;:70,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052622&quot;},{&quot;billNum&quot;:71,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052608&quot;},{&quot;billNum&quot;:72,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052639&quot;},{&quot;billNum&quot;:73,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052714&quot;},{&quot;billNum&quot;:74,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052677&quot;},{&quot;billNum&quot;:75,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052738&quot;},{&quot;billNum&quot;:76,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052684&quot;},{&quot;billNum&quot;:77,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052691&quot;},{&quot;billNum&quot;:78,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052707&quot;},{&quot;billNum&quot;:79,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052745&quot;},{&quot;billNum&quot;:80,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052721&quot;},{&quot;billNum&quot;:81,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052776&quot;},{&quot;billNum&quot;:82,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052752&quot;},{&quot;billNum&quot;:83,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052813&quot;},{&quot;billNum&quot;:84,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052820&quot;},{&quot;billNum&quot;:85,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052790&quot;},{&quot;billNum&quot;:86,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052769&quot;},{&quot;billNum&quot;:87,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052783&quot;},{&quot;billNum&quot;:88,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849052806&quot;},{&quot;billNum&quot;:89,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849054121&quot;},{&quot;billNum&quot;:90,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849054145&quot;},{&quot;billNum&quot;:91,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849054138&quot;},{&quot;billNum&quot;:92,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849054176&quot;},{&quot;billNum&quot;:93,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849054169&quot;},{&quot;billNum&quot;:94,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849054183&quot;},{&quot;billNum&quot;:95,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849054114&quot;},{&quot;billNum&quot;:96,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849054152&quot;},{&quot;billNum&quot;:97,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849054312&quot;},{&quot;billNum&quot;:98,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849054275&quot;},{&quot;billNum&quot;:99,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849054343&quot;},{&quot;billNum&quot;:100,&quot;inventoryType&quot;:&quot;CERTAINTY&quot;,&quot;itemId&quot;:0,&quot;outerId&quot;:&quot;&quot;,&quot;quantity&quot;:10000,&quot;skuId&quot;:&quot;6901849054299&quot;}]},&quot;warehouseId&quot;:&quot;ANTA00KL00&quot;,&quot;warehouseType&quot;:&quot;STORE&quot;}]},&quot;userId&quot;:&quot;ANTA201812191651330765490452138&quot;}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/service/api/wms/OBAO?method=taobao.qimen.storeinventory.iteminitial&amp;appkey=Anta_EC_test&amp;timestamp=1545209493</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell-jar" enabled="false">
          <stringProp name="BeanShellSampler.query">import java.util.Date;
import com.jmeterx.codec.XCodec;
import com.anta.jmeter.WriteFileUtil;
import com.jmeterx.async.AsyncFileUtils;


String deliveryTypeCode = &quot;sf&quot;;
String deliveryTypeName = &quot;顺丰速运&quot;;
String deliveryTypeIdRet = vars.get(&quot;deliveryTypeId_return&quot;);
String deliveryTypeNameEncode = XCodec.encodeUnicode(deliveryTypeName);

log.info(deliveryTypeNameEncode);
log.info(XCodec.decodeUnicode(deliveryTypeNameEncode));


String txtcontent = deliveryTypeCode + &quot;,&quot; 
				+ deliveryTypeName;
				
log.info(txtcontent);
String debugBillNoFile=vars.get(&quot;debugBillNoFile&quot;);
WriteFileUtil.writeFile(debugBillNoFile, txtcontent);

String bbbb = vars.get(&quot;bbbb&quot;);
log.info(bbbb);

AsyncFileUtils.writeLine(bbbb, txtcontent);
</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="debugBillNoFile" elementType="Argument">
                <stringProp name="Argument.name">debugBillNoFile</stringProp>
                <stringProp name="Argument.value">${__xhome(data/debugBillNoFile.csv,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <PostThreadGroup guiclass="PostThreadGroupGui" testclass="PostThreadGroup" testname="测试结束 - 数据落地" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </PostThreadGroup>
      <hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell 数据落地" enabled="true">
          <stringProp name="BeanShellSampler.query">import com.jmeterx.async.AsyncFileUtils;

AsyncFileUtils.closeAll();
log.info(&quot;seeyou jmeter &quot; + vars.get(&quot;xplan&quot;));</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
